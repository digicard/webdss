{"version":3,"file":"static/js/main.25ae79a6.js","mappings":"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","sources":["themes/Modern.js","LinkingConfiguration.js","config/GlobalVariableContext.js","config/Images.js","CustomCode.js","utils/openCamera.js","utils/CustomCodeErrorBoundary.js","utils/usePrevious.js","screens/AboutScreen.js","utils/handleRestApiResponse.js","apis/DcSSApi.js","screens/ActualizacionDeDatosScreen.js","screens/AprobacionesScreen.js","screens/BienvenidoScreen.js","screens/BlankScreen.js","screens/CompletaInicioSessionScreen.js","screens/ConsultaComedorScreen.js","screens/ConsultaDocumentosScreen.js","screens/ConsultaFichadasScreen.js","screens/ConsultaHorasExtrasScreen.js","GlobalStyles.js","screens/ConsultaSolicitudesScreen.js","screens/ConsultaSolicitudesScreenOLDScreen.js","screens/ConsultasScreen.js","screens/DetalleDocumentoScreen.js","screens/DevScreen.js","global-functions/passEncrypt.js","screens/IniciarSesionScreen.js","screens/InicioScreen.js","screens/NotificacionesScreen.js","screens/NuevoUsuarioScreen.js","screens/PermisoDeCamaraScreen.js","screens/PermisoDeContactosScreen.js","screens/PermisoDeMicrofonoScreen.js","screens/PermisoDeNotificacionesScreen.js","screens/PreviewCambioTurnoScreen.js","global-functions/Undef.js","screens/SolicitudCambioDeTurnoScreen.js","screens/SolicitudEPPScreen.js","screens/SolicitudPermisoAusenciaScreen.js","screens/SolicitudRetiroAnticipadoScreen.js","screens/SolicitudVacacionesScreen.js","screens/SolicitudesScreen.js","screens/YYYConsultaPresentismoScreen.js","screens/YYYExcelenciaScreen.js","screens/YYYMeritoScreen.js","screens/YYYNoMeAdhieroScreen.js","screens/YYYNotificacionesRespuestasScreen.js","screens/YYYOpcionesScreen.js","screens/YYYSiMeAdhieroScreen.js","screens/ZZZAprobacionRespuestaScreen.js","screens/ZZZAsuntoScreen.js","screens/ZZZAsuntosScreen.js","screens/ZZZConsultaComedorScreenOLDScreen.js","screens/ZZZConsultaReciboDeHaberesScreen.js","screens/ZZZEditarPerfilScreen.js","screens/ZZZPerfilScreen.js","screens/ZZZRequerimientosScreen.js","screens/ZZZTurnoActualScreen.js","screens/ZZZTurnoCambiarScreen.js","AppNavigator2.js","AppNavigator.js","config/cacheAssetsAsync.js","App.js","../../src/utils/StyleSheet.js","node_modules/moment/locale|sync|/^/.//.*$","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { systemWeights } from 'react-native-typography';\nexport default {\n  disabledOpacity: 0.5,\n  roundness: 12,\n  colors: {\n    Background: 'rgb(255, 255, 255)',\n    Divider: 'rgb(234, 237, 242)',\n    Error: 'rgba(255, 69, 100, 1)',\n    Light: 'rgb(151, 189, 245)',\n    Light_Inverse: 'rgb(141, 150, 155)',\n    Medium: 'rgb(66, 126, 215)',\n    Medium_Inverse: 'rgb(89, 85, 85)',\n    OptionMenu: 'rgb(87, 150, 201)',\n    OptionSelected: 'rgb(244, 118, 43)',\n    OptionUnselected: 'rgb(239, 216, 202)',\n    Pastel: 'rgb(231, 231, 213)',\n    Primary: 'rgb(26, 38, 164)',\n    Right: 'rgb(116, 220, 136)',\n    Secondary: 'rgb(37, 110, 220)',\n    Strong: 'rgba(18, 20, 44, 1)',\n    Strong_Green: 'rgb(13, 161, 41)',\n    Strong_Inverse: 'rgba(0, 0, 0, 0.85)',\n    Surface: 'rgb(95, 149, 231)',\n    Tooltip: 'rgb(250, 250, 0)',\n    VeryLight: 'rgb(223, 236, 255)',\n    background: 'rgb(255, 255, 255)',\n    divider: 'rgb(234, 237, 242)',\n    error: 'rgba(255, 69, 100, 1)',\n    light: 'rgb(151, 189, 245)',\n    lightInverse: 'rgb(141, 150, 155)',\n    medium: 'rgb(66, 126, 215)',\n    mediumInverse: 'rgb(89, 85, 85)',\n    optionMenu: 'rgb(87, 150, 201)',\n    optionSelected: 'rgb(244, 118, 43)',\n    optionUnselected: 'rgb(239, 216, 202)',\n    optionmenu: 'rgb(87, 150, 201)',\n    pastel: 'rgb(231, 231, 213)',\n    primary: 'rgb(26, 38, 164)',\n    right: 'rgb(116, 220, 136)',\n    secondary: 'rgb(37, 110, 220)',\n    strong: 'rgba(18, 20, 44, 1)',\n    strongGreen: 'rgb(13, 161, 41)',\n    strongInverse: 'rgba(0, 0, 0, 0.85)',\n    surface: 'rgb(95, 149, 231)',\n    tooltip: 'rgb(250, 250, 0)',\n    veryLight: 'rgb(223, 236, 255)',\n  },\n  typography: {\n    body1: {\n      ...systemWeights.bold,\n      fontSize: 16,\n      letterSpacing: 0,\n      lineHeight: 26,\n    },\n    body2: {\n      ...systemWeights.bold,\n      fontSize: 14,\n      letterSpacing: 0,\n      lineHeight: 22,\n    },\n    button: {\n      ...systemWeights.bold,\n      fontSize: 14,\n      letterSpacing: 0,\n      lineHeight: 16,\n    },\n    caption: {\n      fontFamily: 'System',\n      fontSize: 12,\n      letterSpacing: 0,\n      lineHeight: 16,\n    },\n    headline1: {\n      ...systemWeights.bold,\n      fontSize: 32,\n      letterSpacing: 0,\n      lineHeight: 38,\n    },\n    headline2: {\n      ...systemWeights.bold,\n      fontSize: 28,\n      letterSpacing: 0,\n      lineHeight: 34,\n    },\n    headline3: {\n      ...systemWeights.bold,\n      fontSize: 24,\n      letterSpacing: 0,\n      lineHeight: 28,\n    },\n    headline4: {\n      ...systemWeights.bold,\n      fontSize: 20,\n      letterSpacing: 0,\n      lineHeight: 24,\n    },\n    headline5: {\n      fontFamily: 'System',\n      fontSize: 20,\n      letterSpacing: 0,\n      lineHeight: 26,\n    },\n    headline6: {\n      fontFamily: 'System',\n      fontSize: 16,\n      letterSpacing: 0,\n      lineHeight: 24,\n    },\n    overline: {\n      fontFamily: 'System',\n      fontSize: 12,\n      letterSpacing: 2,\n      lineHeight: 16,\n    },\n    subtitle1: {\n      fontFamily: 'System',\n      fontSize: 16,\n      letterSpacing: 0,\n      lineHeight: 26,\n    },\n    subtitle2: {\n      fontFamily: 'System',\n      fontSize: 15,\n      letterSpacing: 0,\n      lineHeight: 22,\n    },\n  },\n};\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\n\nfunction renderLinkingPrefix() {\n  try {\n    return Linking.createURL('/');\n  } catch (e) {\n    return 'draftbit://';\n  }\n}\n\nconst prefix = renderLinkingPrefix();\n\nconst linking = {\n  enabled: Platform.OS === 'web' ? false : true,\n  prefixes: [prefix],\n  config: {\n    screens: {\n      Auth: { screens: {} },\n      Main: { screens: {} },\n      Notifications: { screens: {} },\n      Options: { screens: {} },\n      Permissions: { screens: {} },\n    },\n  },\n};\n\nexport default linking;\n","import React from 'react';\nimport { View, ActivityIndicator } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const DeviceVariables = {\n  AUTH_HEADER: '',\n  AppPermissions: [],\n  ExpoNotifToken: '',\n  REFRESH_TOKEN: '',    \n  company_name: 'Nombre de la compañia',\n  demoDataDate: '2022-03-15T12:00:00.000-0300',\n  demoMode: false,\n  emp_photo: '',\n  my_emp_com_id: 1,\n  my_emp_id: 2,\n  perms_got: 0,\n  __env__: 'Development',\n};\nexport const AppVariables = {\n  SHOW_CUIL_ERROR: false,\n  SHOW_EMAIL_ERROR: false,\n  SHOW_PASSWORD_ERROR: false,\n  SHOW_PASSWORD_MISMATCH_ERROR: false,\n  logging: true,\n};\nconst GlobalVariableContext = React.createContext();\nconst GlobalVariableUpdater = React.createContext();\n\n// Attempt to parse a string as JSON. If the parse fails, return the string as-is.\n// This is necessary to account for variables which are already present in local\n// storage, but were not stored in JSON syntax (e.g. 'hello' instead of '\"hello\"').\nfunction tryParseJson(str) {\n  try {\n    return JSON.parse(str);\n  } catch {\n    return str;\n  }\n}\n\nclass GlobalVariable {\n  /**\n   *  Filters an object of key-value pairs for those that should be\n   *  persisted to storage, and persists them.\n   *\n   *  @param values Record<string, string>\n   */\n  static async syncToLocalStorage(values) {\n    const update = Object.entries(values)\n      .filter(([key]) => key in DeviceVariables)\n      .map(([key, value]) => [key, JSON.stringify(value)]);\n\n    if (update.length > 0) {\n      await AsyncStorage.multiSet(update);\n    }\n\n    return update;\n  }\n\n  static async loadLocalStorage() {\n    const entries = await AsyncStorage.multiGet(Object.keys(DeviceVariables));\n\n    // If values isn't set, use the default. These will be written back to\n    // storage on the next render.\n    const withDefaults = entries.map(([key, value]) => [\n      key,\n      value ? tryParseJson(value) : DeviceVariables[key],\n    ]);\n\n    return Object.fromEntries(withDefaults);\n  }\n}\n\nclass State {\n  static defaultValues = {\n    ...AppVariables,\n    ...DeviceVariables,\n  };\n\n  static reducer(state, { type, payload }) {\n    switch (type) {\n      case 'RESET':\n        return { values: State.defaultValues, __loaded: true };\n      case 'LOAD_FROM_ASYNC_STORAGE':\n        return { values: { ...state.values, ...payload }, __loaded: true };\n      case 'UPDATE':\n        return state.__loaded\n          ? {\n            ...state,\n            values: {\n              ...state.values,\n              [payload.key]: payload.value,\n            },\n          }\n          : state;\n      default:\n        return state;\n    }\n  }\n\n  static initialState = {\n    __loaded: false,\n    values: State.defaultValues,\n  };\n}\n\nexport function GlobalVariableProvider({ children }) {\n  const [state, dispatch] = React.useReducer(State.reducer, State.initialState);\n\n  React.useEffect(() => {\n    async function prepare() {\n      await SplashScreen.preventAutoHideAsync();\n    }\n\n    prepare();\n  }, []);\n\n  // This effect runs on mount to overwrite the default value of any\n  // key that has a local value.\n  React.useEffect(() => {\n    async function initialStorageLoader() {\n      try {\n        const payload = await GlobalVariable.loadLocalStorage();\n        if (\n          payload?.__env__ &&\n          DeviceVariables.__env__ &&\n          payload.__env__ !== DeviceVariables.__env__\n        ) {\n          console.log(\n            `Publication Environment changed from ${payload.__env__} to ${DeviceVariables.__env__}. Refreshing variables`\n          );\n          dispatch({\n            type: 'LOAD_FROM_ASYNC_STORAGE',\n            payload: DeviceVariables,\n          });\n        } else {\n          dispatch({ type: 'LOAD_FROM_ASYNC_STORAGE', payload });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    initialStorageLoader();\n  }, []);\n\n  // This effect runs on every state update after the initial load. Gives us\n  // best of both worlds: React state updates sync, but current state made\n  // durable next async tick.\n  React.useEffect(() => {\n    async function syncToAsyncStorage() {\n      try {\n        await GlobalVariable.syncToLocalStorage(state.values);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (state.__loaded) {\n      syncToAsyncStorage();\n    }\n  }, [state]);\n\n  const onLayoutRootView = React.useCallback(async () => {\n    if (state.__loaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [state.__loaded]);\n\n  // We won't want an app to read a default state when there might be one\n  // incoming from storage.\n  if (!state.__loaded) {\n    return null;\n  }\n\n  return (\n    <GlobalVariableUpdater.Provider\n      value={dispatch}\n      onLayout={onLayoutRootView}\n    >\n      <GlobalVariableContext.Provider value={state.values}>\n        {children}\n      </GlobalVariableContext.Provider>\n    </GlobalVariableUpdater.Provider>\n  );\n}\n\n// Hooks\nexport function useSetValue() {\n  const dispatch = React.useContext(GlobalVariableUpdater);\n  return ({ key, value }) => {\n    dispatch({ type: 'UPDATE', payload: { key, value } });\n    return value;\n  };\n}\n\nexport function useValues() {\n  return React.useContext(GlobalVariableContext);\n}\n","export default {\n  Image20210723111613: require('../assets/images/Image20210723111613.png'),\n  BarraAzul: require('../assets/images/BarraAzul.png'),\n  UndrawAircraftFbvl: require('../assets/images/UndrawAircraftFbvl.png'),\n  Cat: require('../assets/images/Cat.jpg'),\n  Image20210630121543: require('../assets/images/Image20210630121543.png'),\n  CaritaFeliz: require('../assets/images/CaritaFeliz.jpg'),\n  BarraDeProgreso: require('../assets/images/BarraDeProgreso.png'),\n  Image20210521085823: require('../assets/images/Image20210521085823.png'),\n  BookbitGradientWallpaper4: require('../assets/images/BookbitGradientWallpaper4.png'),\n  BookbitGradientWallpaper: require('../assets/images/BookbitGradientWallpaper.png'),\n  UndrawWinnersAo2o: require('../assets/images/UndrawWinnersAo2o.png'),\n  UndrawPodcastAudienceRe4i5q: require('../assets/images/UndrawPodcastAudienceRe4i5q.png'),\n  ProfilePicturePlaceholder: require('../assets/images/ProfilePicturePlaceholder.png'),\n  AppScreenshotPlaceholder: require('../assets/images/AppScreenshotPlaceholder.png'),\n  AppIconPlaceholder: require('../assets/images/AppIconPlaceholder.png'),\n  LogoDIGI: require('../assets/images/LogoDIGI.png'),\n  Image20210706121113: require('../assets/images/Image20210706121113.png'),\n  UndrawOpenedReI38e: require('../assets/images/UndrawOpenedReI38e.png'),\n  Destacadas1170954: require('../assets/images/Destacadas1170954.png'),\n  DigiSSTransp: require('../assets/images/DigiSSTransp.png'),\n  Nophoto: require('../assets/images/Nophoto.png'),\n  FlipFlop: require('../assets/images/FlipFlop.gif'),\n  HardDisk2562B92FB: require('../assets/images/HardDisk2562B92FB.gif'),\n  Loader2562B92FB: require('../assets/images/Loader2562B92FB.gif'),\n  Upload2562B92FB: require('../assets/images/Upload2562B92FB.gif'),\n  Download2562B92FB: require('../assets/images/Download2562B92FB.gif'),\n  Wifi25655A4F5: require('../assets/images/Wifi25655A4F5.gif'),\n  Destacadas1170958: require('../assets/images/Destacadas1170958.png'),\n  UndrawMailboxReDvds170965: require('../assets/images/UndrawMailboxReDvds170965.png'),\n  UndrawMailboxReDvds170966: require('../assets/images/UndrawMailboxReDvds170966.png'),\n  Screenshot23: require('../assets/images/Screenshot23.png'),\n  Screenshot26: require('../assets/images/Screenshot26.png'),\n  Screenshot28: require('../assets/images/Screenshot28.png'),\n  UndrawChecklist: require('../assets/images/UndrawChecklist.png'),\n  UndrawOvertime: require('../assets/images/UndrawOvertime.png'),\n  UndrawRequest01: require('../assets/images/UndrawRequest01.png'),\n  UndrawRequest: require('../assets/images/UndrawRequest.png'),\n  UndrawWorking: require('../assets/images/UndrawWorking.png'),\n  UndrawHamburger: require('../assets/images/UndrawHamburger.png'),\n  UndrawLunch: require('../assets/images/UndrawLunch.png'),\n  UndrawSearch01: require('../assets/images/UndrawSearch01.png'),\n  UndrawSearch02: require('../assets/images/UndrawSearch02.png'),\n  UndrawSearch03: require('../assets/images/UndrawSearch03.png'),\n  UndrawDoctor: require('../assets/images/UndrawDoctor.png'),\n  UndrawClothes02: require('../assets/images/UndrawClothes02.png'),\n  UndrawPersonData: require('../assets/images/UndrawPersonData.png'),\n  UndrawOut01: require('../assets/images/UndrawOut01.png'),\n  UndrawPunch04: require('../assets/images/UndrawPunch04.png'),\n  UndrawPunch01: require('../assets/images/UndrawPunch01.png'),\n  PermissionsNotification: require('../assets/images/PermissionsNotification.png'),\n  PermissionsCamera: require('../assets/images/PermissionsCamera.png'),\n  PermissionsContacts: require('../assets/images/PermissionsContacts.png'),\n  PermissionsCalendar: require('../assets/images/PermissionsCalendar.png'),\n  PermissionsMicrophone: require('../assets/images/PermissionsMicrophone.jpeg'),\n  DisponibleEnApple: require('../assets/images/DisponibleEnApple.png'),\n  DisponibleEnGooglePlay: require('../assets/images/DisponibleEnGooglePlay.png'),\n  QrGoogle: require('../assets/images/QrGoogle.png'),\n  QrApple: require('../assets/images/QrApple.png'),\n};\n","import React from 'react';\nimport { Icon, IconButton, Surface, Touchable, withTheme } from '@draftbit/ui';\nimport { FlatList, Image, LogBox, StyleSheet, Text, View } from 'react-native';\nimport DropdownAlert from 'react-native-dropdownalert';\nimport { BlurView } from 'expo-blur';\nimport * as GlobalVariables from './config/GlobalVariableContext';\nimport Images from './config/Images';\nimport moment from 'moment';\nimport Modal from 'react-native-modal';\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\nimport * as SplashScreen from 'expo-splash-screen';\nimport UserInactivity from 'react-native-user-inactivity';\n\nexport const rnModal = Modal;\nexport const rnSegmentedControlTab = SegmentedControlTab;\n\nexport const GlobalImages = Images;\n\nlet __dropDown;\nlet __navigator;\n\nfunction setDropDown(dropDown) {\n  // console.log(`setDropDown: ${dropDown}`);\n  __dropDown = dropDown;\n}\n\nfunction getDropDown() {\n  // console.log(`getDropDown: ${__dropDown}`);\n  return __dropDown;\n}\n\nfunction setNavigator(navigator) {\n  __navigator = navigator;\n}\n\nexport const getNavigator = () => {\n  return __navigator;\n};\n\nexport const hideSplash = async () => {\n  LogBox.ignoreLogs(['SplashScreen.show']);\n\n  try {\n    await SplashScreen.hideAsync();\n  } catch (e) {\n    console.log(`HideSplash error: ${e}`);\n  }\n};\n\n// to use a global variable\nlet _Variables;\n\n// Generric var-controlled log function\nexport const log = value => {\n  if (_Variables && _Variables['logging'])\n    console.log(`log: ${JSON.stringify(value)}`);\n  return value;\n};\n\n// Delayed Navigation\nexport const delayNav = (props, delay, nav, screen) => {\n  setTimeout(function () {\n    if (nav === 'back') props.navigation.goBack();\n    else props.navigation.navigate(nav, { screen: screen });\n  }, delay);\n};\n\nexport const PostResultToast = (\n  fetchResult,\n  screenName,\n  nav = undefined,\n  screen,\n  delay,\n  props\n) => {\n  // 'info' | 'warn' | 'error' | 'success'\n  const timeout = 3000;\n\n  function sleep(milliseconds) {\n    var start = new Date().getTime();\n\n    log(`sleeping for ${milliseconds} ms...`);\n    for (var i = 0; i < 1e7; i++) {\n      if (new Date().getTime() - start > milliseconds) {\n        break;\n      }\n    }\n    log(`Done`);\n  }\n\n  console.log(`fetchResult: ${JSON.stringify(fetchResult)}`);\n  if (fetchResult?.error) {\n    DropDownHolder.getDropDown().alertWithType(\n      'error',\n      screenName,\n      'Error enviando la solicitud',\n      null,\n      timeout\n    );\n    log(`${screenName} POST error: ${JSON.stringify(fetchResult.error)}`);\n  } else {\n    DropDownHolder.getDropDown().alertWithType(\n      'success',\n      screenName,\n      'Solicitud enviada con éxito',\n      null,\n      timeout\n    );\n\n    if (nav) {\n      setTimeout(function () {\n        if (nav === 'back') props.navigation.goBack();\n        else props.navigation.navigate(nav, { screen: screen });\n      }, delay);\n    }\n  }\n\n  sleep(timeout);\n\n  return Boolean(fetchResult?.error);\n};\n\n// add other navigation functions that you need and export them\nexport const DropDownHolder = {\n  setDropDown,\n  getDropDown,\n};\n\n// Convierte una fecha en formato YYYY-MM-DD a Date\nexport const IsoDateStringToDate = sDate => {\n  const rslt = new Date(Date.parse(sDate));\n  return rslt;\n};\n\n// Convierte una fecha en formato YYYY-MM-DD a Date\nexport const IsoDateStringToUTCDate = sDate => {\n  var offset = new Date().getTimezoneOffset() * 60 * 1000;\n  const rslt = new Date(Date.parse(sDate) + offset);\n  return rslt;\n};\n\n// Convierte un Date a un string YYYY-MM-DD en zona UTC\nexport const DateToUtcString = aDate => {\n  if (aDate) {\n    // if(variables['logging']) console.log(\n    // `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n    // );\n\n    aDate.setHours(0);\n\n    const UTCString = aDate.toISOString().split('T')[0];\n    // if(variables['logging']) console.log(`UTCString: ${UTCString}`);\n    return UTCString;\n  }\n  return '';\n};\n\n// Convierte un Date a un string YYYY-MM-DD\nexport const Date2IsoDateString = aDate => {\n  // log(`Date2IsoDateString(${aDate})`);\n  var offset = new Date().getTimezoneOffset() * 60 * 1000;\n  const rslt = new Date(aDate - offset).toISOString().split('T')[0];\n  // log(`Date2IsoDateString(${aDate}): ${rslt}`);\n  return rslt;\n};\n\n// Convierte un Date a un string ISO YYYY-MM-DDTHH:mm:ss.sss-ZZZZ\nexport const Date2IsoDateTimeString = aDate => {\n  // log(`Date2IsoDateTimeString(${aDate})`);\n  var offset = new Date().getTimezoneOffset() * 60 * 1000;\n  const rslt = new Date(aDate - offset).toISOString();\n  // log(`Date2IsoDateTimeString(${aDate}): ${rslt}`);\n  return rslt;\n};\n\n// Convierte un Date a un string User Friendly DD/MM/YY HH:MMM\nexport const Date2String = (aDate, format) => {\n  // log(`Date2IsoDateTimeString(${aDate})`);\n  const rslt = moment(new Date(aDate)).format(format);\n  // log(`Date2IsoDateTimeString(${aDate}): ${rslt}`);\n  return rslt;\n};\n\n// Convierte una fecha en formato Iso String a un string en el formato proporcionado\nexport const FormatIsoString = (sDate, format) => {\n  const rslt = moment(sDate).format(format);\n  // log(`FormatIsoString(${sDate}, ${format}): ${rslt}`);\n  return rslt;\n};\n\n// Convierte una fecha en formato Iso String a un string en formato DD/MM\nexport const IsoString2ShortDate = utcString => {\n  const aDate = new Date(utcString);\n  const rslt = `${aDate.getDate()}/${1 + aDate.getMonth()}`;\n  return rslt;\n};\n\n// Aritmetica de fechas\nexport const dateAdd = (aDate, days) => {\n  const newDate = new Date(aDate.getTime() + days * 1000 * 60 * 60 * 24);\n  if (_Variables['logging'])\n    console.log(`dateSAdd(${aDate}, ${days}) => ${newDate}`);\n  return newDate;\n};\n\nexport const VariablesContainer = props => {\n  _Variables = props.vars;\n  return null;\n};\n\nexport const InitializeCurrentDate = consts => {\n  // console.log(`demoMode: ${consts['demoMode']}`);\n  // console.log(`demoDataDate: ${consts['demoDataDate']}`);\n  // console.log(`typeof demoDataDate: ${typeof(consts['demoDataDate'])}`);\n\n  // const ss = consts['demoDataDate'];//'2022-03-15T12:00:00';\n  // console.log(`demoDataDate: ${new Date(ss)}`);\n\n  const cDate = consts['demoMode']\n    ? new Date('2022-03-17T12:00:00')\n    : new Date();\n\n  console.log(`currentDate: ${cDate}`);\n\n  return cDate;\n};\n\nexport const DigicardScreenHeader = props => {\n  const { theme, navigation, left, right, title } = props;\n  const gvars = GlobalVariables.useValues();\n\n  // let alert = (_data) => new Promise(res => res);\n\n  setNavigator(navigation);\n  // console.log('DigicardScreenHeader');\n\n  return (\n    <View>\n      <View\n        style={title ? styles.containerOutterTall : styles.containerOutterShort}\n        backgroundImageResizeMode=\"contain\"\n      >\n        <View\n          style={[\n            styles.DigiHeader /*, { backgroundColor: theme.colors.light }*/,\n          ]}\n        >\n          <View style={{ width: 25, marginLeft: 25 }}>\n            {left ? (\n              (left.onPress || left.nav) && (\n                <IconButton\n                  onPress={() => {\n                    try {\n                      left.onPress\n                        ? left.onPress()\n                        : navigation.navigate(left.nav, {\n                          screen: left.screen,\n                        });\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  icon={left.icon}\n                  size={25}\n                />\n              )\n            ) : (\n              <IconButton\n                onPress={() => {\n                  try {\n                    navigation.goBack();\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                icon={'AntDesign/arrowleft'}\n                size={25}\n              />\n            )}\n          </View>\n          <Image\n            style={{ width: '40%', height: '100%', maxHeight: 60 }}\n            source={Images.DigiSSTransp}\n            resizeMode={'contain'}\n          />\n          <View style={{ width: 25, marginRight: 25 }}>\n            {right && (\n              <IconButton\n                onPress={() => {\n                  try {\n                    right.onPress\n                      ? right.onPress()\n                      : navigation.navigate(right.nav, {\n                        screen: right.screen,\n                      });\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                icon={right.icon}\n                size={25}\n              />\n            )}\n          </View>\n        </View>\n\n        {title && (\n          <Text style={[styles.TextTitle, { color: theme.colors.strong }]}>\n            {title}\n          </Text>\n        )}\n      </View>\n\n      <DropdownAlert\n        closeInterval={null}\n        zIndex={10}\n        ref={dropRef => {\n          DropDownHolder.setDropDown(dropRef, title);\n        }}\n      />\n\n      <VariablesContainer vars={gvars} />\n    </View>\n  );\n};\n\nexport const LoadingOverlay = props => {\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n\n  let { theme, message, action, visible } = props;\n  let image;\n\n  if (action === 'saving') {\n    image = Images.Upload2562B92FB;\n    if (!message) message = '\\nGuardando';\n  } else if (action === 'loading') {\n    image = Images.Download2562B92FB;\n    if (!message) message = '\\nCargando';\n  } else if (action === 'connecting') {\n    image = Images.Wifi25655A4F5;\n    if (!message) message = '\\nConectando';\n  } else {\n    image = Images.Loader2562B92FB;\n    if (!message) message = '';\n  }\n\n  // console.log(`Constants: ${JSON.stringify(Constants)}`);\n  // visible={Constants['loading']}\n\n  return (\n    <Modal\n      style={styles.OverlayModal}\n      visible={visible}\n      // visible={true}\n      animationType={'fade'}\n      transparent={true}\n      presentationStyle={'overFullScreen'}\n    >\n      <BlurView style={styles.OverlayBlurView} tint={'dark'} intensity={10}>\n        <View\n          style={[\n            action === 'connecting'\n              ? styles.ImageViewConnecting\n              : styles.ImageViewLoading,\n            { backgroundColor: theme.colors.VeryLight, width: '70%' },\n          ]}\n          pointerEvents={'auto'}\n        >\n          <Image\n            style={\n              action === 'connecting'\n                ? styles.ImageConnecting\n                : styles.ImageLoading\n            }\n            source={image}\n            resizeMode={'contain'}\n          />\n          <Touchable\n            onPress={() => {\n              try {\n                setGlobalVariableValue({\n                  key: 'loading',\n                  value: false,\n                });\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n          >\n            <Text\n              style={[\n                action === 'connecting'\n                  ? styles.OverlayTextConnecting\n                  : styles.OverlayTextLoading,\n                { color: theme.colors.Secondary },\n              ]}\n            >\n              {`Un momento por favor${message}...`}\n            </Text>\n          </Touchable>\n        </View>\n      </BlurView>\n    </Modal>\n  );\n};\n\nexport const Registracion = props => {\n  const { listData, dataSet, theme } = props;\n\n  const concept = con_id => {\n    // {con_id:1,con_name:\"Regis\",con_description:\"Regis\",con_type:\"hs\"}\n    const found = dataSet?.find(e => e.con_id == con_id);\n\n    return found?.con_name;\n  };\n\n  const UtcDate2ShortTime = utcDateStr => {\n    return utcDateStr?.split('T')[1].substr(0, 5);\n  };\n\n  return (\n    <>\n      <Text\n        style={{\n          textAlign: 'right',\n          color: theme.colors.strong,\n          marginLeft: 0,\n          marginRight: 5,\n          width: 60,\n        }}\n      >\n        {UtcDate2ShortTime(listData?.tir_in)}\n      </Text>\n      <Text\n        style={{\n          textAlign: 'right',\n          color: theme.colors.strong,\n          marginLeft: 0,\n          marginRight: 5,\n          width: 60,\n        }}\n      >\n        {UtcDate2ShortTime(listData?.tir_out)}\n      </Text>\n      <Text\n        style={{\n          color: theme.colors.strong,\n          marginLeft: 10,\n          marginRight: 0,\n          width: 150,\n        }}\n      >\n        {concept(listData?.tir_concept_id)}\n      </Text>\n    </>\n  );\n};\n\nexport const renderMenuItems = (items, AppPermissions, props) => {\n  const { theme, navigation } = props;\n\n  const renderItem = (item, enabled) => {\n    // console.log(`renderItem(${item.name}, [${item.icon}])`)\n\n    try {\n      return (\n        <View style={styles.OutterView}>\n          <Surface\n            style={[\n              styles.SurfaceVw,\n              { backgroundColor: theme.colors.medium, borderRadius: 8 },\n            ]}\n          >\n            <Image\n              style={styles.Image}\n              source={item.background}\n              resizeMode={'cover'}\n            />\n            <View style={styles.OutterItemVw}>\n              <View style={styles.InnerIconVw}>\n                <Icon\n                  name={item.icon}\n                  size={48}\n                  color={\n                    enabled\n                      ? theme.colors.background\n                      : theme.colors.mediumInverse\n                  }\n                />\n              </View>\n\n              <View style={styles.InnerTextVw}>\n                <Text\n                  style={[\n                    styles.InnerText,\n                    {\n                      color: enabled\n                        ? theme.colors.background\n                        : theme.colors.mediumInverse,\n                    },\n                  ]}\n                >\n                  {item.name}\n                </Text>\n              </View>\n            </View>\n          </Surface>\n        </View>\n      );\n    } catch (e) {\n      console.log(`error: ${e} `);\n    }\n  };\n\n  const renderTouchableItem = (item, enabled) => {\n    try {\n      return (\n        <Touchable\n          // key={item.permission}\n          onPress={() => {\n            try {\n              navigation.navigate(item.target);\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n        >\n          {renderItem(item, enabled)}\n        </Touchable>\n      );\n    } catch (e) {\n      console.log(`renderTouchableItem error: ${e} `);\n    }\n  };\n\n  // console.log(`AppPermissions: ${JSON.stringify(AppPermissions)}`);\n  /*\n  return (\n    items\n      ?.filter(i => {\n        if (i.permission) {\n          const rights = AppPermissions?.find(\n            p => p.sec_code_name === i.permission\n          );\n\n          // console.log(`rights: ${rights}`);\n          if (rights)\n            return (\n              rights.per_access.includes('Show') ||\n              rights.per_access.includes('All')\n            );\n          else return i.ifNoPerm ? i.ifNoPerm.visible : i.visible; // Requiere permisos pero no los hay definidos\n        } else return i.visible; // No requiere permisos. Lo define el código\n      })\n      / *&& i?.permission* /\n      ?.map(i => {\n        let enabled = i.enabled;\n\n        if (i.permission) {\n          const rights = AppPermissions?.find(\n            p => p.sec_code_name === i.permission\n          );\n\n          if (rights)\n            enabled =\n              rights.per_access.includes('Exec') ||\n              rights.per_access.includes('All');\n          else enabled = i.ifNoPerm ? i.ifNoPerm.enabled : i.enabled; // Requiere permisos pero no los hay definidos\n        }\n\n        return (false && enabled)\n          ? renderTouchableItem(i, enabled)\n          : renderItem(i, enabled);\n      })\n  );\n*/\n  const mItems = items?.filter(i => {\n    if (i.permission) {\n      const rights = AppPermissions?.find(\n        p => p.sec_code_name === i.permission\n      );\n\n      // console.log(`${i.name}: permission: ${i.permission}  rights:`);\n      // console.log(rights);\n\n      // Posibles valores de per_access: Read, Write, Show, Exec, All  (Solo se usan All, Show y Exec)\n      if (rights)\n        return (\n          rights.per_access.includes('Show') ||\n          rights.per_access.includes('All')\n        );\n      else return i.ifNoPerm ? i.ifNoPerm?.visible : i.visible; // Requiere permisos pero no los hay definidos\n    } else return i.visible; // No requiere permisos. Lo define el código\n  });\n\n  // console.log('Permisos: ');\n  // console.log(AppPermissions);\n  // console.log('Filtered items: ');\n  // console.log(mItems);\n\n  return (\n    <FlatList\n      data={mItems}\n      listKey={'jEyYnVAx'}\n      keyExtractor={(item, index) => item?.permission + index}\n      renderItem={({ item }) => {\n        let enabled = item.enabled;\n\n        if (item.permission) {\n          const rights = AppPermissions?.find(\n            p => p.sec_code_name === item.permission\n          );\n\n          if (rights)\n            enabled =\n              rights.per_access.includes('Exec') ||\n              rights.per_access.includes('All');\n          else enabled = item.ifNoPerm ? item.ifNoPerm.enabled : item.enabled; // Requiere permisos pero no los hay definidos\n        }\n\n        return enabled\n          ? renderTouchableItem(item, enabled)\n          : renderItem(item, enabled);\n      }}\n    />\n  );\n\n  /*\n  <FlatList\n    data={[]}\n    listKey={'jEyYnVAx'}\n    keyExtractor={({ item }) => item?.id || item?.uuid || item}\n    renderItem={({ item }) => {\n      const listData = item;\n      return (\n        <View>\n          <Text style={{ color: theme.colors.strong }}>\n            {'Double click me to edit 👀'}\n          </Text>\n        </View>\n      );\n    }}\n    contentContainerStyle={styles.FlatListjEContent}\n    numColumns={1}\n  />\n*/\n};\n\nexport const MyCustomComponent = ({ children }) => {\n  return (\n    <>\n      <View>{children}</View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  emptyView: {\n    width: 25,\n  },\n  DssLogo: {\n    width: '40%',\n    height: 40,\n    zIndex: 45,\n  },\n  containerInner: {\n    height: 55,\n    width: '100%',\n    alignContent: 'center',\n    alignSelf: 'stretch',\n    paddingTop: 6,\n  },\n  containerOutterTall: {\n    width: '100%',\n    height: 100,\n  },\n  containerOutterShort: {\n    width: '100%',\n    height: 65,\n  },\n  DigiHeader: {\n    flexDirection: 'row',\n    width: '100%',\n    paddingTop: 6,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 55,\n    maxHeight: 75,\n    // backgroundColor: 'yellow'\n  },\n  TextTitle: {\n    fontSize: 22,\n    fontFamily: 'System',\n    fontWeight: '700',\n    textAlign: 'center',\n    alignSelf: 'center',\n    marginTop: 15,\n    marginLeft: 8,\n    marginRight: 8,\n    marginBottom: 0,\n    textTransform: 'uppercase',\n  },\n\n  ImageViewLoading: {\n    opacity: 1,\n    width: '50%',\n    height: '20%',\n    alignItems: 'center',\n    paddingRight: 5,\n    paddingLeft: 5,\n  },\n\n  ImageViewConnecting: {\n    opacity: 1,\n    width: '60%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  ImageLoading: {\n    height: '40%',\n    marginTop: '15%',\n    marginLeft: '10%',\n    marginRight: '10%',\n  },\n\n  ImageConnecting: {\n    marginTop: '5%',\n    marginBottom: '5%',\n    marginLeft: 5,\n    marginRight: '5%',\n    width: '50%',\n  },\n\n  OverlayTextLoading: {\n    textAlign: 'center',\n    fontSize: 12,\n    fontFamily: 'System',\n    fontWeight: '700',\n    marginTop: '10%',\n    marginBottom: '10%',\n  },\n\n  OverlayTextConnecting: {\n    textAlign: 'center',\n    fontSize: 18,\n    fontFamily: 'System',\n    fontWeight: '700',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n\n  OutterView: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  SurfaceVw: {\n    minHeight: 100,\n  },\n  OutterItemVw: {\n    justifyContent: 'space-evenly',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  Image: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    opacity: 0.2,\n  },\n  InnerIconVw: {\n    marginLeft: 15,\n  },\n  InnerText: {\n    fontFamily: 'System',\n    fontWeight: '600',\n    fontSize: 26,\n  },\n  InnerTextVw: {\n    alignItems: 'flex-end',\n    marginRight: 15,\n    marginBottom: 5,\n  },\n\n  OverlayModal: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgoundColor: 'yellow',\n    margin: 0,\n  },\n  OverlayBlurView: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    opacity: 0.75,\n    // backgoundColor: 'red',\n    height: '100%',\n    width: '100%',\n  },\n});\n\nexport { useValues, useSetValue } from './config/GlobalVariableContext';\nexport { useRef } from 'react';\nexport {\n  Animated,\n  Dimensions,\n  Platform,\n  Pressable,\n  SafeAreaView,\n} from 'react-native';\nexport { SwipeListView, SwipeRow } from 'react-native-swipe-list-view';\nexport { Swipeable } from 'digicard-rngh-swipeable';\nexport { FlatList, RectButton } from 'react-native-gesture-handler';\nexport { Icon, Surface, Touchable } from '@draftbit/ui';\nexport { Camera } from 'expo-camera';\n\nimport * as ExpoDevice from 'expo-device';\nexport const Device = ExpoDevice;\n\nimport Constants from 'expo-constants';\nexport const ExpoConstants = Constants;\n\nimport * as Notifications from 'expo-notifications';\nexport const ExpoNotifications = Notifications;\n\nexport default withTheme(DigicardScreenHeader);\n","import { Platform } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { getMimeTypeFromFilename } from '@shopify/mime-types';\n\nasync function openCamera({\n  mediaTypes = ImagePicker.MediaTypeOptions.Images,\n  allowsEditing = false,\n  cameraType = 'back',\n  videoMaxDuration,\n  quality = 1,\n}) {\n  if (Platform.OS !== 'web') {\n    const { status } = await ImagePicker.requestCameraPermissionsAsync();\n\n    if (status !== 'granted') {\n      alert('Sorry, we need camera permissions to make this work!');\n    }\n  }\n\n  let result = await ImagePicker.launchCameraAsync({\n    mediaTypes,\n    allowsEditing,\n    cameraType,\n    videoMaxDuration,\n    quality,\n    base64: true,\n  });\n\n  let asset = result.assets?.length > 0 ? result.assets[0] : null;\n\n  if (!result.canceled && asset) {\n    if (Platform.OS === 'web') return asset.uri;\n\n    const mimeType = getMimeTypeFromFilename(asset.uri);\n\n    if (asset.type === 'video') {\n      const base64Video = await FileSystem.readAsStringAsync(asset.uri, {\n        encoding: 'base64',\n      });\n\n      return 'data:' + mimeType + ';base64,' + base64Video;\n    }\n\n    return 'data:' + mimeType + ';base64,' + asset.base64;\n  }\n}\n\nexport default openCamera;\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default class CustomCodeErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: undefined };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <View style={{ padding: 8, backgroundColor: 'red' }}>\n          <Text style={{ color: 'white' }}>\n            There was a problem with your custom code. Check your custom code\n            and make sure there are no errors.\n          </Text>\n          {this.state.error ? (\n            <Text style={{ color: 'white' }}>\n              {`\nError:\n${this.state.error.toString()}`}\n            </Text>\n          ) : null}\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport default function (value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst AboutScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const getVersion = () => {\n    var app;\n\n    try {\n      app = require('../app.json');\n    } catch {\n      app = undefined;\n    }\n\n    if (app) return app.expo.version;\n    else return CustomCode.ExpoConstants.nativeAppVersion;\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        { backgroundColor: theme.colors.background, height: '100%' },\n        dimensions.width\n      )}\n    >\n      <CustomCode.DigicardScreenHeader {...props} />\n      <View\n        style={StyleSheet.applyWidth(\n          { alignSelf: 'stretch', flex: 1, justifyContent: 'space-between' },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              alignSelf: 'center',\n              marginTop: '5%',\n              width: '90%',\n            },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              { alignContent: 'center', alignItems: 'center', marginTop: 10 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontSize: 28,\n                  fontWeight: '700',\n                  marginBottom: 20,\n                  opacity: 0.8,\n                  textAlign: 'center',\n                  textDecorationColor: theme.colors.primary,\n                  textTransform: 'none',\n                },\n                dimensions.width\n              )}\n            >\n              {'Acerca de '}\n            </Text>\n          </View>\n          {/* app-logo */}\n          <Image\n            resizeMode={'contain'}\n            source={Images.DigiSSTransp}\n            style={StyleSheet.applyWidth(\n              { height: 100, marginTop: 10, overflow: 'hidden', width: 300 },\n              dimensions.width\n            )}\n          />\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            { flex: 1, marginTop: '5%', minHeight: 50 },\n            dimensions.width\n          )}\n        >\n          <CustomCode.Pressable\n            onLongPress={() => props.navigation.navigate('DevScreen')}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignContent: 'center', alignItems: 'center' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '600',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Version: '}\n                {getVersion()}\n              </Text>\n            </View>\n          </CustomCode.Pressable>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              marginBottom: '5%',\n              marginTop: '5%',\n              paddingLeft: '6%',\n              paddingRight: '6%',\n            },\n            dimensions.width\n          )}\n        >\n          {/* Button Solid */}\n          <Button\n            disabled={false}\n            loading={false}\n            onPress={() => {\n              try {\n                navigation.navigate('Main', { screen: 'InicioScreen' });\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 10,\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontWeight: '700',\n                marginBottom: '5%',\n                marginLeft: '6%',\n                marginRight: '6%',\n                marginTop: '5%',\n                minHeight: 48,\n                textAlign: 'center',\n                width: '100%',\n              },\n              dimensions.width\n            )}\n            title={'Cerrar'}\n          />\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(AboutScreen);\n","export const isOkStatus = status => status >= 200 && status < 300;\n\nexport const handleResponse = async (res, handlers = {}) => {\n  const { status, statusText } = res;\n  const text = await res.text();\n  let json;\n  try {\n    json = JSON.parse(text);\n  } catch (e) {\n    console.error(\n      [\n        'Failed to parse response text as JSON.',\n        `Error: ${e.message}`,\n        `Text: ${JSON.stringify(text)}`,\n      ].join(' ')\n    );\n  }\n\n  const ret = {\n    status,\n    statusText,\n    text,\n    json,\n  };\n\n  if (handlers.onData) {\n    handlers.onData(json);\n  }\n  if (status === 401 && handlers.on401) {\n    handlers.on401(ret);\n  }\n  if (status === 403 && handlers.on403) {\n    handlers.on403(ret);\n  }\n  if (status === 404 && handlers.on404) {\n    handlers.on404(ret);\n  }\n  if (status < 200 && handlers.on1xx) {\n    handlers.on1xx(ret);\n  } else if (isOkStatus(status) && handlers.on2xx) {\n    handlers.on2xx(ret);\n  } else if (status >= 300 && status < 400 && handlers.on3xx) {\n    handlers.on3xx(ret);\n  } else if (status >= 400 && status < 500 && handlers.on4xx) {\n    handlers.on4xx(ret);\n  } else if (status >= 500 && handlers.on5xx) {\n    handlers.on5xx(ret);\n  }\n\n  return ret;\n};\n","import * as React from 'react';\nimport {\n  useQuery,\n  useMutation,\n  useIsFetching,\n  useQueryClient,\n} from 'react-query';\nimport useFetch from 'react-fetch-hook';\nimport { useIsFocused } from '@react-navigation/native';\nimport { handleResponse, isOkStatus } from '../utils/handleRestApiResponse';\nimport usePrevious from '../utils/usePrevious';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\n\nexport const requestDeleteDELETE = (Constants, { reqid }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/requests/${\n      typeof reqid === 'string' ? reqid : JSON.stringify(reqid ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n      method: 'DELETE',\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useRequestDeleteDELETE = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args =>\n      requestDeleteDELETE(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('requests', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('request');\n        queryClient.invalidateQueries('requests');\n      },\n    }\n  );\n};\n\nexport const requestQuotaGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/conceptaccountbalances/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useRequestQuotaGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['requestQuotas', args],\n    () => requestQuotaGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchRequestQuotaGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useRequestQuotaGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestQuota: refetch });\n};\n\nexport const comedor2ByEmpGET = (\n  Constants,\n  { date_from, emp_id },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/timesheets_orders/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }?filter=${encodeURIComponent(\n      `{  \"limit\": 100,  \"order\": \"tio_date Desc\",  \"where\": {    \"tio_date\": {\"gt\": \"${\n        typeof date_from === 'string'\n          ? date_from\n          : JSON.stringify(date_from ?? '')\n      }\"}   }}`\n    )}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useComedor2ByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['comedor2s', args],\n    () => comedor2ByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchComedor2ByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  date_from,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useComedor2ByEmpGET(\n    { date_from, emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchComedor2ByEmp: refetch });\n};\n\nexport const comedorByEmpGET = (\n  Constants,\n  { date_from, emp_id },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/timesheets_rows/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }?date_from=${encodeURIComponent(\n      `${\n        typeof date_from === 'string'\n          ? date_from\n          : JSON.stringify(date_from ?? '')\n      }`\n    )}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useComedorByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['comedors', args],\n    () => comedorByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchComedorByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  date_from,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useComedorByEmpGET(\n    { date_from, emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchComedorByEmp: refetch });\n};\n\nexport const companyGET = (Constants, { com_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/companies/${\n      typeof com_id === 'string' ? com_id : JSON.stringify(com_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useCompanyGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['company', args],\n    () => companyGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['companies']),\n    }\n  );\n};\n\nexport const FetchCompanyGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  com_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useCompanyGET(\n    { com_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchCompany: refetch });\n};\n\nexport const conceptsByEmpGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/concepts/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useConceptsByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['concepts', args],\n    () => conceptsByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchConceptsByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useConceptsByEmpGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchConceptsByEmp: refetch });\n};\n\nexport const departmentGET = (Constants, { dept_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/departments/${\n      typeof dept_id === 'string' ? dept_id : JSON.stringify(dept_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useDepartmentGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['department', args],\n    () => departmentGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['departments']),\n    }\n  );\n};\n\nexport const FetchDepartmentGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  dept_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useDepartmentGET(\n    { dept_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchDepartment: refetch });\n};\n\nexport const departmentsByEmpGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/departments/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useDepartmentsByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['departmentsByEmps', args],\n    () => departmentsByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchDepartmentsByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useDepartmentsByEmpGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchDepartmentsByEmp: refetch });\n};\n\nexport const documentsByEmpGET = (\n  Constants,\n  { date_from, emp_id },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/documents/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }?filter=${encodeURIComponent(\n      `{  \"limit\": 100,  \"order\": \"doc_date Desc\",  \"where\": {    \"doc_date\": {\"gt\": \"${\n        typeof date_from === 'string'\n          ? date_from\n          : JSON.stringify(date_from ?? '')\n      }\"}  }}`\n    )}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useDocumentsByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['documents', args],\n    () => documentsByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchDocumentsByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  date_from,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useDocumentsByEmpGET(\n    { date_from, emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchDocumentsByEmp: refetch });\n};\n\nexport const employeeGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEmployeeGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['employee', args],\n    () => employeeGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['employees']),\n    }\n  );\n};\n\nexport const FetchEmployeeGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useEmployeeGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchEmployee: refetch });\n};\n\nexport const employeePATCH = (\n  Constants,\n  {\n    address,\n    birth_date,\n    contact,\n    emp_id,\n    emp_photo,\n    first_name,\n    health,\n    last_name,\n    mail,\n    phone,\n    transport,\n  },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      body: JSON.stringify({\n        emp_first_name: first_name,\n        emp_last_name: last_name,\n        emp_birth_date: birth_date,\n        emp_mail: mail,\n        emp_phone: phone,\n        emp_address: address,\n        emp_contact: contact,\n        emp_health: health,\n        emp_transport: transport,\n        emp_photo: emp_photo,\n      }),\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEmployeePATCH = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => employeePATCH(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('employee', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('employee');\n        queryClient.invalidateQueries('employees');\n      },\n    }\n  );\n};\n\nexport const employeeBasicGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }?filter=${encodeURIComponent(\n      `{  \"fields\": {    \"emp_id\": true,    \"emp_first_name\": true,    \"emp_com_id\": true  }}`\n    )}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEmployeeBasicGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['employee_basic', args],\n    () => employeeBasicGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['employee_basics']),\n    }\n  );\n};\n\nexport const FetchEmployeeBasicGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useEmployeeBasicGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchEmployeeBasic: refetch });\n};\n\nexport const employeePhotoGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }?filter=${encodeURIComponent(`{  \"fields\": {    \"emp_photo\": true  }}`)}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEmployeePhotoGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['employee_photo', args],\n    () => employeePhotoGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['employee_photos']),\n    }\n  );\n};\n\nexport const FetchEmployeePhotoGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useEmployeePhotoGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchEmployeePhoto: refetch });\n};\n\nexport const employeeTokenPATCH = (\n  Constants,\n  { emp_id, emp_token },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      body: JSON.stringify({ emp_expo_token: emp_token }),\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEmployeeTokenPATCH = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args =>\n      employeeTokenPATCH(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('employeeToken', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('employeeToken');\n        queryClient.invalidateQueries('employeeTokens');\n      },\n    }\n  );\n};\n\nexport const employeeConfigGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/employees/config/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEmployeeConfigGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['config', args],\n    () => employeeConfigGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['configs']),\n    }\n  );\n};\n\nexport const FetchEmployeeConfigGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useEmployeeConfigGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchEmployeeConfig: refetch });\n};\n\nexport const eppArticlesByEmpGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/articles/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useEppArticlesByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['epp_articles', args],\n    () => eppArticlesByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchEppArticlesByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useEppArticlesByEmpGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchEppArticlesByEmp: refetch });\n};\n\nexport const loginPOST = (Constants, { email, password }, handlers = {}) =>\n  fetch(`https://dcss-api.herokuapp.com/login`, {\n    body: JSON.stringify({ email: email, password: password }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useLoginPOST = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['session', args],\n    () => loginPOST(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['sessions']),\n    }\n  );\n};\n\nexport const FetchLoginPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  email,\n  password,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useLoginPOST(\n    { email, password },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchLogin: refetch });\n};\n\nexport const noResponsePatchTestPATCH = (Constants, _args, handlers = {}) =>\n  fetch(`https://dcss-api.herokuapp.com/test`, {\n    body: JSON.stringify({\n      username: 'any',\n      email: 'any',\n      password: \"it doesn't matter\",\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'PATCH',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useNoResponsePatchTestPATCH = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args =>\n      noResponsePatchTestPATCH(\n        Constants,\n        { ...initialArgs, ...args },\n        handlers\n      ),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('test', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('test');\n        queryClient.invalidateQueries('tests');\n      },\n    }\n  );\n};\n\nexport const notificationGET = (Constants, { not_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/notifications/${\n      typeof not_id === 'string' ? not_id : JSON.stringify(not_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useNotificationGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['notification', args],\n    () => notificationGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['notifications']),\n    }\n  );\n};\n\nexport const FetchNotificationGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  not_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useNotificationGET(\n    { not_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchNotification: refetch });\n};\n\nexport const notificationPATCH = (\n  Constants,\n  { not_id, read, read_date },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/notifications/${\n      typeof not_id === 'string' ? not_id : JSON.stringify(not_id ?? '')\n    }`,\n    {\n      body: JSON.stringify({ not_read: read, not_read_at: read_date }),\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useNotificationPATCH = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => notificationPATCH(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('notification', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('notification');\n        queryClient.invalidateQueries('notifications');\n      },\n    }\n  );\n};\n\nexport const notificationsByEmpGET = (\n  Constants,\n  { emp_id, limit, status },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/notifications/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }?limit=${encodeURIComponent(\n      `${typeof limit === 'string' ? limit : JSON.stringify(limit ?? '')}`\n    )}&readStatus=${encodeURIComponent(\n      `${typeof status === 'string' ? status : JSON.stringify(status ?? '')}`\n    )}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useNotificationsByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['notifications', args],\n    () => notificationsByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchNotificationsByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  limit,\n  status,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useNotificationsByEmpGET(\n    { emp_id, limit, status },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchNotificationsByEmp: refetch });\n};\n\nexport const permissionsGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/permissions/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const usePermissionsGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['permissions', args],\n    () => permissionsGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchPermissionsGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = usePermissionsGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchPermissions: refetch });\n};\n\nexport const reasonsByEmpGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/reasons/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useReasonsByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['reasons', args],\n    () => reasonsByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchReasonsByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useReasonsByEmpGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchReasonsByEmp: refetch });\n};\n\nexport const requestFullfillPOST = (\n  Constants,\n  { req_fullfill_date, req_id, req_status, req_sup_id },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/requestsdetails`, {\n    body: JSON.stringify({\n      red_req_id: req_id,\n      red_emp_id: req_sup_id,\n      red_date: req_fullfill_date,\n      red_status: req_status,\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useRequestFullfillPOST = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args =>\n      requestFullfillPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('requests2approve', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('requests2approve');\n        queryClient.invalidateQueries('requests2approves');\n      },\n    }\n  );\n};\n\nexport const FetchRequestFullfillPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  req_fullfill_date,\n  req_id,\n  req_status,\n  req_sup_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useRequestFullfillPOST(\n    { req_fullfill_date, req_id, req_status, req_sup_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestFullfill: refetch });\n};\n\nexport const requestCtuPOST = (\n  Constants,\n  {\n    emp_id,\n    req_ctu_from,\n    req_ctu_rea_id,\n    req_ctu_to,\n    req_ctu_wor_id,\n    req_datetime,\n  },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/requests`, {\n    body: JSON.stringify({\n      req_emp_id: emp_id,\n      req_date: req_datetime,\n      req_type: 'ctu',\n      req_ctu_from: req_ctu_from,\n      req_ctu_to: req_ctu_to,\n      req_ctu_wor_id: req_ctu_wor_id,\n      req_ctu_rea_id: req_ctu_rea_id,\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useRequestCtuPOST = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => requestCtuPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('request_ctu', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('request_ctu');\n        queryClient.invalidateQueries('request_ctus');\n      },\n    }\n  );\n};\n\nexport const FetchRequestCtuPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  req_ctu_from,\n  req_ctu_rea_id,\n  req_ctu_to,\n  req_ctu_wor_id,\n  req_datetime,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useRequestCtuPOST(\n    {\n      emp_id,\n      req_ctu_from,\n      req_ctu_rea_id,\n      req_ctu_to,\n      req_ctu_wor_id,\n      req_datetime,\n    },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestCtu: refetch });\n};\n\nexport const requestEppPOST = (\n  Constants,\n  {\n    emp_id,\n    req_datetime,\n    req_epp_art_id,\n    req_epp_color,\n    req_epp_observ,\n    req_epp_quantity,\n    req_epp_size,\n  },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/requests`, {\n    body: JSON.stringify({\n      req_emp_id: emp_id,\n      req_date: req_datetime,\n      req_type: 'epp',\n      req_epp_art_id: req_epp_art_id,\n      req_epp_quantity: req_epp_quantity,\n      req_epp_size: req_epp_size,\n      req_epp_color: req_epp_color,\n      req_epp_observ: req_epp_observ,\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useRequestEppPOST = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => requestEppPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('request_epp', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('request_epp');\n        queryClient.invalidateQueries('request_epps');\n      },\n    }\n  );\n};\n\nexport const FetchRequestEppPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  req_datetime,\n  req_epp_art_id,\n  req_epp_color,\n  req_epp_observ,\n  req_epp_quantity,\n  req_epp_size,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useRequestEppPOST(\n    {\n      emp_id,\n      req_datetime,\n      req_epp_art_id,\n      req_epp_color,\n      req_epp_observ,\n      req_epp_quantity,\n      req_epp_size,\n    },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestEpp: refetch });\n};\n\nexport const requestPyaPOST = (\n  Constants,\n  {\n    emp_id,\n    req_datetime,\n    req_pya_con_id,\n    req_pya_from,\n    req_pya_rea_id,\n    req_pya_to,\n  },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/requests`, {\n    body: JSON.stringify({\n      req_emp_id: emp_id,\n      req_date: req_datetime,\n      req_type: 'pya',\n      req_pya_from: req_pya_from,\n      req_pya_to: req_pya_to,\n      req_pya_con_id: req_pya_con_id,\n      req_pya_rea_id: req_pya_rea_id,\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useRequestPyaPOST = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => requestPyaPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('request_pya', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('request_pya');\n        queryClient.invalidateQueries('request_pyas');\n      },\n    }\n  );\n};\n\nexport const FetchRequestPyaPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  req_datetime,\n  req_pya_con_id,\n  req_pya_from,\n  req_pya_rea_id,\n  req_pya_to,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useRequestPyaPOST(\n    {\n      emp_id,\n      req_datetime,\n      req_pya_con_id,\n      req_pya_from,\n      req_pya_rea_id,\n      req_pya_to,\n    },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestPya: refetch });\n};\n\nexport const requestRysPOST = (\n  Constants,\n  {\n    emp_id,\n    req_datetime,\n    req_rys_con_id,\n    req_rys_from,\n    req_rys_rea_id,\n    req_rys_to,\n  },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/requests`, {\n    body: JSON.stringify({\n      req_emp_id: emp_id,\n      req_date: req_datetime,\n      req_type: 'rys',\n      req_rys_from: req_rys_from,\n      req_rys_to: req_rys_to,\n      req_rys_con_id: req_rys_con_id,\n      req_rys_rea_id: req_rys_rea_id,\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useRequestRysPOST = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => requestRysPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('request_rys', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('request_ry');\n        queryClient.invalidateQueries('request_rys');\n      },\n    }\n  );\n};\n\nexport const FetchRequestRysPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  req_datetime,\n  req_rys_con_id,\n  req_rys_from,\n  req_rys_rea_id,\n  req_rys_to,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useRequestRysPOST(\n    {\n      emp_id,\n      req_datetime,\n      req_rys_con_id,\n      req_rys_from,\n      req_rys_rea_id,\n      req_rys_to,\n    },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestRys: refetch });\n};\n\nexport const requestVacPOST = (\n  Constants,\n  { emp_id, req_datetime, req_vac_from, req_vac_to },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/requests`, {\n    body: JSON.stringify({\n      req_emp_id: emp_id,\n      req_date: req_datetime,\n      req_type: 'vac',\n      req_vac_from: req_vac_from,\n      req_vac_to: req_vac_to,\n    }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useRequestVacPOST = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => requestVacPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('request_vac', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('request_vac');\n        queryClient.invalidateQueries('request_vacs');\n      },\n    }\n  );\n};\n\nexport const FetchRequestVacPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  req_datetime,\n  req_vac_from,\n  req_vac_to,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useRequestVacPOST(\n    { emp_id, req_datetime, req_vac_from, req_vac_to },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequestVac: refetch });\n};\n\nexport const requestsGET = (Constants, { emp_id, status }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/requests/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }&${typeof status === 'string' ? status : JSON.stringify(status ?? '')}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useRequestsGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['requests', args],\n    () => requestsGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchRequestsGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  status,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useRequestsGET(\n    { emp_id, status },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequests: refetch });\n};\n\nexport const requests2approveGET = (\n  Constants,\n  { emp_id, emp_status, num },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/requests/dependentemps/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }&${\n      typeof emp_status === 'string'\n        ? emp_status\n        : JSON.stringify(emp_status ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useRequests2approveGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['requests2approves', args],\n    () => requests2approveGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchRequests2approveGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n  emp_status,\n  num,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useRequests2approveGET(\n    { emp_id, emp_status, num },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRequests2approve: refetch });\n};\n\nexport const roleGET = (Constants, { role_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/roles/${\n      typeof role_id === 'string' ? role_id : JSON.stringify(role_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useRoleGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(['role ', args], () => roleGET(Constants, args, handlers), {\n    refetchInterval,\n    onSuccess: () => queryClient.invalidateQueries(['role s']),\n  });\n};\n\nexport const FetchRoleGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  role_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useRoleGET(\n    { role_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchRole: refetch });\n};\n\nexport const signupPOST = (\n  Constants,\n  { cuil, email, password },\n  handlers = {}\n) =>\n  fetch(`https://dcss-api.herokuapp.com/signup`, {\n    body: JSON.stringify({ id: cuil, email: email, password: password }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useSignupPOST = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['signup', args],\n    () => signupPOST(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['signups']),\n    }\n  );\n};\n\nexport const FetchSignupPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  cuil,\n  email,\n  password,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useSignupPOST(\n    { cuil, email, password },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchSignup: refetch });\n};\n\nexport const subordinatesGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/dept-emps/emps-of-emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useSubordinatesGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['subordinates', args],\n    () => subordinatesGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchSubordinatesGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useSubordinatesGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchSubordinates: refetch });\n};\n\nexport const timesheetGET = (\n  Constants,\n  { date_from, date_to, emp_id },\n  handlers = {}\n) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/timesheets/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }&${\n      typeof date_from === 'string'\n        ? date_from\n        : JSON.stringify(date_from ?? '')\n    }&${typeof date_to === 'string' ? date_to : JSON.stringify(date_to ?? '')}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useTimesheetGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['timesheet', args],\n    () => timesheetGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['timesheets']),\n    }\n  );\n};\n\nexport const FetchTimesheetGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  date_from,\n  date_to,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useTimesheetGET(\n    { date_from, date_to, emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchTimesheet: refetch });\n};\n\nexport const tokenRefreshPOST = (Constants, { refreshToken }, handlers = {}) =>\n  fetch(`https://dcss-api.herokuapp.com/refresh`, {\n    body: JSON.stringify({ refreshToken: refreshToken }),\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useTokenRefreshPOST = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['tokenRefresh', args],\n    () => tokenRefreshPOST(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['tokenRefreshes']),\n    }\n  );\n};\n\nexport const FetchTokenRefreshPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  refreshToken,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useTokenRefreshPOST(\n    { refreshToken },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchTokenRefresh: refetch });\n};\n\nexport const versionGET = (Constants, _args, handlers = {}) =>\n  fetch(`https://dcss-api.herokuapp.com/version`, {\n    headers: {\n      Accept: 'application/json',\n      Authorization: Constants['AUTH_HEADER'],\n      'Content-Type': 'application/json',\n    },\n  }).then(res => handleResponse(res, handlers));\n\nexport const useVersionGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['version', args],\n    () => versionGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['versions']),\n    }\n  );\n};\n\nexport const FetchVersionGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useVersionGET({}, { refetchInterval, handlers: { onData, ...handlers } });\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchVersion: refetch });\n};\n\nexport const whoamiGET = (Constants, { comid }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/whoami/${\n      typeof comid === 'string' ? comid : JSON.stringify(comid ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useWhoamiGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['whoami', args],\n    () => whoamiGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['whoamis']),\n    }\n  );\n};\n\nexport const FetchWhoamiGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  comid,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useWhoamiGET(\n    { comid },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchWhoami: refetch });\n};\n\nexport const workschedulesByEmpGET = (Constants, { emp_id }, handlers = {}) =>\n  fetch(\n    `https://dcss-api.herokuapp.com/emp/${\n      typeof emp_id === 'string' ? emp_id : JSON.stringify(emp_id ?? '')\n    }`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: Constants['AUTH_HEADER'],\n        'Content-Type': 'application/json',\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useWorkschedulesByEmpGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  return useQuery(\n    ['workschedules', args],\n    () => workschedulesByEmpGET(Constants, args, handlers),\n    {\n      refetchInterval,\n    }\n  );\n};\n\nexport const FetchWorkschedulesByEmpGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  emp_id,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useWorkschedulesByEmpGET(\n    { emp_id },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchWorkschedulesByEmp: refetch });\n};\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport openCameraUtil from '../utils/openCamera';\nimport {\n  Button,\n  DatePicker,\n  Divider,\n  IconButton,\n  Picker,\n  ScreenContainer,\n  TextField,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  Image,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Fetch } from 'react-request';\n\nconst ActualizacionDeDatosScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [Transports, setTransports] = React.useState([\n    'Ninguno',\n    'Vehiculo',\n    'Moto',\n    'Bici',\n    'Publico',\n  ]);\n  const [ioAction, setIoAction] = React.useState(\"'loading'\");\n  const [loading, setLoading] = React.useState(false);\n  const [newAddress, setNewAddress] = React.useState('');\n  const [newBirthDate, setNewBirthDate] = React.useState(new Date());\n  const [newContact, setNewContact] = React.useState('');\n  const [newFirstName, setNewFirstName] = React.useState('');\n  const [newHealth, setNewHealth] = React.useState('');\n  const [newLastName, setNewLastName] = React.useState('');\n  const [newMail, setNewMail] = React.useState('');\n  const [newPhone, setNewPhone] = React.useState('');\n  const [newPhoto, setNewPhoto] = React.useState('');\n  const [newTransport, setNewTransport] = React.useState('');\n  const [screenName, setScreenName] = React.useState('Actualización de Datos');\n  const Date2UTCString = aDate => {\n    console.log(\n      `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n    );\n\n    aDate.setHours(0);\n\n    const UTCString = aDate.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    console.log(`UTCString: ${UTCString}`);\n    return UTCString;\n  };\n\n  const frame = value => {\n    return `[${value}]`;\n  };\n\n  const UTCString2Date = aUtcString => {\n    var date = new Date(),\n      tzo = -date.getTimezoneOffset(),\n      dif = tzo >= 0 ? '+' : '-',\n      pad = function (num) {\n        return (num < 10 ? '0' : '') + num;\n      };\n\n    console.log(`ParseLocalDate(${aUtcString}), type: ${typeof aUtcString}`);\n\n    if (aUtcString) {\n      const off =\n        dif +\n        pad(Math.floor(Math.abs(tzo) / 60)) +\n        ':' +\n        pad(Math.abs(tzo) % 60);\n\n      const newUtcString = aUtcString.split('T')[0] + 'T00:00:00' + off;\n\n      console.log(\n        `newUtcString: ${newUtcString}, type: ${typeof newUtcString}`\n      );\n\n      return new Date(newUtcString);\n    } else return new Date();\n  };\n\n  const dropdownToast = (type, message, timeout, wait) => {\n    // 'info' | 'warn' | 'error' | 'success'\n    DropDownHolder.getDropDown().alertWithType(\n      type,\n      screenName,\n      message,\n      null,\n      timeout\n    );\n  };\n\n  const postResultToast = fetchResult => {\n    return CustomCode.PostResultToast(\n      fetchResult,\n      screenName,\n      'back',\n      '',\n      2000,\n      props\n    );\n  };\n\n  const initPhoto = aPhoto => {\n    console.log(`photo length: ${aPhoto?.length}`);\n\n    const MIN_PHOTO_LENGTH = 100;\n\n    if (aPhoto?.length > MIN_PHOTO_LENGTH) {\n      console.log(`Setting DB photo`);\n      setNewPhoto(aPhoto);\n    } else {\n      console.log(`Setting Dummy photo`);\n      setNewPhoto(CustomCode?.GlobalImages?.Nophoto);\n    }\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const dcSSEmployeePATCH = DcSSApi.useEmployeePATCH();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      /* 'Conditional Stop' action requires configuration: select Check Value */\n      setIoAction('loading');\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      hasTopSafeArea={true}\n      scrollable={false}\n    >\n      {/* Fetch Screen (ActualizacionDeDatosScreen) */}\n      <DcSSApi.FetchEmployeeGET\n        emp_id={Constants['my_emp_id']}\n        handlers={{\n          onData: fetchScreenActualizacionDeDatosScreenData => {\n            try {\n              console.log(\n                fetchScreenActualizacionDeDatosScreenData?.emp_birth_date\n              );\n              setNewBirthDate(\n                UTCString2Date(\n                  fetchScreenActualizacionDeDatosScreenData?.emp_birth_date\n                )\n              );\n              console.log(\n                frame(fetchScreenActualizacionDeDatosScreenData?.emp_transport)\n              );\n              setNewTransport(\n                fetchScreenActualizacionDeDatosScreenData?.emp_transport\n              );\n              setNewPhoto(fetchScreenActualizacionDeDatosScreenData?.emp_photo);\n            } catch (err) {\n              console.error(err);\n            }\n          },\n        }}\n      >\n        {({ loading, error, data, refetchEmployee }) => {\n          const fetchScreenActualizacionDeDatosScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              <KeyboardAwareScrollView\n                contentContainerStyle={StyleSheet.applyWidth(\n                  { marginLeft: 15, marginRight: 15 },\n                  dimensions.width\n                )}\n              >\n                <View\n                  style={StyleSheet.applyWidth(\n                    {\n                      alignItems: 'flex-end',\n                      flexDirection: 'row',\n                      height: 200,\n                      justifyContent: 'center',\n                      marginBottom: 8,\n                      marginTop: 8,\n                    },\n                    dimensions.width\n                  )}\n                >\n                  <View\n                    style={StyleSheet.applyWidth(\n                      {\n                        borderBottomWidth: 1,\n                        borderColor: theme.colors.medium,\n                        borderLeftWidth: 1,\n                        borderRadius: 10,\n                        borderRightWidth: 1,\n                        borderTopWidth: 1,\n                        marginLeft: 53,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    <>\n                      {!newPhoto ? null : (\n                        <Image\n                          resizeMode={'cover'}\n                          source={{ uri: `${newPhoto}` }}\n                          style={StyleSheet.applyWidth(\n                            { height: 200, width: 200 },\n                            dimensions.width\n                          )}\n                        />\n                      )}\n                    </>\n                    <>\n                      {newPhoto ? null : (\n                        <Image\n                          resizeMode={'cover'}\n                          source={Images.Nophoto}\n                          style={StyleSheet.applyWidth(\n                            { height: 200, width: 200 },\n                            dimensions.width\n                          )}\n                        />\n                      )}\n                    </>\n                  </View>\n                  <IconButton\n                    icon={'AntDesign/camerao'}\n                    onPress={() => {\n                      const handler = async () => {\n                        try {\n                          const snap = await openCameraUtil({\n                            mediaTypes: 'Images',\n                            allowsEditing: true,\n                            cameraType: 'back',\n                            videoMaxDuration: undefined,\n                            quality: 0.2,\n                          });\n\n                          setNewPhoto(snap);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      };\n                      handler();\n                    }}\n                    size={48}\n                    style={StyleSheet.applyWidth(\n                      { marginLeft: 5 },\n                      dimensions.width\n                    )}\n                  />\n                </View>\n                {/* LastNameInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* lastName */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_last_name\n                    }\n                    label={'Apellido'}\n                    leftIconMode={'outset'}\n                    leftIconName={'MaterialCommunityIcons/playlist-edit'}\n                    onChangeText={newLastNameValue => {\n                      try {\n                        setNewLastName(newLastNameValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* FirstNameInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* firstName */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_first_name\n                    }\n                    label={'Nombre(s)'}\n                    leftIconMode={'outset'}\n                    leftIconName={'MaterialCommunityIcons/playlist-edit'}\n                    onChangeText={newFirstNameValue => {\n                      try {\n                        setNewFirstName(newFirstNameValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* AddressInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* address */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_address\n                    }\n                    label={'Dirección'}\n                    leftIconMode={'outset'}\n                    leftIconName={'FontAwesome/address-book-o'}\n                    onChangeText={newAddressValue => {\n                      try {\n                        setNewAddress(newAddressValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* PhoneInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* phoneNumber */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_phone\n                    }\n                    label={'Móvil'}\n                    leftIconMode={'outset'}\n                    leftIconName={'Entypo/phone'}\n                    onChangeText={newPhoneNumberValue => {\n                      try {\n                        setNewPhone(newPhoneNumberValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* MailInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* email */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_mail\n                    }\n                    label={'Correo electrónico'}\n                    leftIconMode={'outset'}\n                    leftIconName={'Entypo/email'}\n                    onChangeText={newEmailValue => {\n                      try {\n                        setNewMail(newEmailValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* BirthdateInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* birthday */}\n                  <DatePicker\n                    date={newBirthDate}\n                    label={'Fecha Nacimiento'}\n                    leftIconMode={'outset'}\n                    leftIconName={'MaterialIcons/date-range'}\n                    locale={'es-AR'}\n                    mode={'date'}\n                    onDateChange={newBirthdayValue => {\n                      try {\n                        setNewBirthDate(newBirthdayValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                </View>\n                {/* ContactInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* contact */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_contact\n                    }\n                    label={'Contacto Emergencia'}\n                    leftIconMode={'outset'}\n                    leftIconName={'AntDesign/medicinebox'}\n                    onChangeText={newContactValue => {\n                      try {\n                        setNewContact(newContactValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* HealthInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* healthPlan */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_health\n                    }\n                    label={'Obra Social'}\n                    leftIconMode={'outset'}\n                    leftIconName={'MaterialCommunityIcons/doctor'}\n                    onChangeText={newHealthPlanValue => {\n                      try {\n                        setNewHealth(newHealthPlanValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* TransportInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* transport */}\n                  <Picker\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_transport\n                    }\n                    label={'Transporte'}\n                    leftIconMode={'outset'}\n                    leftIconName={'Ionicons/car'}\n                    onValueChange={newTransportValue => {\n                      const pickerValue = newTransportValue;\n                      try {\n                        setNewTransport(newTransportValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={Transports}\n                    placeholder={'Seleccione medio de transporte'}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors.light },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                </View>\n                {/* DocTypeInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* docType */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_doc_type\n                    }\n                    disabled={true}\n                    label={'Tipo de documento'}\n                    leftIconMode={'outset'}\n                    leftIconName={'MaterialCommunityIcons/playlist-edit'}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                </View>\n                {/* DocNumberInputView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { width: '100%' },\n                    dimensions.width\n                  )}\n                >\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                  {/* docNumber */}\n                  <TextField\n                    defaultValue={\n                      fetchScreenActualizacionDeDatosScreenData?.emp_doc_number\n                    }\n                    disabled={true}\n                    label={'Número de documento'}\n                    leftIconMode={'outset'}\n                    leftIconName={'AntDesign/idcard'}\n                    type={'solid'}\n                    underlineColor={theme.colors.light}\n                  />\n                  <Divider\n                    color={theme.colors.divider}\n                    height={1}\n                    style={StyleSheet.applyWidth(\n                      { height: 1, marginBottom: 5, marginTop: 5 },\n                      dimensions.width\n                    )}\n                  />\n                </View>\n              </KeyboardAwareScrollView>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    height: 50,\n                    marginBottom: 20,\n                    marginTop: 10,\n                  },\n                  dimensions.width\n                )}\n              >\n                {/* Button Solid */}\n                <Button\n                  onPress={() => {\n                    const handler = async () => {\n                      try {\n                        setIoAction('saving');\n                        setLoading(true);\n                        const fetchResult = (\n                          await dcSSEmployeePATCH.mutateAsync({\n                            address: newAddress,\n                            birth_date: Date2UTCString(newBirthDate),\n                            contact: newContact,\n                            emp_id: Constants['my_emp_id'],\n                            emp_photo: newPhoto,\n                            first_name: newFirstName,\n                            health: newHealth,\n                            last_name: newLastName,\n                            mail: newMail,\n                            phone: newPhone,\n                            transport: newTransport,\n                          })\n                        )?.json;\n                        setLoading(false);\n                        postResultToast(fetchResult);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    };\n                    handler();\n                  }}\n                  style={StyleSheet.applyWidth(\n                    {\n                      backgroundColor: theme.colors.primary,\n                      borderRadius: 10,\n                      color: theme.colors.background,\n                      fontFamily: 'System',\n                      fontWeight: '700',\n                      marginLeft: '6%',\n                      marginRight: '6%',\n                      minHeight: 48,\n                      textAlign: 'center',\n                      width: '60%',\n                    },\n                    dimensions.width\n                  )}\n                  title={'Actualizar'}\n                />\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchEmployeeGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ActualizacionDeDatosScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Icon,\n  ScreenContainer,\n  Surface,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst AprobacionesScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const initalizeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [currentDate, setCurrentDate] = React.useState(\n    initalizeCurrentDate(\"''\")\n  );\n  const [itemWidth, setItemWidth] = React.useState(0);\n  const [refetchNum, setRefetchNum] = React.useState(1);\n  const [requestsType, setRequestsType] = React.useState('E');\n  const [screenName, setScreenName] = React.useState('Aprobaciones');\n  const [showing, setShowing] = React.useState(0);\n  const setShow = what => {\n    setShowing(what);\n\n    calcFilter(what);\n\n    // console.log(`setShow(${what})`);\n    // CustomCode.log(`setShow(${what})`);\n  };\n\n  const log = value => {\n    // return CustomCode.log(value);\n  };\n\n  const calcFilter = showOption => {\n    // console.log(`calcFilter(${showOption})`);\n    // CustomCode.log(`calcFilter(${showOption})`);\n    switch (showOption) {\n      case 0:\n        setRequestsType('E');\n        break;\n\n      case 1:\n        setRequestsType('A');\n        break;\n\n      case 2:\n        setRequestsType('D');\n        break;\n\n      case 3:\n        setRequestsType('T');\n        break;\n    }\n  };\n\n  const reqTypeToString = reqType => {\n    const reqTypes = {\n      vac: 'Vacaciones',\n      ctu: 'Cambio de turno',\n      pya: 'Permisos y ausencias',\n      rys: 'Retiros y salidas intermedias',\n      epp: 'EPP',\n    };\n\n    return reqTypes[reqType];\n  };\n\n  const renderSwipeableItem = rowData => {\n    // const { item } = rowData;\n    const { item } = rowData;\n    const listData = item;\n\n    const { theme } = props;\n\n    const styles = StyleSheet.create({\n      Surfaceuw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 2,\n        marginBottom: 5,\n        height: 64,\n      },\n      typeVw: {\n        alignItems: 'flex-start',\n        marginLeft: 5,\n        marginRight: 5,\n        justifyContent: 'center',\n      },\n      statusVw: {\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        marginLeft: 5,\n        marginRight: 5,\n      },\n      detailVw: {\n        marginRight: 2,\n        marginLeft: 2,\n        alignItems: 'flex-start',\n        flexGrow: 1,\n        justifyContent: 'center',\n        marginTop: 2,\n        marginBottom: 2,\n        maxWidth: '79%',\n      },\n      upperDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        alignItems: 'center',\n        marginBottom: 2,\n        minHeight: 16,\n      },\n      empNameVw: {\n        flex: 1,\n      },\n      upperDetailEmpNameTxt: {\n        fontFamily: 'System',\n        fontWeight: '700',\n        alignSelf: 'flex-start',\n        fontSize: 14,\n      },\n      reqDateTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 3,\n      },\n      middleDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        minHeight: 12,\n        marginBottom: 2,\n      },\n      middleTwoSectsVw: {\n        minHeight: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%',\n      },\n      middleLeftSectsTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '600',\n        marginRight: '1%',\n        maxWidth: '69%',\n      },\n      middleRightSectsTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '400',\n        marginLeft: '1%',\n        maxWidth: '29%',\n      },\n      middleEppQuantTxt: {\n        fontSize: 12,\n        marginRight: 4,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppNameVw: {\n        flexShrink: 5,\n      },\n      middleEppNameTxt: {\n        fontSize: 12,\n        marginRight: 5,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppSizeTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '400',\n        marginLeft: 4,\n      },\n      lowerDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        minHeight: 12,\n      },\n      lowerDateRange: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n      },\n      lowerDateFulfilled: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n      lowerEppColorObsVw: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n        flex: 1,\n      },\n      lowerEppColorTxt: {\n        fontFamily: 'System',\n        fontWeight: '400',\n        alignSelf: 'flex-start',\n        fontSize: 12,\n      },\n      lowerEppObsTxt: {\n        fontFamily: 'System',\n        fontWeight: '400',\n        alignSelf: 'flex-start',\n        fontSize: 12,\n        textAlign: 'left',\n        marginLeft: 4,\n      },\n      lowerEppDateFullfilledTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n\n      lowerDateRangeTxt: {\n        fontSize: 12,\n      },\n      lowerDatetimeRangeVw: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n      },\n      lowerDatetimeRangeTxt: {\n        fontSize: 12,\n      },\n      lowerDatetimeRangeFullfilledTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n    });\n\n    const typeIcons = {\n      vac: {\n        name: 'FontAwesome/plane',\n      },\n      epp: {\n        name: 'Ionicons/shirt',\n      },\n      ctu: {\n        name: 'MaterialIcons/published-with-changes',\n      },\n      pya: {\n        name: 'Ionicons/md-home',\n      },\n      rys: {\n        name: 'MaterialCommunityIcons/exit-run',\n      },\n    };\n\n    /*\nColor         HEX     HSL           Background    HEX\nstronggreen   0DA129  131,85,34     131,55,85     B0E8BA\nerror         FF4564  351,100,64    351,55,85     EEC4CA\n*/\n\n    const statusIcons = {\n      E: {\n        name: 'FontAwesome/hourglass-3',\n        color: theme.colors.background,\n        back: theme.colors.light,\n      },\n      A: {\n        name: 'FontAwesome/thumbs-up',\n        color: theme.colors.stronggreen,\n        back: '#B0E8BA',\n      },\n      D: {\n        name: 'FontAwesome/thumbs-down',\n        color: theme.colors.error,\n        back: '#EEC4CA',\n      },\n    };\n\n    const renderType = item => {\n      return (\n        <View\n          style={[\n            styles.typeVw,\n            { borderTopLeftRadius: 8, borderBottomLeftRadius: 8 },\n          ]}\n        >\n          <Icon\n            name={typeIcons[item?.req_type].name}\n            color={theme.colors.background}\n            size={24}\n          />\n        </View>\n      );\n    };\n\n    const renderStatus = item => {\n      return (\n        <View\n          style={[\n            styles.statusVw,\n            { borderTopRightRadius: 8, borderBottomRightRadius: 8 },\n          ]}\n        >\n          <Icon\n            name={statusIcons[item?.req_status].name}\n            color={statusIcons[item?.req_status].color}\n            size={24}\n          />\n        </View>\n      );\n    };\n\n    const renderUpperDetail = item => {\n      return (\n        <View style={styles.upperDetailVw}>\n          <View style={styles.empNameVw}>\n            <Text\n              style={[\n                styles.upperDetailEmpNameTxt,\n                { color: theme.colors.strong },\n              ]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {item?.req_emp_name}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n              style={[styles.reqDateTxt, { color: theme.colors.strong }]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {CustomCode.FormatIsoString(item?.req_date, 'DD/MM HH:mm')}\n            </Text>\n          </View>\n        </View>\n      );\n    };\n\n    const renderMiddleDetailTwoSects = item => {\n      let leftItem =\n        item?.req_type === 'ctu' ? item?.req_wor_name : item?.req_con_name;\n\n      return (\n        <View style={styles.middleDetailVw}>\n          <View style={styles.middleTwoSectsVw}>\n            <Text\n              style={[\n                styles.middleLeftSectsTxt,\n                { color: theme.colors.strong },\n              ]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {leftItem}\n            </Text>\n\n            <Text\n              style={[\n                styles.middleRightSectsTxt,\n                { color: theme.colors.strong },\n              ]}\n              ellipsizeMode={'clip'}\n              numberOfLines={1}\n            >\n              {item?.req_rea_name}\n            </Text>\n          </View>\n        </View>\n      );\n    };\n\n    const renderLowerDetailDateRange = item => {\n      let dateFrom = item[`req_${item?.req_type}_from`],\n        dateTo = item[`req_${item?.req_type}_to`],\n        dateFullfilled = item?.req_fullfilled;\n\n      dateFrom = CustomCode.Date2String(\n        CustomCode.IsoDateStringToUTCDate(dateFrom),\n        'DD/MM'\n      );\n      dateTo = CustomCode.Date2String(\n        CustomCode.IsoDateStringToUTCDate(dateTo),\n        'DD/MM'\n      );\n\n      return (\n        <View style={styles.lowerDetailVw}>\n          <View style={styles.lowerDateRange}>\n            <Text\n              style={[styles.lowerDateRangeTxt, { color: theme.colors.strong }]}\n            >\n              {`${dateFrom} - ${dateTo}`}\n            </Text>\n          </View>\n\n          <Text\n            style={[styles.lowerDateFulfilled, { color: theme.colors.strong }]}\n          >\n            {dateFullfilled\n              ? CustomCode.Date2String(\n                CustomCode.IsoDateStringToDate(dateFullfilled),\n                'DD/MM HH:mm'\n              )\n              : ''}\n          </Text>\n        </View>\n      );\n    };\n\n    const renderDetail = item => {\n      let dateFrom,\n        dateTo,\n        dateFullfilled = item?.req_fullfilled;\n\n      switch (item?.req_type) {\n        case 'vac':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(item)}\n\n              <View style={styles.middleDetailVw}>\n                <View style={{ minHeight: 12 }} />\n              </View>\n\n              {renderLowerDetailDateRange(item)}\n            </View>\n          );\n\n        case 'ctu':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(item)}\n\n              {renderMiddleDetailTwoSects(item)}\n\n              {renderLowerDetailDateRange(item)}\n            </View>\n          );\n\n        case 'pya':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(item)}\n\n              {renderMiddleDetailTwoSects(item)}\n\n              {renderLowerDetailDateRange(item)}\n            </View>\n          );\n\n        // {'Zapatos seguridad marca cañon con suela de goma'}\n        case 'epp':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(item)}\n\n              <View style={styles.middleDetailVw}>\n                <View>\n                  <Text\n                    style={[\n                      styles.middleEppQuantTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {item?.req_epp_quantity}\n                  </Text>\n                </View>\n\n                <View style={styles.middleEppNameVw}>\n                  <Text\n                    style={[\n                      styles.middleEppNameTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                    ellipsizeMode={'clip'}\n                  >\n                    {item?.req_epp_art_name}\n                  </Text>\n                </View>\n\n                <View>\n                  <Text\n                    style={[\n                      styles.middleEppSizeTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {item?.req_epp_size}\n                  </Text>\n                </View>\n              </View>\n\n              <View style={styles.lowerDetailVw}>\n                <View style={styles.lowerEppColorObsVw}>\n                  <Text\n                    style={[\n                      styles.lowerEppColorTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                  >\n                    {item?.req_epp_color}\n                  </Text>\n\n                  <Text\n                    style={[\n                      styles.lowerEppObsTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    ellipsizeMode={'clip'}\n                    numberOfLines={1}\n                  >\n                    {item?.req_epp_observ}\n                  </Text>\n                </View>\n\n                <Text\n                  style={[\n                    styles.lowerEppDateFullfilledTxt,\n                    { color: theme.colors.strong },\n                  ]}\n                  numberOfLines={1}\n                  ellipsizeMode={'clip'}\n                >\n                  {dateFullfilled\n                    ? CustomCode.Date2String(\n                      CustomCode.IsoDateStringToDate(dateFullfilled),\n                      'DD/MM HH:mm'\n                    )\n                    : ''}\n                </Text>\n              </View>\n            </View>\n          );\n\n        case 'rys':\n          (dateFrom = item[`req_${item?.req_type}_from`]),\n            (dateTo = item[`req_${item?.req_type}_to`]);\n\n          dateFrom = CustomCode.Date2String(\n            CustomCode.IsoDateStringToDate(dateFrom),\n            'DD/MM HH:mm'\n          );\n          dateTo = CustomCode.Date2String(\n            CustomCode.IsoDateStringToDate(dateTo),\n            'DD/MM HH:mm'\n          );\n\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(item)}\n\n              {renderMiddleDetailTwoSects(item)}\n\n              <View style={styles.lowerDetailVw}>\n                <View style={styles.lowerDatetimeRangeVw}>\n                  <Text\n                    style={[\n                      styles.lowerDatetimeRangeTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                  >\n                    {`${dateFrom} - ${dateTo}`}\n                  </Text>\n                </View>\n\n                <Text\n                  style={[\n                    styles.lowerDatetimeRangeFullfilledTxt,\n                    { color: theme.colors.strong },\n                  ]}\n                >\n                  {dateFullfilled\n                    ? CustomCode.Date2String(\n                      CustomCode.IsoDateStringToDate(dateFullfilled),\n                      'DD/MM HH:mm'\n                    )\n                    : ''}\n                </Text>\n              </View>\n            </View>\n          );\n      }\n    };\n\n    // { borderRadius: 8, backgroundColor: theme.colors.light },\n    return (\n      <Surface\n        style={[\n          styles.Surfaceuw,\n          {\n            borderRadius: 8,\n            backgroundColor: statusIcons[item?.req_status].back,\n          },\n        ]}\n        elevation={3}\n      >\n        {renderType(item)}\n\n        {renderDetail(item)}\n\n        {renderStatus(item)}\n      </Surface>\n    );\n  };\n\n  const fullfillRequest = async (rowData, op) => {\n    console.log(`fullfillRequest... id${rowData?.item.req_id}, op: ${op}`);\n\n    try {\n      const result = DcSSApi.requestFullfillPOST(Constants, {\n        req_fullfill_date: new Date().toISOString(),\n        req_id: rowData?.item.req_id,\n        req_status: op,\n        req_sup_id: Constants['my_emp_id'],\n      });\n      console.log(`fullfillRequest POST OK. Result: ${JSON.stringify(result)}`);\n\n      // console.log(`refetch: ${refetch}`);\n      // refetch && refetch();\n\n      // console.log(`refetchNum: ${refetchNum}`);\n      setTimeout(() => {\n        setRefetchNum(1 + refetchNum);\n      }, 300);\n\n      // console.log(`refetched.`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const onSwipeableOpen = args => {\n    const { side, toValue, rowRef, actions } = args;\n    console.log(`opened ${side}, toValue: ${toValue}`);\n\n    if (Math.abs(toValue) > 3 * (itemWidth / 4)) {\n      rowRef.close();\n      if (side === 'left') actions[0]?.onActionExec?.(args);\n      else actions[1]?.onActionExec?.(args);\n    }\n  };\n\n  const SwipeableRow = rowData => {\n    const { item, index, fetchData, itemAnimate } = rowData;\n\n    let rowRef;\n\n    const updateRef = ref => {\n      rowRef = ref;\n    };\n\n    const openStop = 110;\n    const ACTION_APPROVE = 0;\n    const ACTION_DENY = 1;\n    const ACTION_ERASE = 2;\n    const ACTION_NONE = 3;\n    const swipeActions = [\n      {\n        icon: 'FontAwesome/thumbs-up',\n        name: 'Aprueba',\n        style: { backgroundColor: theme.colors.Strong_Green },\n        onActionExec: rowData => {\n          fullfillRequest(rowData, 'A');\n        },\n      },\n      {\n        icon: 'FontAwesome/thumbs-down',\n        name: 'Deniega',\n        style: { backgroundColor: theme.colors.Error },\n        onActionExec: rowData => {\n          fullfillRequest(rowData, 'D');\n        },\n      },\n      {\n        icon: 'delete',\n        name: '',\n        style: { backgroundColor: 'red' },\n        onActionExec: () => { },\n      },\n      {\n        icon: 'AntDesign/minuscircleo',\n        name: '',\n        style: { backgroundColor: 'gray' },\n        onActionExec: () => { },\n      },\n    ];\n\n    const disableLeftSwipe = item.req_status === 'A';\n    const disableRightSwipe = item.req_status === 'D';\n\n    // const preview = itemAnimate === rowData?.item.sup_id;\n    const actions = [\n      swipeActions[\n      disableLeftSwipe\n        ? ACTION_NONE\n        : ['E', 'D'].includes(item.req_status)\n          ? ACTION_APPROVE\n          : ACTION_ERASE\n      ],\n      swipeActions[\n      disableRightSwipe\n        ? ACTION_NONE\n        : ['E', 'A'].includes(item.req_status)\n          ? ACTION_DENY\n          : ACTION_ERASE\n      ],\n    ];\n\n    const itemArgs = {\n      item,\n      index,\n      actions,\n    };\n\n    const onItemTouch = ({ item, rowRef }) => {\n      if (rowRef.getState().rowState) rowRef?.close();\n      else if (['E', 'D'].includes(item.req_status)) rowRef?.openLeft(openStop);\n      else if (['E', 'A'].includes(item.req_status))\n        rowRef?.openRight(openStop);\n      return true;\n    };\n\n    return (\n      <CustomCode.Swipeable\n        ref={updateRef}\n        friction={2}\n        leftThreshold={3 * (itemWidth / 8)}\n        rightThreshold={3 * (itemWidth / 8)}\n        leftStop={openStop}\n        rightStop={openStop}\n        preview={false}\n        previewOpenValue={80}\n        previewOpenDelay={1000}\n        previewDuration={600}\n        renderLeftActions={(progress, dragX) =>\n          renderActions({\n            ...itemArgs,\n            rowRef,\n            progress,\n            dragX,\n            side: 'left',\n          })\n        }\n        renderRightActions={(progress, dragX) =>\n          renderActions({\n            ...itemArgs,\n            rowRef,\n            progress,\n            dragX,\n            side: 'right',\n          })\n        }\n        onSwipeableOpen={(direction, toValue) =>\n          onSwipeableOpen({\n            ...itemArgs,\n            rowRef,\n            side: direction,\n            toValue,\n          })\n        }\n        onSwipeableClose={() => console.log('closed')}\n      >\n        <CustomCode.RectButton\n          onPress={() => onItemTouch({ ...itemArgs, rowRef })}\n        >\n          {renderSwipeableItem({ ...itemArgs, rowRef })}\n        </CustomCode.RectButton>\n      </CustomCode.Swipeable>\n    );\n  };\n\n  const renderActions = rowData => {\n    const { dragX, rowRef, item, side, actions } = rowData;\n\n    const actionStyles = {\n      itemView: {\n        height: 64,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderRadius: 8,\n        marginTop: 2,\n        marginBottom: 2,\n      },\n\n      backBtn: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        borderRadius: 8,\n      },\n\n      backLeftBtn: {\n        flex: 1,\n        alignItems: 'flex-start',\n        marginRight: 16,\n      },\n\n      backRightBtn: {\n        flex: 1,\n        alignItems: 'flex-end',\n        marginLeft: 16,\n      },\n\n      leftActionVw: {\n        paddingLeft: 10,\n      },\n\n      rightActionVw: {\n        paddingRight: 10,\n      },\n\n      touchActionVw: {\n        width: '100%',\n        height: '100%',\n      },\n\n      touchActionCommandVw: {\n        flexDirection: 'row',\n        flex: 1,\n        alignItems: 'center',\n      },\n\n      punchInOutTopBottomVw: {\n        height: 24,\n        justifyContent: 'flex-end',\n      },\n\n      punchInOutTxt: {\n        fontFamily: 'System',\n        fontSize: 14,\n        fontWeight: '600',\n        color: '#FFFFFF',\n      },\n    };\n\n    const AnimateActionView = ({ inputRange, children }) => {\n      return (\n        <CustomCode.Animated.View\n          style={{\n            transform: [\n              {\n                scale: dragX.interpolate({\n                  inputRange,\n                  outputRange: inputRange[0] < 0 ? [1, 0] : [0, 1],\n                  extrapolate: 'clamp',\n                }),\n              },\n            ],\n          }}\n        >\n          {children}\n        </CustomCode.Animated.View>\n      );\n    };\n\n    const SwipeAction = ({ action }) => {\n      return (\n        <Touchable\n          style={[\n            actionStyles.backBtn,\n            side === 'left'\n              ? actionStyles.backLeftBtn\n              : actionStyles.backRightBtn,\n            action.style,\n          ]}\n          onPress={() => {\n            if (side === 'left') rowRef?.openLeft();\n            else rowRef?.openRight();\n          }}\n        >\n          <AnimateActionView inputRange={side === 'left' ? [1, 90] : [-90, -1]}>\n            <View\n              style={\n                side === 'left'\n                  ? actionStyles.leftActionVw\n                  : actionStyles.rightActionVw\n              }\n            >\n              <View style={actionStyles.touchActionVw}>\n                <View\n                  style={[\n                    actionStyles.touchActionCommandVw,\n                    side === 'left'\n                      ? { justifyContent: 'flex-start' }\n                      : { justifyContent: 'flex-end' },\n                  ]}\n                >\n                  {side === 'left' && (\n                    <Icon name={action.icon} size={32} color=\"#FFFFFF\" />\n                  )}\n\n                  <View>\n                    <View style={actionStyles.punchInOutTopBottomVw} />\n                    <Text\n                      style={[\n                        actionStyles.punchInOutTxt,\n                        side === 'left'\n                          ? { marginLeft: 6 }\n                          : { marginRight: 6 },\n                      ]}\n                    >\n                      {action.name}\n                    </Text>\n                    <View style={actionStyles.punchInOutTopBottomVw} />\n                  </View>\n\n                  {side === 'right' && (\n                    <Icon name={action.icon} size={32} color=\"#FFFFFF\" />\n                  )}\n                </View>\n              </View>\n            </View>\n          </AnimateActionView>\n        </Touchable>\n      );\n    };\n\n    if (side === 'left') {\n      return (\n        <View style={[actionStyles.itemView, { width: itemWidth - 10 }]}>\n          <SwipeAction action={actions[0]} />\n        </View>\n      );\n    } else\n      return (\n        <View style={[actionStyles.itemView, { width: itemWidth - 10 }]}>\n          <SwipeAction action={actions[1]} />\n        </View>\n      );\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  const animationIsRunning = CustomCode.useRef(false);\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const dcSSRequestFullfillPOST = DcSSApi.useRequestFullfillPOST();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (AprobacionesScreen) */}\n      <DcSSApi.FetchConceptsByEmpGET emp_id={Constants['my_emp_id']}>\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenAprobacionesScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* StatusHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Pendientes', 'Aprobadas', 'Denegadas', 'Todas']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n              {/* NonScrollingView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  { flex: 1, height: '100%' },\n                  dimensions.width\n                )}\n              >\n                <Utils.CustomCodeErrorBoundary>\n                  <View\n                    onLayout={event =>\n                      setItemWidth(event.nativeEvent.layout.width)\n                    }\n                  />\n                </Utils.CustomCodeErrorBoundary>\n                <DcSSApi.FetchRequests2approveGET\n                  emp_id={Constants['my_emp_id']}\n                  emp_status={requestsType}\n                  num={refetchNum}\n                >\n                  {({ loading, error, data, refetchRequests2approve }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <>\n                        {/* SolicitudesSectionView */}\n                        <View\n                          style={StyleSheet.applyWidth(\n                            {\n                              height: '100%',\n                              marginLeft: '3%',\n                              marginRight: '3%',\n                            },\n                            dimensions.width\n                          )}\n                        >\n                          <CustomCode.FlatList\n                            data={fetchData}\n                            renderItem={({ item, index }) =>\n                              SwipeableRow({\n                                item,\n                                index,\n                                fetchData,\n                                itemAnimate: fetchData.find(\n                                  f => f.req_status === 'E'\n                                )?.req_id,\n                              })\n                            }\n                            keyExtractor={item => item?.req_id}\n                          />\n                        </View>\n                      </>\n                    );\n                  }}\n                </DcSSApi.FetchRequests2approveGET>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(AprobacionesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, Container, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst BienvenidoScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [screenName, setScreenName] = React.useState(undefined);\n  const stopIfNonZero = value => {\n    // const variables = CustomCode.useValues();\n    const perms_got = Variables['perms_got']; //\n\n    console.log(`value: ${value}, perms_got: ${perms_got}`);\n\n    return value == 0 ? 1 : 0;\n  };\n\n  const HasAllPermissions = async () => {\n    if (CustomCode.Platform.OS === 'web') return true;\n\n    // Camera\n    const { status } = await CustomCode.Camera.getCameraPermissionsAsync();\n\n    console.log(`Camera Permission status: ${status}`);\n\n    if (status !== 'granted') return false;\n\n    // Notifications\n    const settings = await CustomCode.ExpoNotifications.getPermissionsAsync();\n    console.log(\n      `Notifications Permission status: ${settings.status}, ios: ${settings?.ios}`\n    );\n\n    return (\n      settings.granted ||\n      settings.ios?.status ===\n        CustomCode.ExpoNotifications.IosAuthorizationStatus.AUTHORIZED\n    );\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        if (false) {\n          return;\n        }\n        console.log(Constants['my_emp_id']);\n        const hasPermissions = await HasAllPermissions();\n        if (!hasPermissions) {\n          return;\n        }\n        console.log('Not stopped');\n        navigation.navigate('Permissions', {\n          screen: 'CompletaInicioSessionScreen',\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        { justifyContent: 'space-between' },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          left={{}}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            alignSelf: 'center',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            { alignItems: 'center', marginTop: 10 },\n            dimensions.width\n          )}\n        >\n          <DcSSApi.FetchEmployeeConfigGET emp_id={Constants['my_emp_id']}>\n            {({ loading, error, data, refetchEmployeeConfig }) => {\n              const fetchData = data?.json;\n              if (loading) {\n                return <ActivityIndicator />;\n              }\n\n              if (error || data?.status < 200 || data?.status >= 300) {\n                return <ActivityIndicator />;\n              }\n\n              return (\n                <>\n                  <View\n                    style={StyleSheet.applyWidth(\n                      {\n                        alignSelf: 'stretch',\n                        marginBottom: 10,\n                        marginLeft: 5,\n                        marginRight: 5,\n                        marginTop: 10,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    <Text\n                      style={StyleSheet.applyWidth(\n                        {\n                          color: theme.colors.secondary,\n                          fontFamily: 'Montserrat_600SemiBold',\n                        },\n                        dimensions.width\n                      )}\n                    >\n                      {fetchData?.companyName}\n                    </Text>\n                  </View>\n\n                  <Container\n                    elevation={0}\n                    style={StyleSheet.applyWidth(\n                      {\n                        alignItems: 'center',\n                        borderColor: theme.colors.medium,\n                        marginBottom: '5%',\n                        marginTop: '5%',\n                      },\n                      dimensions.width\n                    )}\n                    useThemeGutterPadding={true}\n                  >\n                    <Text\n                      style={StyleSheet.applyWidth(\n                        {\n                          alignSelf: 'center',\n                          color: theme.colors.strong,\n                          fontFamily: 'System',\n                          fontSize: 33,\n                          fontWeight: '700',\n                          opacity: 1,\n                          textAlign: 'center',\n                          textDecorationColor: theme.colors.custom_rgb255_0_0,\n                        },\n                        dimensions.width\n                      )}\n                    >\n                      {'Bienvenido '}\n                      {fetchData?.emp_first_name}\n                      {'!\\n'}\n                    </Text>\n                  </Container>\n                </>\n              );\n            }}\n          </DcSSApi.FetchEmployeeConfigGET>\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.strong,\n                fontFamily: 'Montserrat_500Medium',\n                fontSize: 16,\n                lineHeight: 24,\n                marginBottom: '5%',\n                marginLeft: '5%',\n                marginRight: '5%',\n                marginTop: '5%',\n                opacity: 1,\n                textAlign: 'center',\n              },\n              dimensions.width\n            )}\n          >\n            {\n              'A continuación se le solicitarán ciertos permisos a otorgar para el funcionamiento correcto de la aplicación'\n            }\n          </Text>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { justifyContent: 'center', marginBottom: 10 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontSize: 24,\n                  fontWeight: '700',\n                  marginLeft: '5%',\n                  marginRight: '5%',\n                  marginTop: '20%',\n                  opacity: 1,\n                  textAlign: 'center',\n                  textDecorationColor: theme.colors.custom_rgb255_0_0,\n                },\n                dimensions.width\n              )}\n            >\n              {'Seleccione iniciar para continuar\\n'}\n            </Text>\n          </View>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            marginBottom: '10%',\n            marginLeft: '6%',\n            marginRight: '6%',\n          },\n          dimensions.width\n        )}\n      >\n        {/* Button Solid */}\n        <Button\n          onPress={() => {\n            try {\n              console.log(Constants['perms_got']);\n              navigation.navigate('Permissions', {\n                screen: 'PermisoDeNotificacionesScreen',\n              });\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              color: theme.colors.background,\n              fontFamily: 'System',\n              fontWeight: '700',\n              marginLeft: '6%',\n              marginRight: '6%',\n              minHeight: 48,\n              textAlign: 'center',\n              width: '100%',\n            },\n            dimensions.width\n          )}\n          title={'Iniciar'}\n        />\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(BienvenidoScreen);\n","import React from 'react';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\n\nconst BlankScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n\n  return (\n    <ScreenContainer>\n      <ScrollView bounces={true} showsVerticalScrollIndicator={true}>\n        <FlatList\n          contentContainerStyle={StyleSheet.applyWidth(\n            { flex: 1 },\n            dimensions.width\n          )}\n          data={[]}\n          keyExtractor={listData =>\n            listData?.id || listData?.uuid || JSON.stringify(listData)\n          }\n          listKey={'jEyYnVAx'}\n          numColumns={1}\n          renderItem={({ item }) => {\n            const listData = item;\n            return (\n              <View>\n                <Text\n                  style={StyleSheet.applyWidth(\n                    { color: theme.colors.strong },\n                    dimensions.width\n                  )}\n                >\n                  {'Double click me to edit 👀'}\n                </Text>\n              </View>\n            );\n          }}\n        />\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(BlankScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, Touchable, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst CompletaInicioSessionScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const showVars = () => {\n    const platform = CustomCode.Platform.OS;\n    console.log(`platform: ${platform}`);\n\n    // const constants = CustomCode.ExpoConstants[CustomCode.Platform.OS];\n    const constants = CustomCode.ExpoConstants;\n    console.log(`constants: ${JSON.stringify(constants)}`);\n\n    const isDevice = CustomCode.Platform.OS !== 'web' && constants.isDevice;\n    console.log(`isDevice: ${isDevice}`);\n  };\n\n  const getNotificationToken = async () => {\n    const isDevice =\n      CustomCode.Device.isDevice && CustomCode.Platform.OS !== 'web'; // && CustomCode.ExpoConstants;\n\n    if (isDevice && CustomCode.Device.isDevice) {\n      const expoPushToken =\n        await CustomCode.ExpoNotifications.getExpoPushTokenAsync({\n          experienceId: '@digicard/dss',\n        });\n\n      console.log(`expoPushToken: $expoPushToken}`);\n\n      return expoPushToken;\n    } else return { data: '' };\n  };\n  const dcSSEmployeeTokenPATCH = DcSSApi.useEmployeeTokenPATCH();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        const expoToken = await getNotificationToken();\n        setGlobalVariableValue({\n          key: 'ExpoNotifToken',\n          value: expoToken,\n        });\n        const tokenData = expoToken?.data;\n        (\n          await dcSSEmployeeTokenPATCH.mutateAsync({\n            emp_id: Constants['my_emp_id'],\n            emp_token: tokenData,\n          })\n        )?.json;\n        if (false) {\n          return;\n        }\n        navigation.navigate('Main', { screen: 'InicioScreen' });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          backgroundColor: theme.colors.background,\n          justifyContent: 'space-between',\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} left={{}} />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          { alignItems: 'center', flex: 1, justifyContent: 'center' },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          style={StyleSheet.applyWidth(\n            { height: 150, marginBottom: 16, overflow: 'hidden', width: 150 },\n            dimensions.width\n          )}\n        />\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 28,\n              fontWeight: '700',\n              textAlign: 'center',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {'Registrando Notificaciones...'}\n        </Text>\n\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontSize: 16,\n              lineHeight: 28,\n              marginLeft: '3%',\n              marginRight: '3%',\n              textAlign: 'center',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {'Un momento por favor...'}\n        </Text>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(CompletaInicioSessionScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ConsultaComedorScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const InitializeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [currentDate, setCurrentDate] = React.useState(\n    InitializeCurrentDate(\"''\")\n  );\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Comedor');\n  const [showing, setShowing] = React.useState(0);\n  const calcDateFromByOption = showOption => {\n    let rslt = new Date(dateTo);\n\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n    switch (showOption) {\n      case 0:\n        break;\n\n      case 1:\n        /// To previous monday\n        let offset = rslt.getDay() - 1;\n        if (offset < 0) offset += 7;\n        rslt = dateAdd(rslt, -offset);\n        break;\n\n      case 2:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 3:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n  };\n\n  const conceptName = con_id => {\n    const found = screenData.find(e => e.con_id == con_id);\n\n    return found?.con_name;\n  };\n\n  const calcDateFrom = aDateTo => {\n    let rslt = aDateTo;\n\n    if (!rslt) rslt = dateTo;\n\n    console.log(`calcDateFrom(${currentDate}): ${rslt}`);\n    switch (showing) {\n      case 1:\n        break;\n\n      case 2:\n        /// To previous monday\n        let offset = rslt.getDay() - 1;\n        if (offset < 0) offset += 7;\n        rslt = dateAdd(rslt, -offset);\n        break;\n\n      case 3:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 4:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFrom(${currentDate}): ${rslt}`);\n    return rslt;\n  };\n\n  const DateToUtcString = aDate => {\n    if (aDate) {\n      // if(variables['logging']) console.log(\n      // `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n      // );\n\n      aDate.setHours(0);\n\n      const UTCString = aDate.toISOString().split('T')[0];\n      // if(variables['logging']) console.log(`UTCString: ${UTCString}`);\n      return UTCString;\n    }\n    return '';\n  };\n\n  const extractDate = sDate => {\n    return CustomCode.FormatIsoString(sDate, 'DD/MM');\n  };\n\n  const extractTime = sDate => {\n    return CustomCode.FormatIsoString(sDate, 'HH:mm');\n  };\n\n  const setShow = what => {\n    setShowing(what);\n\n    calcDateFromByOption(what);\n\n    console.log(`setShow(${what})`);\n  };\n\n  const dateAdd = (aDate, days) => {\n    const newDate = new Date(aDate.getTime() + days * 1000 * 60 * 60 * 24);\n    if (variables['logging'])\n      console.log(`dateSAdd(${aDate}, ${days}) => ${newDate}`);\n    return newDate;\n  };\n\n  const log = value => {\n    if (variables['logging'])\n      console.log(`log value: ${JSON.stringify(value)}`);\n    return value;\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setDateTo(currentDate);\n      setDateFrom(currentDate);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (ConsultaComedorScreen) */}\n      <DcSSApi.FetchConceptsByEmpGET emp_id={Constants['my_emp_id']}>\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenConsultaComedorScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* DatePickerHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Hoy', 'Semana', 'Mes', 'Año']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  { marginLeft: '2%', marginRight: '2%' },\n                  dimensions.width\n                )}\n              >\n                <DcSSApi.FetchComedor2ByEmpGET\n                  date_from={DateToUtcString(dateFrom)}\n                  emp_id={Constants['my_emp_id']}\n                >\n                  {({ loading, error, data, refetchComedor2ByEmp }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <>\n                        {/* SectionHeaderView */}\n                        <View\n                          style={StyleSheet.applyWidth(\n                            {\n                              height: 25,\n                              justifyContent: 'center',\n                              marginTop: '3%',\n                            },\n                            dimensions.width\n                          )}\n                        >\n                          {/* TableHeaderView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              {\n                                alignItems: 'center',\n                                backgroundColor: theme.colors.light,\n                                flex: 1,\n                                flexDirection: 'row',\n                              },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { alignItems: 'center', width: '14%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Fecha'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { alignItems: 'center', width: '5%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                    textAlign: 'center',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'#'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { alignItems: 'flex-start', width: '45%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Menú'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'flex-start',\n                                  marginLeft: 8,\n                                  width: '46%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    alignSelf: 'flex-start',\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Terminal'}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        <FlatList\n                          contentContainerStyle={StyleSheet.applyWidth(\n                            { marginBottom: 1, minHeight: 30 },\n                            dimensions.width\n                          )}\n                          data={fetchData}\n                          keyExtractor={listData =>\n                            listData?.id ||\n                            listData?.uuid ||\n                            JSON.stringify(listData)\n                          }\n                          listKey={'ZRb5NsVy'}\n                          renderItem={({ item }) => {\n                            const listData = item;\n                            return (\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    alignItems: 'center',\n                                    backgroundColor: theme.colors.verylight,\n                                    flexDirection: 'row',\n                                    height: 25,\n                                    marginBottom: 2,\n                                    marginLeft: 0,\n                                    marginRight: 0,\n                                    minHeight: 30,\n                                    paddingLeft: 0,\n                                    paddingRight: 0,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { alignItems: 'center', width: '14%' },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {extractDate(listData?.tio_date)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { alignItems: 'center', width: '5%' },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'center',\n                                        color: theme.colors.strong,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {listData?.tio_amount}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { alignItems: 'flex-start', width: '45%' },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    numberOfLines={1}\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'flex-start',\n                                        color: theme.colors.strong,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {listData?.tio_menu}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'flex-start',\n                                      marginLeft: 8,\n                                      width: '36%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    numberOfLines={1}\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'flex-start',\n                                        color: theme.colors.strong,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {listData?.tio_terminal}\n                                  </Text>\n                                </View>\n                              </View>\n                            );\n                          }}\n                        />\n                      </>\n                    );\n                  }}\n                </DcSSApi.FetchComedor2ByEmpGET>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultaComedorScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Icon,\n  ScreenContainer,\n  Surface,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ConsultaDocumentosScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const InitializeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [dateFrom, setDateFrom] = React.useState(InitializeCurrentDate(\"''\"));\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [itemWidth, setItemWidth] = React.useState(0);\n  const [refetchNum, setRefetchNum] = React.useState(1);\n  const [requestsType, setRequestsType] = React.useState('E');\n  const [screenName, setScreenName] = React.useState('Documentos');\n  const [showing, setShowing] = React.useState(0);\n  const [swipingLeft, setSwipingLeft] = React.useState(false);\n  const [swipingRight, setSwipingRight] = React.useState(false);\n  const DateToUtcString = aDate => {\n    return CustomCode.DateToUtcString(aDate);\n  };\n\n  const extractDate = sDate => {\n    return CustomCode.FormatIsoString(sDate, 'DD/MM');\n  };\n\n  const date2HHMM = aDate => {\n    return CustomCode.FormatIsoString(aDate, 'DD/MM HH:mm');\n  };\n\n  const renderIcon = docType => {\n    switch (docType) {\n      case 'Certificado':\n        return (\n          <Icon name={'Ionicons/receipt-outline'} size={24} color=\"white\" />\n        );\n\n      case 'Recibo':\n        return <Icon name={'FontAwesome/envelope-o'} size={24} color=\"white\" />;\n\n      default:\n        return (\n          <Icon\n            name={'Ionicons/document-text-outline'}\n            size={24}\n            color=\"white\"\n          />\n        );\n    }\n  };\n\n  const log = value => {\n    // return CustomCode.log(value);\n  };\n\n  const setShow = what => {\n    setShowing(what);\n\n    calcDateFromByOption(what);\n\n    // console.log(`setShow(${what})`);\n    CustomCode.log(`setShow(${what})`);\n  };\n\n  const calcDateFromByOption = showOption => {\n    let rslt = new Date();\n\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n    switch (showOption) {\n      case 0:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 1:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n\n      case 2:\n        /// To start of age\n        rslt = new Date(2000, 0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n  };\n\n  const showDocument = item => {\n    props.navigation.navigate('DetalleDocumentoScreen', {\n      docType: item?.doc_type,\n      docName: item?.doc_name,\n      docDate: item?.doc_date,\n      docDesc: item?.doc_description,\n      docUrl: item?.doc_location,\n      // docUrl: 'https://pbs.twimg.com/media/ES_4UzJXQAMHNrp.jpg'\n    });\n\n    // Recibo de sueldo https://pbs.twimg.com/media/ES_4UzJXQAMHNrp.jpg\n    // Certificado https://cdn.eldoce.tv/sites/default/files/styles/site_nota_slider_preview/public/certificado-diego-maradona-agustina-cosachov.jpg\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  const animationIsRunning = CustomCode.useRef(false);\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (ConsultaDocumentosScreen) */}\n      <DcSSApi.FetchConceptsByEmpGET emp_id={Constants['my_emp_id']}>\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenConsultaDocumentosScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* DatePickerHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Este Mes', 'Este Año', 'Todos']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n              {/* NonScrollingView */}\n              <View>\n                <DcSSApi.FetchDocumentsByEmpGET\n                  date_from={DateToUtcString(dateFrom)}\n                  emp_id={Constants['my_emp_id']}\n                >\n                  {({ loading, error, data, refetchDocumentsByEmp }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <>\n                        {/* SolicitudesSectionView */}\n                        <View\n                          style={StyleSheet.applyWidth(\n                            { marginLeft: '3%', marginRight: '3%' },\n                            dimensions.width\n                          )}\n                        >\n                          <FlatList\n                            contentContainerStyle={StyleSheet.applyWidth(\n                              { flex: 1 },\n                              dimensions.width\n                            )}\n                            data={fetchData}\n                            keyExtractor={listData =>\n                              listData?.id ||\n                              listData?.uuid ||\n                              JSON.stringify(listData)\n                            }\n                            listKey={'KOKYXN0N'}\n                            numColumns={1}\n                            renderItem={({ item }) => {\n                              const listData = item;\n                              return (\n                                <Touchable\n                                  onPress={() => {\n                                    try {\n                                      showDocument(listData);\n                                    } catch (err) {\n                                      console.error(err);\n                                    }\n                                  }}\n                                >\n                                  <Surface\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        backgroundColor: theme.colors.light,\n                                        borderRadius: 8,\n                                        height: 64,\n                                        marginBottom: 5,\n                                        marginTop: 2,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          borderRadius: 8,\n                                          flexDirection: 'row',\n                                          marginBottom: 3,\n                                          marginRight: 10,\n                                          marginTop: 10,\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {/* iconVw */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            alignItems: 'center',\n                                            borderBottomLeftRadius: 8,\n                                            borderTopLeftRadius: 8,\n                                            justifyContent: 'center',\n                                            width: 40,\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        <Utils.CustomCodeErrorBoundary>\n                                          {renderIcon(listData?.doc_type)}\n                                        </Utils.CustomCodeErrorBoundary>\n                                      </View>\n                                      {/* detailVw */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            borderBottomRightRadius: 8,\n                                            borderTopRightRadius: 8,\n                                            flex: 1,\n                                            justifyContent: 'space-between',\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* upperDetail */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            {\n                                              alignItems: 'center',\n                                              flexDirection: 'row',\n                                              justifyContent: 'space-between',\n                                              marginBottom: 2,\n                                              minHeight: 16,\n                                              width: '100%',\n                                            },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <View\n                                            style={StyleSheet.applyWidth(\n                                              {\n                                                alignItems: 'flex-start',\n                                                flex: 1,\n                                              },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            <Text\n                                              style={StyleSheet.applyWidth(\n                                                {\n                                                  alignSelf: 'flex-start',\n                                                  color: theme.colors.strong,\n                                                  fontFamily: 'System',\n                                                  fontWeight: '600',\n                                                },\n                                                dimensions.width\n                                              )}\n                                            >\n                                              {listData?.doc_name}\n                                            </Text>\n                                          </View>\n\n                                          <View\n                                            style={StyleSheet.applyWidth(\n                                              { alignItems: 'flex-end' },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            <Text\n                                              style={StyleSheet.applyWidth(\n                                                {\n                                                  alignSelf: 'center',\n                                                  color: theme.colors.strong,\n                                                  fontFamily: 'System',\n                                                  fontSize: 10,\n                                                  fontWeight: '600',\n                                                  marginLeft: 3,\n                                                },\n                                                dimensions.width\n                                              )}\n                                            >\n                                              {date2HHMM(listData?.doc_date)}\n                                            </Text>\n                                          </View>\n                                        </View>\n                                        {/* midDetailVw */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { minHeight: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <Text\n                                            style={StyleSheet.applyWidth(\n                                              { color: theme.colors.strong },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            {listData?.doc_description}\n                                          </Text>\n                                        </View>\n                                      </View>\n                                    </View>\n                                  </Surface>\n                                </Touchable>\n                              );\n                            }}\n                          />\n                        </View>\n                      </>\n                    );\n                  }}\n                </DcSSApi.FetchDocumentsByEmpGET>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultaDocumentosScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  DatePicker,\n  Icon,\n  IconButton,\n  ScreenContainer,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ConsultaFichadasScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const InitializeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [currentDate, setCurrentDate] = React.useState(\n    InitializeCurrentDate(\"''\")\n  );\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [screenData, setScreenData] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Fichadas');\n  const dateInc = date => {\n    const newDate = new Date(date.getTime() + 1000 * 60 * 60 * 24);\n    if (variables['logging']) console.log(`dateInc(${date} => ${newDate}`);\n    return newDate;\n  };\n\n  const shortTime = time => {\n    // console.log(\"shortTime\");\n    return time?.substr(3);\n  };\n\n  const UtcDate2ShortTime = utcDateStr => {\n    return utcDateStr?.split('T')[1].substr(0, 5);\n  };\n\n  const tarde2string = id => {\n    return id ? (id == 1 ? 'Tarde' : 'Retiro anticipado') : '';\n  };\n\n  const log = value => {\n    if (variables['logging'])\n      console.log(`log value: ${JSON.stringify(value)}`);\n    return value;\n  };\n\n  const dateToUtcString = aDate => {\n    if (aDate) {\n      if (variables['logging'])\n        console.log(\n          `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n        );\n\n      aDate.setHours(0);\n\n      const UTCString = aDate.toISOString().split('T')[0];\n      if (variables['logging']) console.log(`UTCString: ${UTCString}`);\n      return UTCString;\n    }\n    return '';\n  };\n\n  const dateSub = date => {\n    const newDate = new Date(date.getTime() - 1000 * 60 * 60 * 24);\n    if (variables['logging']) console.log(`dateSub(${date} => ${newDate}`);\n    return newDate;\n  };\n\n  const conceptName = con_id => {\n    console.log(`Conceptos: ${JSON.stringify(screenData, undefined, 2)}`);\n\n    const found = screenData.find(e => e.con_id == con_id);\n\n    console.log(`Concepto id: ${con_id} -> ${found?.con_name}`);\n\n    return found?.con_name;\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        const aScreenData = (\n          await DcSSApi.conceptsByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setScreenData(aScreenData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      {/* DatePickerHeaderView */}\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginBottom: 10,\n            marginLeft: 10,\n            marginRight: 10,\n            marginTop: 10,\n          },\n          dimensions.width\n        )}\n      >\n        <IconButton\n          icon={'AntDesign/caretleft'}\n          onPress={() => {\n            try {\n              setCurrentDate(dateSub(currentDate));\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          size={32}\n          style={StyleSheet.applyWidth(\n            { marginLeft: 10, marginRight: 10 },\n            dimensions.width\n          )}\n        />\n        <View style={StyleSheet.applyWidth({ width: '75%' }, dimensions.width)}>\n          <DatePicker\n            date={currentDate}\n            label={'Date'}\n            leftIconMode={'inset'}\n            mode={'date'}\n            onDateChange={newDatePickerValue => {\n              try {\n                setCurrentDate(log(newDatePickerValue));\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n            type={'solid'}\n          />\n        </View>\n        <IconButton\n          icon={'AntDesign/caretright'}\n          onPress={() => {\n            try {\n              setCurrentDate(dateInc(currentDate));\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          size={32}\n          style={StyleSheet.applyWidth(\n            { marginLeft: 10, marginRight: 10 },\n            dimensions.width\n          )}\n        />\n      </View>\n      {/* NonScrollingView */}\n      <View>\n        <DcSSApi.FetchTimesheetGET\n          date_from={dateToUtcString(currentDate)}\n          date_to={dateToUtcString(currentDate)}\n          emp_id={Constants['my_emp_id']}\n        >\n          {({ loading, error, data, refetchTimesheet }) => {\n            const fetchData = data?.json;\n            if (loading) {\n              return <ActivityIndicator />;\n            }\n\n            if (error || data?.status < 200 || data?.status >= 300) {\n              return <ActivityIndicator />;\n            }\n\n            return (\n              <FlatList\n                contentContainerStyle={StyleSheet.applyWidth(\n                  { marginBottom: 1 },\n                  dimensions.width\n                )}\n                data={fetchData}\n                keyExtractor={listData =>\n                  listData?.id || listData?.uuid || JSON.stringify(listData)\n                }\n                listKey={'i7aKe7RI'}\n                renderItem={({ item }) => {\n                  const listData = item;\n                  return (\n                    <>\n                      {/* TimesheetSectionView */}\n                      <View\n                        style={StyleSheet.applyWidth(\n                          {\n                            borderBottomWidth: 1,\n                            borderColor: theme.colors.right,\n                            borderLeftWidth: 1,\n                            borderRadius: 5,\n                            borderRightWidth: 1,\n                            borderTopWidth: 1,\n                            marginLeft: 15,\n                            marginRight: 15,\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        <FlatList\n                          data={listData?.timesheet?.tim}\n                          keyExtractor={listData =>\n                            listData?.id ||\n                            listData?.uuid ||\n                            JSON.stringify(listData)\n                          }\n                          listKey={JSON.stringify(listData?.timesheet?.tim)}\n                          numColumns={1}\n                          renderItem={({ item }) => {\n                            const listData = item;\n                            return (\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    borderRadius: 5,\n                                    justifyContent: 'space-between',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {/* TextsView */}\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      backgroundColor: theme.colors.verylight,\n                                      borderRadius: 5,\n                                      paddingBottom: '2%',\n                                      paddingLeft: '2%',\n                                      paddingRight: '2%',\n                                      paddingTop: '2%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  {/* HorasTitlesView */}\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        backgroundColor: theme.colors.light,\n                                        flexDirection: 'row',\n                                        justifyContent: 'space-around',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {/* txtLabTitle */}\n                                    <Text\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.strong,\n                                          textAlign: 'center',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {'Laborables'}\n                                    </Text>\n                                    {/* txtWorkTitle */}\n                                    <Text\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.strong,\n                                          textAlign: 'center',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {'Trabajadas'}\n                                    </Text>\n                                  </View>\n                                  {/* HorasView */}\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        backgroundColor: theme.colors.verylight,\n                                        flexDirection: 'row',\n                                        justifyContent: 'space-around',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {/* txtLab */}\n                                    <Text\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.strong,\n                                          fontFamily: 'System',\n                                          fontWeight: '700',\n                                          textAlign: 'center',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {shortTime(listData?.tim_horlab_sum)}\n                                    </Text>\n                                    {/* txtWorked */}\n                                    <Text\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.strong,\n                                          fontFamily: 'System',\n                                          fontWeight: '700',\n                                          textAlign: 'center',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {shortTime(listData?.tim_hortrab_sum)}\n                                    </Text>\n                                  </View>\n\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        borderBottomWidth: 1,\n                                        borderColor: theme.colors.medium,\n                                        borderLeftWidth: 1,\n                                        borderRadius: 3,\n                                        borderRightWidth: 1,\n                                        borderTopWidth: 1,\n                                        marginBottom: 5,\n                                        marginLeft: 5,\n                                        marginRight: 5,\n                                        marginTop: 5,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {/* txtHorario */}\n                                    <Text\n                                      ellipsizeMode={'tail'}\n                                      numberOfLines={1}\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.strong,\n                                          fontFamily: 'System',\n                                          fontWeight: '700',\n                                          marginBottom: 3,\n                                          marginLeft: 5,\n                                          marginRight: 5,\n                                          marginTop: 3,\n                                          textAlign: 'center',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {listData?.tim_workschedule}\n                                    </Text>\n                                  </View>\n\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      { marginLeft: 5, marginRight: 5 },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {/* txtFeriado */}\n                                    <Text\n                                      ellipsizeMode={'tail'}\n                                      numberOfLines={1}\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.error,\n                                          fontFamily: 'System',\n                                          fontWeight: '600',\n                                          marginBottom: 3,\n                                          marginLeft: 5,\n                                          marginRight: 5,\n                                          marginTop: 3,\n                                          textAlign: 'center',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {listData?.tim_holiday}\n                                    </Text>\n                                  </View>\n                                  {/* CheckboxesView */}\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        backgroundColor: theme.colors.verylight,\n                                        borderColor: theme.colors.right,\n                                        borderRadius: 3,\n                                        flexDirection: 'row',\n                                        justifyContent: 'space-around',\n                                        paddingBottom: '1%',\n                                        paddingLeft: '2%',\n                                        paddingRight: '1%',\n                                        paddingTop: '1%',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {/* LeftCheckboxesView */}\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        { width: '50%' },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {/* PresentView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbPresentView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnPresent */}\n                                          <>\n                                            {!listData?.tim_st_presen ? null : (\n                                              <Icon\n                                                color={theme.colors.right}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtPresent */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Presente'}\n                                        </Text>\n                                      </View>\n                                      {/* ExtrasView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbExtrasView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnExtras */}\n                                          <>\n                                            {!listData?.tim_st_extras ? null : (\n                                              <Icon\n                                                color={theme.colors.right}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtExtras */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Extras'}\n                                        </Text>\n                                      </View>\n                                      {/* CaidasView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbCaidasView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnCaidas */}\n                                          <>\n                                            {!listData?.tim_st_caidas ? null : (\n                                              <Icon\n                                                color={theme.colors.error}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtCaidas */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Caidas'}\n                                        </Text>\n                                      </View>\n                                      {/* InconView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbInconView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnIncon */}\n                                          <>\n                                            {!listData?.tim_st_incon ? null : (\n                                              <Icon\n                                                color={theme.colors.error}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtIncon */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Inconsistencia'}\n                                        </Text>\n                                      </View>\n                                      {/* licDiaView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbLicDiaView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnLicDia */}\n                                          <>\n                                            {!listData?.tim_st_licdias ? null : (\n                                              <Icon\n                                                color={theme.colors.right}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtLicDia */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Licencia Dia'}\n                                        </Text>\n                                      </View>\n                                    </View>\n                                    {/* RightCheckboxesView */}\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        { width: '50%' },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {/* AusView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbAusenView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnAusen */}\n                                          <>\n                                            {!listData?.tim_st_ausen ? null : (\n                                              <Icon\n                                                color={theme.colors.error}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtAusente */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Ausente'}\n                                        </Text>\n                                      </View>\n                                      {/* TardeView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbTardeView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnTarde */}\n                                          <>\n                                            {!listData?.tim_st_tarde ? null : (\n                                              <Icon\n                                                color={theme.colors.error}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtTarde */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Tarde'}\n                                        </Text>\n                                      </View>\n                                      {/* RetAntView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbRetantView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnRetant */}\n                                          <>\n                                            {!listData?.tim_st_retant ? null : (\n                                              <Icon\n                                                color={theme.colors.error}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtRet */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Retiro Ant'}\n                                        </Text>\n                                      </View>\n                                      {/* spacerView */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row', height: 16 },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbRetantView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnRetant */}\n                                          <>\n                                            {!false ? null : (\n                                              <Icon\n                                                color={theme.colors.error}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtRet */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {null}\n                                        </Text>\n                                      </View>\n                                      {/* LicHorasiew */}\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          { flexDirection: 'row' },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {/* cbLicHorasView */}\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            { alignItems: 'center', width: 16 },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {/* icnLicHoras */}\n                                          <>\n                                            {!listData?.tim_st_lichoras ? null : (\n                                              <Icon\n                                                color={theme.colors.right}\n                                                name={'Foundation/check'}\n                                                size={16}\n                                              />\n                                            )}\n                                          </>\n                                        </View>\n                                        {/* txtLicHoras */}\n                                        <Text\n                                          style={StyleSheet.applyWidth(\n                                            { color: theme.colors.strong },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          {'Licencia Horas'}\n                                        </Text>\n                                      </View>\n                                    </View>\n                                  </View>\n                                </View>\n                              </View>\n                            );\n                          }}\n                        />\n                      </View>\n                      {/* RegistracionesSectionView */}\n                      <View\n                        style={StyleSheet.applyWidth(\n                          {\n                            marginLeft: '5%',\n                            marginRight: '5%',\n                            marginTop: 15,\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        {/* SectionHeaderView */}\n                        <View>\n                          {/* sectionTitleView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              { marginBottom: '2%', marginTop: '2%' },\n                              dimensions.width\n                            )}\n                          >\n                            {/* sectionTitle */}\n                            <Text\n                              style={StyleSheet.applyWidth(\n                                {\n                                  color: theme.colors.primary,\n                                  fontFamily: 'System',\n                                  fontWeight: '700',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              {'Registraciones'}\n                            </Text>\n                          </View>\n                          {/* TableHeaderView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              {\n                                backgroundColor: theme.colors.light,\n                                flexDirection: 'row',\n                              },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { marginRight: 5, width: '20%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                    textAlign: 'right',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Entrada'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  justifyContent: 'flex-end',\n                                  marginRight: 5,\n                                  width: '20%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                    textAlign: 'right',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Salida'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { marginLeft: 10 },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Tipo'}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        {/* ItemsList */}\n                        <FlatList\n                          data={listData?.timesheet?.tir}\n                          keyExtractor={itemsListData =>\n                            itemsListData?.id ||\n                            itemsListData?.uuid ||\n                            JSON.stringify(itemsListData)\n                          }\n                          listKey={JSON.stringify(listData?.timesheet?.tir)}\n                          numColumns={1}\n                          renderItem={({ item }) => {\n                            const itemsListData = item;\n                            return (\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    backgroundColor: theme.colors.verylight,\n                                    flexDirection: 'row',\n                                    marginLeft: 0,\n                                    marginRight: 0,\n                                    paddingLeft: 0,\n                                    paddingRight: 0,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      flexDirection: 'row',\n                                      justifyContent: 'flex-end',\n                                      marginRight: 5,\n                                      width: '20%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        color: theme.colors.strong,\n                                        textAlign: 'right',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {UtcDate2ShortTime(itemsListData?.tir_in)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      justifyContent: 'flex-end',\n                                      marginRight: 5,\n                                      width: '20%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        color: theme.colors.strong,\n                                        textAlign: 'right',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {UtcDate2ShortTime(itemsListData?.tir_out)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { marginLeft: 10 },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {conceptName(itemsListData?.tir_concept_id)}\n                                  </Text>\n                                </View>\n                              </View>\n                            );\n                          }}\n                        />\n                      </View>\n                      {/* TardanzasSectionView */}\n                      <View\n                        style={StyleSheet.applyWidth(\n                          {\n                            marginLeft: '5%',\n                            marginRight: '5%',\n                            marginTop: 15,\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        {/* SectionHeaderView */}\n                        <View>\n                          {/* sectionTitleView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              { marginBottom: '2%', marginTop: '2%' },\n                              dimensions.width\n                            )}\n                          >\n                            {/* sectionTitle */}\n                            <Text\n                              style={StyleSheet.applyWidth(\n                                {\n                                  color: theme.colors.primary,\n                                  fontFamily: 'System',\n                                  fontWeight: '700',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              {'Tardanzas / Retiros'}\n                            </Text>\n                          </View>\n                          {/* TableHeaderView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              {\n                                backgroundColor: theme.colors.light,\n                                flexDirection: 'row',\n                              },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'center',\n                                  marginLeft: 5,\n                                  marginRight: 5,\n                                  width: '20%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                    textAlign: 'right',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Cant'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'flex-start',\n                                  marginLeft: 5,\n                                  marginRight: 5,\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Tipo'}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        {/* ItemsList */}\n                        <FlatList\n                          data={listData?.timesheet?.tit}\n                          keyExtractor={itemsListData =>\n                            itemsListData?.id ||\n                            itemsListData?.uuid ||\n                            JSON.stringify(itemsListData)\n                          }\n                          listKey={JSON.stringify(listData?.timesheet?.tit)}\n                          numColumns={1}\n                          renderItem={({ item }) => {\n                            const itemsListData = item;\n                            return (\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    backgroundColor: theme.colors.verylight,\n                                    flexDirection: 'row',\n                                    marginLeft: 0,\n                                    marginRight: 0,\n                                    paddingLeft: 0,\n                                    paddingRight: 0,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'center',\n                                      marginLeft: 5,\n                                      marginRight: 5,\n                                      width: '20%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        color: theme.colors.strong,\n                                        textAlign: 'right',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {shortTime(itemsListData?.tit_cant)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { marginLeft: 5, marginRight: 5 },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {tarde2string(itemsListData?.tit_tar_ret)}\n                                  </Text>\n                                </View>\n                              </View>\n                            );\n                          }}\n                        />\n                      </View>\n                      {/* LiquidacionSectionView */}\n                      <View\n                        style={StyleSheet.applyWidth(\n                          {\n                            marginLeft: '5%',\n                            marginRight: '5%',\n                            marginTop: 15,\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        {/* SectionHeaderView */}\n                        <View>\n                          {/* sectionTitleView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              { marginBottom: '2%', marginTop: '2%' },\n                              dimensions.width\n                            )}\n                          >\n                            {/* sectionTitle */}\n                            <Text\n                              style={StyleSheet.applyWidth(\n                                {\n                                  color: theme.colors.primary,\n                                  fontFamily: 'System',\n                                  fontWeight: '700',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              {'Liquidación'}\n                            </Text>\n                          </View>\n                          {/* TableHeaderView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              {\n                                backgroundColor: theme.colors.light,\n                                flexDirection: 'row',\n                              },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'flex-start',\n                                  marginLeft: 5,\n                                  marginRight: 5,\n                                  width: '30%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Concepto'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'center',\n                                  marginLeft: 5,\n                                  marginRight: 5,\n                                  width: '20%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Liquid'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'center',\n                                  marginLeft: 5,\n                                  marginRight: 5,\n                                  width: '20%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Autoriz'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'center',\n                                  marginLeft: 5,\n                                  marginRight: 5,\n                                  width: '20%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'No Aut'}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        {/* ItemsList */}\n                        <FlatList\n                          data={listData?.timesheet?.til}\n                          keyExtractor={itemsListData =>\n                            itemsListData?.id ||\n                            itemsListData?.uuid ||\n                            JSON.stringify(itemsListData)\n                          }\n                          listKey={JSON.stringify(listData?.timesheet?.til)}\n                          numColumns={1}\n                          renderItem={({ item }) => {\n                            const itemsListData = item;\n                            return (\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    backgroundColor: theme.colors.verylight,\n                                    flexDirection: 'row',\n                                    marginLeft: 0,\n                                    marginRight: 0,\n                                    paddingLeft: 0,\n                                    paddingRight: 0,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      flexDirection: 'row',\n                                      marginLeft: 5,\n                                      marginRight: 5,\n                                      width: '30%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {conceptName(itemsListData?.til_concept_id)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'center',\n                                      marginLeft: 5,\n                                      marginRight: 5,\n                                      width: '20%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        color: theme.colors.strong,\n                                        textAlign: 'right',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {shortTime(itemsListData?.til_cant_liq)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'center',\n                                      marginLeft: 10,\n                                      width: '20%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {shortTime(itemsListData?.til_cant_aut)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'center',\n                                      marginLeft: 10,\n                                      width: '20%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {shortTime(itemsListData?.til_cant_noaut)}\n                                  </Text>\n                                </View>\n                              </View>\n                            );\n                          }}\n                        />\n                      </View>\n                    </>\n                  );\n                }}\n              />\n            );\n          }}\n        </DcSSApi.FetchTimesheetGET>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultaFichadasScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ConsultaHorasExtrasScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const InitializeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [currentDate, setCurrentDate] = React.useState(\n    InitializeCurrentDate(\"''\")\n  );\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [screenData, setScreenData] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Horas Extras');\n  const [showing, setShowing] = React.useState(0);\n  const setShow = what => {\n    setShowing(what);\n\n    calcDateFromByOption(what);\n\n    console.log(`setShow(${what})`);\n  };\n\n  const log = value => {\n    if (variables['logging'])\n      console.log(`log value: ${JSON.stringify(value)}`);\n    return value;\n  };\n\n  const tarde2string = id => {\n    return id ? (id == 1 ? 'Tarde' : 'Retiro anticipado') : '';\n  };\n\n  const DateToUtcString = aDate => {\n    if (aDate) {\n      // if(variables['logging']) console.log(\n      // `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n      // );\n\n      aDate.setHours(0);\n\n      const UTCString = aDate.toISOString().split('T')[0];\n      // if(variables['logging']) console.log(`UTCString: ${UTCString}`);\n      return UTCString;\n    }\n    return '';\n  };\n\n  const dateDec = date => {\n    // const newDate = new Date(date.getTime() - 1000 * 60 * 60 * 24);\n    // if(variables['logging']) console.log(`dateSub(${date} => ${newDate}`);\n    // return newDate;\n\n    return dateAdd(date, -1);\n  };\n\n  const dateFromTimId = tim_id => {\n    const rslt = daySheet?.find(e => e.tim_id == tim_id);\n\n    // console.log(`dateFromTimId(${tim_id}) daySheet: ${JSON.stringify(daySheet)}) found: ${JSON.stringify(rslt)}`);\n\n    if (rslt?.tim_date)\n      return rslt?.tim_date.substr(8, 2) + '/' + rslt?.tim_date.substr(5, 2);\n    else return '';\n  };\n\n  const dateInc = date => {\n    // const newDate = new Date(date.getTime() + 1000 * 60 * 60 * 24);\n    // if(variables['logging']) console.log(`dateInc(${date} => ${newDate}`);\n    // return newDate;\n\n    return dateAdd(date, 1);\n  };\n\n  const shortTime = time => {\n    return time?.substr(3);\n  };\n\n  const UtcDate2ShortTime = utcDateStr => {\n    return utcDateStr?.split('T')[1].substr(0, 5);\n  };\n\n  const IsoString2Date = utcString => {\n    console.log(`IsoString2Date(${utcString}`);\n\n    const rslt = ParseDate(utcString);\n\n    console.log(`ParseDate(${utcString}: ${rslt}`);\n\n    return rslt;\n  };\n\n  const dateAdd = (aDate, days) => {\n    const newDate = new Date(aDate.getTime() + days * 1000 * 60 * 60 * 24);\n    if (variables['logging'])\n      console.log(`dateSAdd(${aDate}, ${days}) => ${newDate}`);\n    return newDate;\n  };\n\n  const extractTimDate = item => {\n    console.log(`extractTimDate(${JSON.stringify(item)})`);\n    return item?.tim_date.substr(5, 2) + '/' + item?.tim_date.substr(8, 2);\n  };\n\n  const filterDaySheet = response => {\n    let rslt = response[0]?.timesheet.tim || [];\n    // let til = response[0].timesheet.til;\n\n    // til.forEach((e) => {\n    //     const tim = rslt;\n    //     const atim = tim.find((l) => l.til_tim_id == e.tim_id);\n    //     // console.log(`found ${JSON.stringify(atim)}, date:${atim.tim_date}`);\n    //     e[\"tim_date\"] = atim.tim_date;\n    //     // console.log(`patched liq ${JSON.stringify(e)}`);\n    // });\n\n    console.log(`filterDaySheet = ${JSON.stringify(rslt)}`);\n    // console.log(`Liqs = ${JSON.stringify(til)}`);\n\n    return rslt;\n  };\n\n  const calcDateFromByOption = showOption => {\n    let rslt = new Date(dateTo);\n\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n    switch (showOption) {\n      case 0:\n        break;\n\n      case 1:\n        /// To previous monday\n        let offset = rslt.getDay() - 1;\n        if (offset < 0) offset += 7;\n        rslt = dateAdd(rslt, -offset);\n        break;\n\n      case 2:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 3:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n  };\n\n  const calcDateFrom = aDateTo => {\n    let rslt = aDateTo;\n\n    if (!rslt) rslt = dateTo;\n\n    console.log(`calcDateFrom(${currentDate}): ${rslt}`);\n    switch (showing) {\n      case 0:\n        break;\n\n      case 1:\n        /// To previous monday\n        let offset = rslt.getDay() - 1;\n        if (offset < 0) offset += 7;\n        rslt = dateAdd(rslt, -offset);\n        break;\n\n      case 2:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 3:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFrom(${currentDate}): ${rslt}`);\n    return rslt;\n  };\n\n  const conceptName = con_id => {\n    const found = screenData?.find(e => e.con_id == con_id);\n\n    return found?.con_name;\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setDateTo(currentDate);\n      setDateFrom(currentDate);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (ConsultaHorasExtrasScreen) */}\n      <DcSSApi.FetchConceptsByEmpGET\n        emp_id={Constants['my_emp_id']}\n        handlers={{\n          onData: fetchScreenConsultaHorasExtrasScreenData => {\n            try {\n              setScreenData(fetchScreenConsultaHorasExtrasScreenData);\n            } catch (err) {\n              console.error(err);\n            }\n          },\n        }}\n      >\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenConsultaHorasExtrasScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* DatePickerHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Hoy', 'Semana', 'Mes', 'Año']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n              {/* NonScrollingView */}\n              <View>\n                <DcSSApi.FetchTimesheetGET\n                  date_from={DateToUtcString(dateFrom)}\n                  date_to={DateToUtcString(currentDate)}\n                  emp_id={Constants['my_emp_id']}\n                  handlers={{\n                    onData: fetchData => {\n                      try {\n                        const a_timesheet = fetchData?.[0]?.timesheet.tim;\n                        setDaySheet(a_timesheet);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    },\n                  }}\n                >\n                  {({ loading, error, data, refetchTimesheet }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <FlatList\n                        contentContainerStyle={StyleSheet.applyWidth(\n                          { marginBottom: 1 },\n                          dimensions.width\n                        )}\n                        data={fetchData}\n                        keyExtractor={listData =>\n                          listData?.id ||\n                          listData?.uuid ||\n                          JSON.stringify(listData)\n                        }\n                        listKey={'gahsCV7K'}\n                        renderItem={({ item }) => {\n                          const listData = item;\n                          return (\n                            <>\n                              {/* LiquidacionSectionView */}\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    marginLeft: '3%',\n                                    marginRight: '3%',\n                                    marginTop: 15,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {/* SectionHeaderView */}\n                                <View>\n                                  {/* sectionTitleView */}\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      { marginBottom: '2%', marginTop: '2%' },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {/* sectionTitle */}\n                                    <Text\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          color: theme.colors.primary,\n                                          fontFamily: 'System',\n                                          fontWeight: '700',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      {'Liquidación'}\n                                    </Text>\n                                  </View>\n                                  {/* TableHeaderView */}\n                                  <View\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        backgroundColor: theme.colors.light,\n                                        flexDirection: 'row',\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        { alignItems: 'center', width: '17%' },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      <Text\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            color: theme.colors.strong,\n                                            fontFamily: 'System',\n                                            fontWeight: '600',\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {'Fecha'}\n                                      </Text>\n                                    </View>\n\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        {\n                                          alignItems: 'flex-start',\n                                          width: '32%',\n                                        },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      <Text\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            color: theme.colors.strong,\n                                            fontFamily: 'System',\n                                            fontWeight: '600',\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {'Concepto'}\n                                      </Text>\n                                    </View>\n\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        { alignItems: 'center', width: '17%' },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      <Text\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            color: theme.colors.strong,\n                                            fontFamily: 'System',\n                                            fontWeight: '600',\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {'Liquid'}\n                                      </Text>\n                                    </View>\n\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        { alignItems: 'center', width: '17%' },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      <Text\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            color: theme.colors.strong,\n                                            fontFamily: 'System',\n                                            fontWeight: '600',\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {'Autoriz'}\n                                      </Text>\n                                    </View>\n\n                                    <View\n                                      style={StyleSheet.applyWidth(\n                                        { alignItems: 'center', width: '17%' },\n                                        dimensions.width\n                                      )}\n                                    >\n                                      <Text\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            color: theme.colors.strong,\n                                            fontFamily: 'System',\n                                            fontWeight: '600',\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        {'No Aut'}\n                                      </Text>\n                                    </View>\n                                  </View>\n                                </View>\n                                {/* ItemsList */}\n                                <FlatList\n                                  data={listData?.timesheet?.til}\n                                  keyExtractor={itemsListData =>\n                                    itemsListData?.id ||\n                                    itemsListData?.uuid ||\n                                    JSON.stringify(itemsListData)\n                                  }\n                                  listKey={JSON.stringify(\n                                    listData?.timesheet?.til\n                                  )}\n                                  numColumns={1}\n                                  renderItem={({ item }) => {\n                                    const itemsListData = item;\n                                    return (\n                                      <View\n                                        style={StyleSheet.applyWidth(\n                                          {\n                                            backgroundColor:\n                                              theme.colors.verylight,\n                                            flexDirection: 'row',\n                                            marginBottom: 2,\n                                            marginLeft: 0,\n                                            marginRight: 0,\n                                            paddingLeft: 0,\n                                            paddingRight: 0,\n                                          },\n                                          dimensions.width\n                                        )}\n                                      >\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            {\n                                              alignItems: 'center',\n                                              width: '17%',\n                                            },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <Text\n                                            style={StyleSheet.applyWidth(\n                                              { color: theme.colors.strong },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            {itemsListData?.til_tim_id}\n                                          </Text>\n                                        </View>\n\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            {\n                                              flexDirection: 'row',\n                                              width: '32%',\n                                            },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <Text\n                                            style={StyleSheet.applyWidth(\n                                              {\n                                                color: theme.colors.strong,\n                                                textAlign: 'right',\n                                              },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            {conceptName(\n                                              itemsListData?.til_concept_id\n                                            )}\n                                          </Text>\n                                        </View>\n\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            {\n                                              alignItems: 'center',\n                                              width: '17%',\n                                            },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <Text\n                                            style={StyleSheet.applyWidth(\n                                              {\n                                                color: theme.colors.strong,\n                                                textAlign: 'right',\n                                              },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            {shortTime(\n                                              itemsListData?.til_cant_liq\n                                            )}\n                                          </Text>\n                                        </View>\n\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            {\n                                              alignItems: 'center',\n                                              width: '17%',\n                                            },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <Text\n                                            style={StyleSheet.applyWidth(\n                                              { color: theme.colors.strong },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            {shortTime(\n                                              itemsListData?.til_cant_aut\n                                            )}\n                                          </Text>\n                                        </View>\n\n                                        <View\n                                          style={StyleSheet.applyWidth(\n                                            {\n                                              alignItems: 'center',\n                                              width: '17%',\n                                            },\n                                            dimensions.width\n                                          )}\n                                        >\n                                          <Text\n                                            style={StyleSheet.applyWidth(\n                                              { color: theme.colors.strong },\n                                              dimensions.width\n                                            )}\n                                          >\n                                            {shortTime(\n                                              itemsListData?.til_cant_noaut\n                                            )}\n                                          </Text>\n                                        </View>\n                                      </View>\n                                    );\n                                  }}\n                                />\n                              </View>\n                            </>\n                          );\n                        }}\n                      />\n                    );\n                  }}\n                </DcSSApi.FetchTimesheetGET>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultaHorasExtrasScreen);\n","import * as StyleSheet from './utils/StyleSheet';\n\nimport Breakpoints from './utils/Breakpoints';\n\nexport const TextStyles = theme =>\n  StyleSheet.create({ Text: { color: theme.colors.strong } });\n\nexport const SurfaceStyles = theme =>\n  StyleSheet.create({ Surface: { minHeight: 40 } });\n\nexport const ButtonStyles = theme =>\n  StyleSheet.create({\n    Button: {\n      backgroundColor: theme.colors.primary,\n      borderRadius: 8,\n      fontFamily: 'System',\n      fontWeight: '700',\n      textAlign: 'center',\n    },\n  });\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  Icon,\n  ScreenContainer,\n  Surface,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ConsultaSolicitudesScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const initalizeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [currentDate, setCurrentDate] = React.useState(\n    initalizeCurrentDate(\"''\")\n  );\n  const [itemWidth, setItemWidth] = React.useState(0);\n  const [refetchNum, setRefetchNum] = React.useState(1);\n  const [requestsType, setRequestsType] = React.useState('E');\n  const [screenName, setScreenName] = React.useState('Solicitudes');\n  const [showing, setShowing] = React.useState(0);\n  const log = value => {\n    // return CustomCode.log(value);\n  };\n\n  const calcFilter = showOption => {\n    // console.log(`calcFilter(${showOption})`);\n    // CustomCode.log(`calcFilter(${showOption})`);\n    switch (showOption) {\n      case 0:\n        setRequestsType('E');\n        break;\n\n      case 1:\n        setRequestsType('A');\n        break;\n\n      case 2:\n        setRequestsType('D');\n        break;\n\n      case 3:\n        setRequestsType('T');\n        break;\n    }\n  };\n\n  const reqTypeToString = reqType => {\n    const reqTypes = {\n      vac: 'Vacaciones',\n      ctu: 'Cambio de turno',\n      pya: 'Permisos y ausencias',\n      rys: 'Retiros y salidas intermedias',\n      epp: 'EPP',\n    };\n\n    return reqTypes[reqType];\n  };\n\n  const renderSwipeableItem = rowData => {\n    // const { item } = rowData;\n    const { item } = rowData;\n    const listData = item;\n\n    const { theme } = props;\n\n    const styles = StyleSheet.create({\n      Surfaceuw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 2,\n        marginBottom: 5,\n        height: 64,\n      },\n      typeVw: {\n        alignItems: 'flex-start',\n        marginLeft: 5,\n        marginRight: 5,\n        justifyContent: 'center',\n      },\n      statusVw: {\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        marginLeft: 5,\n        marginRight: 5,\n      },\n      detailVw: {\n        marginRight: 2,\n        marginLeft: 2,\n        alignItems: 'flex-start',\n        flexGrow: 1,\n        justifyContent: 'center',\n        marginTop: 2,\n        marginBottom: 2,\n        maxWidth: '79%',\n      },\n      upperDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        alignItems: 'center',\n        marginBottom: 2,\n        minHeight: 16,\n      },\n      empNameVw: {\n        flex: 1,\n      },\n      upperDetailEmpNameTxt: {\n        fontFamily: 'System',\n        fontWeight: '700',\n        alignSelf: 'flex-start',\n        fontSize: 14,\n      },\n      reqDateTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 3,\n      },\n      middleDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        minHeight: 12,\n        marginBottom: 2,\n      },\n      middleTwoSectsVw: {\n        minHeight: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%',\n      },\n      middleLeftSectsTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '600',\n        marginRight: '1%',\n        maxWidth: '69%',\n      },\n      middleRightSectsTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '400',\n        marginLeft: '1%',\n        maxWidth: '29%',\n      },\n      middleEppQuantTxt: {\n        fontSize: 12,\n        marginRight: 4,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppNameVw: {\n        flexShrink: 5,\n      },\n      middleEppNameTxt: {\n        fontSize: 12,\n        marginRight: 5,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppSizeTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '400',\n        marginLeft: 4,\n      },\n      lowerDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        minHeight: 12,\n      },\n      lowerDateRange: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n      },\n      lowerDateFulfilled: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n      lowerEppColorObsVw: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n        flex: 1,\n      },\n      lowerEppColorTxt: {\n        fontFamily: 'System',\n        fontWeight: '400',\n        alignSelf: 'flex-start',\n        fontSize: 12,\n      },\n      lowerEppObsTxt: {\n        fontFamily: 'System',\n        fontWeight: '400',\n        alignSelf: 'flex-start',\n        fontSize: 12,\n        textAlign: 'left',\n        marginLeft: 4,\n      },\n      lowerEppDateFullfilledTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n\n      lowerDateRangeTxt: {\n        fontSize: 12,\n      },\n      lowerDatetimeRangeVw: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n      },\n      lowerDatetimeRangeTxt: {\n        fontSize: 12,\n      },\n      lowerDatetimeRangeFullfilledTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n    });\n\n    const typeIcons = {\n      vac: {\n        name: 'FontAwesome/plane',\n      },\n      epp: {\n        name: 'Ionicons/shirt',\n      },\n      ctu: {\n        name: 'MaterialIcons/published-with-changes',\n      },\n      pya: {\n        name: 'Ionicons/md-home',\n      },\n      rys: {\n        name: 'MaterialCommunityIcons/exit-run',\n      },\n    };\n\n    /*\nColor         HEX     HSL           Background    HEX\nstronggreen   0DA129  131,85,34     131,55,85     B0E8BA\nerror         FF4564  351,100,64    351,55,85     EEC4CA\n*/\n\n    const statusIcons = {\n      E: {\n        name: 'FontAwesome/hourglass-3',\n        color: theme.colors.background,\n        back: theme.colors.light,\n      },\n      A: {\n        name: 'FontAwesome/thumbs-up',\n        color: theme.colors.stronggreen,\n        back: '#B0E8BA',\n      },\n      D: {\n        name: 'FontAwesome/thumbs-down',\n        color: theme.colors.error,\n        back: '#EEC4CA',\n      },\n    };\n\n    // const renderType = item => {\n    //     return (\n    //     <View\n    //         style={[\n    //         styles.typeVw,\n    //         { borderTopLeftRadius: 8, borderBottomLeftRadius: 8 },\n    //         ]}\n    //     >\n    //         <Icon\n    //             name={typeIcons[item?.req_type].name}\n    //             color={theme.colors.background}\n    //             size={24}\n    //         />\n    //     </View>\n    //     );\n    // };\n\n    // const renderStatus = item => {\n    //     return (\n    //     <View\n    //         style={[\n    //         styles.statusVw,\n    //         { borderTopRightRadius: 8, borderBottomRightRadius: 8 },\n    //         ]}\n    //     >\n    //         <Icon\n    //         name={statusIcons[item?.req_status].name}\n    //         color={statusIcons[item?.req_status].color}\n    //         size={24}\n    //         />\n    //     </View>\n    //     );\n    // };\n\n    // const renderUpperDetail = item => {\n    //     return (\n    //     <View style={styles.upperDetailVw}>\n    //         <View style={styles.empNameVw}>\n    //         <Text\n    //             style={[\n    //             styles.upperDetailEmpNameTxt,\n    //             { color: theme.colors.strong },\n    //             ]}\n    //             numberOfLines={1}\n    //             ellipsizeMode={'clip'}\n    //         >\n    //             {item?.req_rea_name}\n    //         </Text>\n    //         </View>\n\n    //         <View>\n    //         <Text\n    //             style={[styles.reqDateTxt, { color: theme.colors.strong }]}\n    //             numberOfLines={1}\n    //             ellipsizeMode={'clip'}\n    //         >\n    //             {CustomCode.FormatIsoString(item?.req_date, 'DD/MM HH:mm')}\n    //         </Text>\n    //         </View>\n    //     </View>\n    //     );\n    // };\n\n    // const renderMiddleDetailTwoSects = item => {\n    //     let leftItem =\n    //     item?.req_type === 'ctu'\n    //         ? item?.req_wor_name\n    //         : item?.req_con_name;\n\n    //     return (\n    //     <View style={styles.middleDetailVw}>\n    //         <View style={styles.middleTwoSectsVw}>\n    //         <Text\n    //             style={[\n    //             styles.middleLeftSectsTxt,\n    //             { color: theme.colors.strong },\n    //             ]}\n    //             numberOfLines={1}\n    //             ellipsizeMode={'clip'}\n    //         >\n    //             {leftItem}\n    //         </Text>\n\n    //         <Text\n    //             style={[\n    //             styles.middleRightSectsTxt,\n    //             { color: theme.colors.strong },\n    //             ]}\n    //             ellipsizeMode={'clip'}\n    //             numberOfLines={1}\n    //         >\n    //             {item?.req_rea_name}\n    //         </Text>\n    //         </View>\n    //     </View>\n    //     );\n    // };\n\n    // const renderLowerDetailDateRange = item => {\n    //     let dateFrom = item[`req_${item?.req_type}_from`],\n    //     dateTo = item[`req_${item?.req_type}_to`],\n    //     dateFullfilled = item?.req_fullfilled;\n\n    //     dateFrom = CustomCode.Date2String(\n    //     CustomCode.IsoDateStringToUTCDate(dateFrom),\n    //     'DD/MM'\n    //     );\n    //     dateTo = CustomCode.Date2String(\n    //     CustomCode.IsoDateStringToUTCDate(dateTo),\n    //     'DD/MM'\n    //     );\n\n    //     return (\n    //     <View style={styles.lowerDetailVw}>\n    //         <View style={styles.lowerDateRange}>\n    //         <Text\n    //             style={[styles.lowerDateRangeTxt, { color: theme.colors.strong }]}\n    //         >\n    //             {`${dateFrom} - ${dateTo}`}\n    //         </Text>\n    //         </View>\n\n    //         <Text\n    //         style={[styles.lowerDateFulfilled, { color: theme.colors.strong }]}\n    //         >\n    //         {dateFullfilled\n    //             ? CustomCode.Date2String(\n    //                 CustomCode.IsoDateStringToDate(dateFullfilled),\n    //                 'DD/MM HH:mm'\n    //             )\n    //             : ''}\n    //         </Text>\n    //     </View>\n    //     );\n    // };\n\n    // const renderDetail = item => {\n    //     let dateFrom,\n    //     dateTo,\n    //     dateFullfilled = item?.req_fullfilled;\n\n    //     switch (item?.req_type) {\n    //     case 'vac':\n    //         return (\n    //         <View style={styles.detailVw}>\n    //             {renderUpperDetail(item)}\n\n    //             <View style={styles.middleDetailVw}>\n    //             <View style={{ minHeight: 12 }} />\n    //             </View>\n\n    //             {renderLowerDetailDateRange(item)}\n    //         </View>\n    //         );\n\n    //     case 'ctu':\n    //         return (\n    //         <View style={styles.detailVw}>\n    //             {renderUpperDetail(item)}\n\n    //             {renderMiddleDetailTwoSects(item)}\n\n    //             {renderLowerDetailDateRange(item)}\n    //         </View>\n    //         );\n\n    //     case 'pya':\n    //         return (\n    //         <View style={styles.detailVw}>\n    //             {renderUpperDetail(item)}\n\n    //             {renderMiddleDetailTwoSects(item)}\n\n    //             {renderLowerDetailDateRange(item)}\n    //         </View>\n    //         );\n\n    //     // {'Zapatos seguridad marca cañon con suela de goma'}\n    //     case 'epp':\n    //         return (\n    //         <View style={styles.detailVw}>\n    //             {renderUpperDetail(item)}\n\n    //             <View style={styles.middleDetailVw}>\n    //             <View>\n    //                 <Text\n    //                 style={[\n    //                     styles.middleEppQuantTxt,\n    //                     { color: theme.colors.strong },\n    //                 ]}\n    //                 numberOfLines={1}\n    //                 >\n    //                 {item?.req_epp_quantity}\n    //                 </Text>\n    //             </View>\n\n    //             <View style={styles.middleEppNameVw}>\n    //                 <Text\n    //                 style={[\n    //                     styles.middleEppNameTxt,\n    //                     { color: theme.colors.strong },\n    //                 ]}\n    //                 numberOfLines={1}\n    //                 ellipsizeMode={'clip'}\n    //                 >\n    //                 {item?.req_epp_art_name}\n    //                 </Text>\n    //             </View>\n\n    //             <View>\n    //                 <Text\n    //                 style={[\n    //                     styles.middleEppSizeTxt,\n    //                     { color: theme.colors.strong },\n    //                 ]}\n    //                 numberOfLines={1}\n    //                 >\n    //                 {item?.req_epp_size}\n    //                 </Text>\n    //             </View>\n    //             </View>\n\n    //             <View style={styles.lowerDetailVw}>\n    //             <View style={styles.lowerEppColorObsVw}>\n    //                 <Text\n    //                 style={[\n    //                     styles.lowerEppColorTxt,\n    //                     { color: theme.colors.strong },\n    //                 ]}\n    //                 >\n    //                 {item?.req_epp_color}\n    //                 </Text>\n\n    //                 <Text\n    //                 style={[\n    //                     styles.lowerEppObsTxt,\n    //                     { color: theme.colors.strong },\n    //                 ]}\n    //                 ellipsizeMode={'clip'}\n    //                 numberOfLines={1}\n    //                 >\n    //                 {item?.req_epp_observ}\n    //                 </Text>\n    //             </View>\n\n    //             <Text\n    //                 style={[\n    //                 styles.lowerEppDateFullfilledTxt,\n    //                 { color: theme.colors.strong },\n    //                 ]}\n    //                 numberOfLines={1}\n    //                 ellipsizeMode={'clip'}\n    //             >\n    //                 {dateFullfilled\n    //                 ? CustomCode.Date2String(\n    //                     CustomCode.IsoDateStringToDate(dateFullfilled),\n    //                     'DD/MM HH:mm'\n    //                     )\n    //                 : ''}\n    //             </Text>\n    //             </View>\n    //         </View>\n    //         );\n\n    //     case 'rys':\n    //         (dateFrom = item[`req_${item?.req_type}_from`]),\n    //         (dateTo = item[`req_${item?.req_type}_to`]);\n\n    //         dateFrom = CustomCode.Date2String(\n    //         CustomCode.IsoDateStringToDate(dateFrom),\n    //         'DD/MM HH:mm'\n    //         );\n    //         dateTo = CustomCode.Date2String(\n    //         CustomCode.IsoDateStringToDate(dateTo),\n    //         'DD/MM HH:mm'\n    //         );\n\n    //         return (\n    //         <View style={styles.detailVw}>\n    //             {renderUpperDetail(item)}\n\n    //             {renderMiddleDetailTwoSects(item)}\n\n    //             <View style={styles.lowerDetailVw}>\n    //             <View style={styles.lowerDatetimeRangeVw}>\n    //                 <Text\n    //                 style={[\n    //                     styles.lowerDatetimeRangeTxt,\n    //                     { color: theme.colors.strong },\n    //                 ]}\n    //                 >\n    //                 {`${dateFrom} - ${dateTo}`}\n    //                 </Text>\n    //             </View>\n\n    //             <Text\n    //                 style={[\n    //                 styles.lowerDatetimeRangeFullfilledTxt,\n    //                 { color: theme.colors.strong },\n    //                 ]}\n    //             >\n    //                 {dateFullfilled\n    //                 ? CustomCode.Date2String(\n    //                     CustomCode.IsoDateStringToDate(dateFullfilled),\n    //                     'DD/MM HH:mm'\n    //                     )\n    //                 : ''}\n    //             </Text>\n    //             </View>\n    //         </View>\n    //         );\n    //     }\n    // };\n\n    const renderType = rowData => {\n      return (\n        <View\n          style={[\n            styles.typeVw,\n            { borderTopLeftRadius: 8, borderBottomLeftRadius: 8 },\n          ]}\n        >\n          <Icon\n            name={typeIcons[item.req_type].name}\n            color={theme.colors.background}\n            size={24}\n          />\n        </View>\n      );\n    };\n\n    const renderStatus = rowData => {\n      return (\n        <View\n          style={[\n            styles.statusVw,\n            { borderTopRightRadius: 8, borderBottomRightRadius: 8 },\n          ]}\n        >\n          <CustomCode.Icon\n            name={statusIcons[item.req_status].name}\n            color={statusIcons[item.req_status].color}\n            size={24}\n          />\n        </View>\n      );\n    };\n\n    const renderUpperDetail = rowData => {\n      return (\n        <View style={styles.upperDetailVw}>\n          <View style={styles.empNameVw}>\n            <Text\n              style={[\n                styles.upperDetailEmpNameTxt,\n                { color: theme.colors.strong },\n              ]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {reqTypeToString(item.req_type)}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n              style={[styles.reqDateTxt, { color: theme.colors.strong }]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {CustomCode.FormatIsoString(item.req_date, 'DD/MM HH:mm')}\n            </Text>\n          </View>\n        </View>\n      );\n    };\n\n    const renderMiddleDetailTwoSects = rowData => {\n      let leftItem =\n        item.req_type === 'ctu' ? item.req_wor_name : item.req_con_name;\n\n      return (\n        <View style={styles.middleDetailVw}>\n          <View style={styles.middleTwoSectsVw}>\n            <Text\n              style={[\n                styles.middleLeftSectsTxt,\n                { color: theme.colors.strong },\n              ]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {leftItem}\n            </Text>\n\n            <Text\n              style={[\n                styles.middleRightSectsTxt,\n                { color: theme.colors.strong },\n              ]}\n              ellipsizeMode={'clip'}\n              numberOfLines={1}\n            >\n              {item.req_rea_name}\n            </Text>\n          </View>\n        </View>\n      );\n    };\n\n    const renderLowerDetailDateRange = rowData => {\n      let dateFrom = item[`req_${item.req_type}_from`],\n        dateTo = item[`req_${item.req_type}_to`],\n        dateFullfilled = item.req_fullfilled;\n\n      dateFrom = CustomCode.Date2String(\n        CustomCode.IsoDateStringToUTCDate(dateFrom),\n        'DD/MM'\n      );\n      dateTo = CustomCode.Date2String(\n        CustomCode.IsoDateStringToUTCDate(dateTo),\n        'DD/MM'\n      );\n\n      return (\n        <View style={styles.lowerDetailVw}>\n          <View style={styles.lowerDateRange}>\n            <Text\n              style={[styles.lowerDateRangeTxt, { color: theme.colors.strong }]}\n            >\n              {`${dateFrom} - ${dateTo}`}\n            </Text>\n          </View>\n\n          <Text\n            style={[styles.lowerDateFulfilled, { color: theme.colors.strong }]}\n          >\n            {dateFullfilled\n              ? CustomCode.Date2String(\n                  CustomCode.IsoDateStringToDate(dateFullfilled),\n                  'DD/MM HH:mm'\n                )\n              : ''}\n          </Text>\n        </View>\n      );\n    };\n\n    const renderDetail = rowData => {\n      let dateFrom,\n        dateTo,\n        dateFullfilled = item.req_fullfilled;\n\n      switch (item.req_type) {\n        case 'vac':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              <View style={styles.middleDetailVw}>\n                <View style={{ minHeight: 12 }} />\n              </View>\n\n              {renderLowerDetailDateRange(rowData)}\n            </View>\n          );\n\n        case 'ctu':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              {renderMiddleDetailTwoSects(rowData)}\n\n              {renderLowerDetailDateRange(rowData)}\n            </View>\n          );\n\n        case 'pya':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              {renderMiddleDetailTwoSects(rowData)}\n\n              {renderLowerDetailDateRange(rowData)}\n            </View>\n          );\n\n        case 'epp':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              <View style={styles.middleDetailVw}>\n                <View>\n                  <Text\n                    style={[\n                      styles.middleEppQuantTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {item.req_epp_quantity}\n                  </Text>\n                </View>\n\n                <View style={styles.middleEppNameVw}>\n                  <Text\n                    style={[\n                      styles.middleEppNameTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                    ellipsizeMode={'clip'}\n                  >\n                    {item.req_epp_art_name}\n                  </Text>\n                </View>\n\n                <View>\n                  <Text\n                    style={[\n                      styles.middleEppSizeTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {item.req_epp_size}\n                  </Text>\n                </View>\n              </View>\n\n              <View style={styles.lowerDetailVw}>\n                <View style={styles.lowerEppColorObsVw}>\n                  <Text\n                    style={[\n                      styles.lowerEppColorTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                  >\n                    {item.req_epp_color}\n                  </Text>\n\n                  <Text\n                    style={[\n                      styles.lowerEppObsTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    ellipsizeMode={'clip'}\n                    numberOfLines={1}\n                  >\n                    {item.req_epp_observ}\n                  </Text>\n                </View>\n\n                <Text\n                  style={[\n                    styles.lowerEppDateFullfilledTxt,\n                    { color: theme.colors.strong },\n                  ]}\n                  numberOfLines={1}\n                  ellipsizeMode={'clip'}\n                >\n                  {dateFullfilled\n                    ? CustomCode.Date2String(\n                        CustomCode.IsoDateStringToDate(dateFullfilled),\n                        'DD/MM HH:mm'\n                      )\n                    : ''}\n                </Text>\n              </View>\n            </View>\n          );\n\n        case 'rys':\n          (dateFrom = item[`req_${item.req_type}_from`]),\n            (dateTo = item[`req_${item.req_type}_to`]);\n\n          dateFrom = CustomCode.Date2String(\n            CustomCode.IsoDateStringToDate(dateFrom),\n            'DD/MM HH:mm'\n          );\n          dateTo = CustomCode.Date2String(\n            CustomCode.IsoDateStringToDate(dateTo),\n            'DD/MM HH:mm'\n          );\n\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              {renderMiddleDetailTwoSects(rowData)}\n\n              <View style={styles.lowerDetailVw}>\n                <View style={styles.lowerDatetimeRangeVw}>\n                  <Text\n                    style={[\n                      styles.lowerDatetimeRangeTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                  >\n                    {`${dateFrom} - ${dateTo}`}\n                  </Text>\n                </View>\n\n                <Text\n                  style={[\n                    styles.lowerDatetimeRangeFullfilledTxt,\n                    { color: theme.colors.strong },\n                  ]}\n                >\n                  {dateFullfilled\n                    ? CustomCode.Date2String(\n                        CustomCode.IsoDateStringToDate(dateFullfilled),\n                        'DD/MM HH:mm'\n                      )\n                    : ''}\n                </Text>\n              </View>\n            </View>\n          );\n      }\n    };\n\n    // { borderRadius: 8, backgroundColor: theme.colors.light },\n    return (\n      <Surface\n        style={[\n          styles.Surfaceuw,\n          {\n            borderRadius: 8,\n            backgroundColor: statusIcons[item?.req_status].back,\n          },\n        ]}\n        elevation={3}\n      >\n        {renderType(item)}\n\n        {renderDetail(item)}\n\n        {renderStatus(item)}\n      </Surface>\n    );\n  };\n\n  const onSwipeableOpen = args => {\n    const { side, toValue, rowRef, actions } = args;\n    console.log(`opened ${side}, toValue: ${toValue}`);\n\n    if (Math.abs(toValue) > 3 * (itemWidth / 4)) {\n      rowRef.close();\n      if (side === 'left') actions[0]?.onActionExec?.(args);\n      else actions[1]?.onActionExec?.(args);\n    }\n  };\n\n  const setShow = what => {\n    setShowing(what);\n\n    calcFilter(what);\n\n    // console.log(`setShow(${what})`);\n    // CustomCode.log(`setShow(${what})`);\n  };\n\n  const renderActions = rowData => {\n    const { dragX, rowRef, item, side, actions } = rowData;\n\n    const actionStyles = {\n      itemView: {\n        height: 64,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderRadius: 8,\n        marginTop: 2,\n        marginBottom: 2,\n      },\n\n      backBtn: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        borderRadius: 8,\n      },\n\n      backLeftBtn: {\n        flex: 1,\n        alignItems: 'flex-start',\n        marginRight: 16,\n      },\n\n      backRightBtn: {\n        flex: 1,\n        alignItems: 'flex-end',\n        marginLeft: 16,\n      },\n\n      leftActionVw: {\n        paddingLeft: 10,\n      },\n\n      rightActionVw: {\n        paddingRight: 10,\n      },\n\n      touchActionVw: {\n        width: '100%',\n        height: '100%',\n      },\n\n      touchActionCommandVw: {\n        flexDirection: 'row',\n        flex: 1,\n        alignItems: 'center',\n      },\n\n      punchInOutTopBottomVw: {\n        height: 24,\n        justifyContent: 'flex-end',\n      },\n\n      punchInOutTxt: {\n        fontFamily: 'System',\n        fontSize: 14,\n        fontWeight: '600',\n        color: '#FFFFFF',\n      },\n    };\n\n    const AnimateActionView = ({ inputRange, children }) => {\n      return (\n        <CustomCode.Animated.View\n          style={{\n            transform: [\n              {\n                scale: dragX.interpolate({\n                  inputRange,\n                  outputRange: inputRange[0] < 0 ? [1, 0] : [0, 1],\n                  extrapolate: 'clamp',\n                }),\n              },\n            ],\n          }}\n        >\n          {children}\n        </CustomCode.Animated.View>\n      );\n    };\n\n    const SwipeAction = ({ action }) => {\n      return (\n        <Touchable\n          style={[\n            actionStyles.backBtn,\n            side === 'left'\n              ? actionStyles.backLeftBtn\n              : actionStyles.backRightBtn,\n            action.style,\n          ]}\n          onPress={() => {\n            if (side === 'left') rowRef?.openLeft();\n            else rowRef?.openRight();\n          }}\n        >\n          <AnimateActionView inputRange={side === 'left' ? [1, 90] : [-90, -1]}>\n            <View\n              style={\n                side === 'left'\n                  ? actionStyles.leftActionVw\n                  : actionStyles.rightActionVw\n              }\n            >\n              <View style={actionStyles.touchActionVw}>\n                <View\n                  style={[\n                    actionStyles.touchActionCommandVw,\n                    side === 'left'\n                      ? { justifyContent: 'flex-start' }\n                      : { justifyContent: 'flex-end' },\n                  ]}\n                >\n                  {side === 'left' && (\n                    <Icon name={action.icon} size={32} color=\"#FFFFFF\" />\n                  )}\n\n                  <View>\n                    <View style={actionStyles.punchInOutTopBottomVw} />\n                    <Text\n                      style={[\n                        actionStyles.punchInOutTxt,\n                        side === 'left'\n                          ? { marginLeft: 6 }\n                          : { marginRight: 6 },\n                      ]}\n                    >\n                      {action.name}\n                    </Text>\n                    <View style={actionStyles.punchInOutTopBottomVw} />\n                  </View>\n\n                  {side === 'right' && (\n                    <Icon name={action.icon} size={32} color=\"#FFFFFF\" />\n                  )}\n                </View>\n              </View>\n            </View>\n          </AnimateActionView>\n        </Touchable>\n      );\n    };\n\n    if (side === 'left') {\n      return (\n        <View style={[actionStyles.itemView, { width: itemWidth - 10 }]}>\n          <SwipeAction action={actions[0]} />\n        </View>\n      );\n    } else\n      return (\n        <View style={[actionStyles.itemView, { width: itemWidth - 10 }]}>\n          <SwipeAction action={actions[1]} />\n        </View>\n      );\n  };\n\n  const SwipeableRow = rowData => {\n    const { item, index, fetchData, itemAnimate } = rowData;\n\n    let rowRef;\n\n    const updateRef = ref => {\n      rowRef = ref;\n    };\n\n    const openStop = 110;\n    const ACTION_APPROVE = 0;\n    const ACTION_DENY = 1;\n    const ACTION_ERASE = 2;\n    const ACTION_NONE = 3;\n    const swipeActions = [\n      {\n        icon: 'FontAwesome/thumbs-up',\n        name: 'Aprueba',\n        style: { backgroundColor: theme.colors.Strong_Green },\n        onActionExec: rowData => {\n          fullfillRequest(rowData, 'A');\n        },\n      },\n      {\n        icon: 'FontAwesome/thumbs-down',\n        name: 'Deniega',\n        style: { backgroundColor: theme.colors.Error },\n        onActionExec: rowData => {\n          fullfillRequest(rowData, 'D');\n        },\n      },\n      {\n        icon: 'delete',\n        name: 'Anular',\n        style: { backgroundColor: 'red' },\n        onActionExec: rowData => {\n          fullfillRequest(rowData, 'E');\n        },\n      },\n      {\n        icon: 'AntDesign/minuscircleo',\n        name: '',\n        style: { backgroundColor: 'gray' },\n        onActionExec: () => {},\n      },\n    ];\n\n    const disableLeftSwipe = true; //item.req_status === 'A';\n    const disableRightSwipe = false; //item.req_status === 'D';\n\n    // const preview = itemAnimate === rowData?.item.sup_id;\n    const actions = [\n      swipeActions[\n        disableLeftSwipe\n          ? ACTION_NONE\n          : // : (['E', 'D'].includes(item.req_status) ? ACTION_APPROVE : ACTION_ERASE)\n            ACTION_ERASE\n      ],\n      swipeActions[\n        disableRightSwipe\n          ? ACTION_NONE\n          : // : (['E', 'A'].includes(item.req_status) ? ACTION_DENY : ACTION_ERASE)\n            ACTION_ERASE\n      ],\n    ];\n\n    const itemArgs = {\n      item,\n      index,\n      actions,\n    };\n\n    const onItemTouch = ({ item, rowRef }) => {\n      if (rowRef.getState().rowState) rowRef?.close();\n      // else if (['E', 'D'].includes(item.req_status)) rowRef?.openLeft(openStop);\n      // else if (['E', 'A'].includes(item.req_status)) rowRef?.openRight(openStop);\n      else rowRef?.openRight(openStop);\n      return true;\n    };\n\n    // console.log(\"Item:\" + JSON.stringify(item, undefined, 2));\n\n    return (\n      <CustomCode.Swipeable\n        ref={updateRef}\n        friction={2}\n        leftThreshold={3 * (itemWidth / 8)}\n        rightThreshold={3 * (itemWidth / 8)}\n        leftStop={openStop}\n        rightStop={openStop}\n        preview={false}\n        previewOpenValue={80}\n        previewOpenDelay={1000}\n        previewDuration={600}\n        // renderLeftActions={(progress, dragX) => renderActions({\n        //     ...itemArgs, rowRef, progress, dragX, side: 'left'\n        // })}\n\n        renderRightActions={\n          item.canbedeleted\n            ? (progress, dragX) =>\n                renderActions({\n                  ...itemArgs,\n                  rowRef,\n                  progress,\n                  dragX,\n                  side: 'right',\n                })\n            : undefined\n        }\n        onSwipeableOpen={(direction, toValue) =>\n          onSwipeableOpen({\n            ...itemArgs,\n            rowRef,\n            side: direction,\n            toValue,\n          })\n        }\n        onSwipeableClose={() => console.log('closed')}\n      >\n        <CustomCode.RectButton\n          onPress={() => onItemTouch({ ...itemArgs, rowRef })}\n        >\n          {renderSwipeableItem({ ...itemArgs, rowRef })}\n        </CustomCode.RectButton>\n      </CustomCode.Swipeable>\n    );\n  };\n\n  const fullfillRequest = async (rowData, op) => {\n    console.log(`fullfillRequest... id${rowData?.item.req_id}, op: ${op}`);\n\n    try {\n      var deleteRslt = (\n        await dcSSRequestDeleteDELETE.mutateAsync({\n          reqid: rowData?.item.req_id,\n        })\n      )?.json;\n\n      console.log(`deleteRslt: ${JSON.stringify(deleteRslt, undefined, 2)}`);\n\n      setTimeout(() => {\n        setRefetchNum(1 + refetchNum);\n      }, 300);\n\n      // console.log(`refetched.`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  const animationIsRunning = CustomCode.useRef(false);\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const dcSSRequestDeleteDELETE = DcSSApi.useRequestDeleteDELETE();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (AprobacionesScreen) */}\n      <DcSSApi.FetchConceptsByEmpGET emp_id={Constants['my_emp_id']}>\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenAprobacionesScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* StatusHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Pendientes', 'Aprobadas', 'Denegadas', 'Todas']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n              {/* NonScrollingView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  { flex: 1, height: '100%' },\n                  dimensions.width\n                )}\n              >\n                <Utils.CustomCodeErrorBoundary>\n                  <View\n                    onLayout={event =>\n                      setItemWidth(event.nativeEvent.layout.width)\n                    }\n                  />\n                </Utils.CustomCodeErrorBoundary>\n                <DcSSApi.FetchRequestsGET\n                  emp_id={Constants['my_emp_id']}\n                  status={requestsType}\n                >\n                  {({ loading, error, data, refetchRequests }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <>\n                        {/* SolicitudesSectionView */}\n                        <View\n                          style={StyleSheet.applyWidth(\n                            {\n                              height: '100%',\n                              marginLeft: '3%',\n                              marginRight: '3%',\n                            },\n                            dimensions.width\n                          )}\n                        >\n                          <CustomCode.FlatList\n                            data={fetchData}\n                            renderItem={({ item, index }) =>\n                              SwipeableRow({\n                                item,\n                                index,\n                                fetchData,\n                                itemAnimate: fetchData.find(\n                                  f => f.req_status === 'E'\n                                )?.req_id,\n                              })\n                            }\n                            keyExtractor={item => item?.req_id}\n                          />\n                        </View>\n                      </>\n                    );\n                  }}\n                </DcSSApi.FetchRequestsGET>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultaSolicitudesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ConsultaSolicitudesScreenOLDScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [itemWidth, setItemWidth] = React.useState(0);\n  const [refetchNum, setRefetchNum] = React.useState(1);\n  const [requestsType, setRequestsType] = React.useState('E');\n  const [screenName, setScreenName] = React.useState('Solicitudes');\n  const [showing, setShowing] = React.useState(0);\n  const [swipingLeft, setSwipingLeft] = React.useState(false);\n  const [swipingRight, setSwipingRight] = React.useState(false);\n  const setShow = what => {\n    setShowing(what);\n\n    calcFilter(what);\n\n    // console.log(`setShow(${what})`);\n    CustomCode.log(`setShow(${what})`);\n  };\n\n  const log = value => {\n    // return CustomCode.log(value);\n  };\n\n  const calcFilter = showOption => {\n    // console.log(`calcFilter(${showOption})`);\n    CustomCode.log(`calcFilter(${showOption})`);\n    switch (showOption) {\n      case 0:\n        setRequestsType('E');\n        break;\n\n      case 1:\n        setRequestsType('A');\n        break;\n\n      case 2:\n        setRequestsType('D');\n        break;\n\n      case 3:\n        setRequestsType('T');\n        break;\n    }\n  };\n\n  const reqTypeToString = reqType => {\n    const reqTypes = {\n      vac: 'Vacaciones',\n      ctu: 'Cambio de turno',\n      pya: 'Permisos y ausencias',\n      rys: 'Retiros y salidas intermedias',\n      epp: 'EPP',\n    };\n\n    return reqTypes[reqType];\n  };\n\n  const renderRequestItem = (rowData, rowMap) => {\n    const { theme } = props;\n\n    const styles = StyleSheet.create({\n      Surfaceuw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 2,\n        marginBottom: 5,\n        height: 64,\n      },\n      typeVw: {\n        alignItems: 'flex-start',\n        marginLeft: 5,\n        marginRight: 5,\n        justifyContent: 'center',\n      },\n      statusVw: {\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        marginLeft: 5,\n        marginRight: 5,\n      },\n      detailVw: {\n        marginRight: 2,\n        marginLeft: 2,\n        alignItems: 'flex-start',\n        flexGrow: 1,\n        justifyContent: 'center',\n        marginTop: 2,\n        marginBottom: 2,\n        maxWidth: '79%',\n      },\n      upperDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        alignItems: 'center',\n        marginBottom: 2,\n        minHeight: 16,\n      },\n      empNameVw: {\n        flex: 1,\n      },\n      upperDetailEmpNameTxt: {\n        fontFamily: 'System',\n        fontWeight: '700',\n        alignSelf: 'flex-start',\n        fontSize: 14,\n      },\n      reqDateTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 3,\n      },\n      middleDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        minHeight: 12,\n        marginBottom: 2,\n      },\n      middleTwoSectsVw: {\n        minHeight: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%',\n      },\n      middleLeftSectsTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '600',\n      },\n      middleRightSectsTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppQuantTxt: {\n        fontSize: 12,\n        marginRight: 4,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppNameVw: {\n        flexShrink: 5,\n      },\n      middleEppNameTxt: {\n        fontSize: 12,\n        marginRight: 5,\n        fontFamily: 'System',\n        fontWeight: '400',\n      },\n      middleEppSizeTxt: {\n        fontSize: 12,\n        fontFamily: 'System',\n        fontWeight: '400',\n        marginLeft: 4,\n      },\n      lowerDetailVw: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        minHeight: 12,\n      },\n      lowerDateRange: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n      },\n      lowerDateFulfilled: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n      lowerEppColorObsVw: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n        flex: 1,\n      },\n      lowerEppColorTxt: {\n        fontFamily: 'System',\n        fontWeight: '400',\n        alignSelf: 'flex-start',\n        fontSize: 12,\n      },\n      lowerEppObsTxt: {\n        fontFamily: 'System',\n        fontWeight: '400',\n        alignSelf: 'flex-start',\n        fontSize: 12,\n        textAlign: 'left',\n        marginLeft: 4,\n      },\n      lowerEppDateFullfilledTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n\n      lowerDateRangeTxt: {\n        fontSize: 12,\n      },\n      lowerDatetimeRangeVw: {\n        flexDirection: 'row',\n        maxWidth: '78%',\n      },\n      lowerDatetimeRangeTxt: {\n        fontSize: 12,\n      },\n      lowerDatetimeRangeFullfilledTxt: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 10,\n        alignSelf: 'center',\n        marginLeft: 4,\n      },\n    });\n\n    const typeIcons = {\n      vac: {\n        name: 'FontAwesome/plane',\n      },\n      epp: {\n        name: 'Ionicons/shirt',\n      },\n      ctu: {\n        name: 'MaterialIcons/published-with-changes',\n      },\n      pya: {\n        name: 'Ionicons/md-home',\n      },\n      rys: {\n        name: 'MaterialCommunityIcons/exit-run',\n      },\n    };\n\n    /*\nColor         HEX     HSL           Background    HEX\nstronggreen   0DA129  131,85,34     131,55,85     B0E8BA\nerror         FF4564  351,100,64    351,55,85     EEC4CA\n*/\n\n    const statusIcons = {\n      E: {\n        name: 'FontAwesome/hourglass-3',\n        color: theme.colors.background,\n        back: theme.colors.light,\n      },\n      A: {\n        name: 'FontAwesome/thumbs-up',\n        color: theme.colors.stronggreen,\n        back: '#B0E8BA',\n      },\n      D: {\n        name: 'FontAwesome/thumbs-down',\n        color: theme.colors.error,\n        back: '#EEC4CA',\n      },\n    };\n\n    const renderType = rowData => {\n      return (\n        <View\n          style={[\n            styles.typeVw,\n            { borderTopLeftRadius: 8, borderBottomLeftRadius: 8 },\n          ]}\n        >\n          <CustomCode.Icon\n            name={typeIcons[rowData?.item.req_type].name}\n            color={theme.colors.background}\n            size={24}\n          />\n        </View>\n      );\n    };\n\n    const renderStatus = rowData => {\n      return (\n        <View\n          style={[\n            styles.statusVw,\n            { borderTopRightRadius: 8, borderBottomRightRadius: 8 },\n          ]}\n        >\n          <CustomCode.Icon\n            name={statusIcons[rowData?.item.req_status].name}\n            color={statusIcons[rowData?.item.req_status].color}\n            size={24}\n          />\n        </View>\n      );\n    };\n\n    const renderUpperDetail = rowData => {\n      return (\n        <View style={styles.upperDetailVw}>\n          <View style={styles.empNameVw}>\n            <Text\n              style={[\n                styles.upperDetailEmpNameTxt,\n                { color: theme.colors.strong },\n              ]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {reqTypeToString(rowData?.item.req_type)}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n              style={[styles.reqDateTxt, { color: theme.colors.strong }]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {CustomCode.FormatIsoString(\n                rowData?.item.req_date,\n                'DD/MM HH:mm'\n              )}\n            </Text>\n          </View>\n        </View>\n      );\n    };\n\n    const renderMiddleDetailTwoSects = rowData => {\n      let leftItem =\n        rowData?.item.req_type === 'ctu'\n          ? rowData?.item.req_wor_name\n          : rowData?.item.req_con_name;\n\n      return (\n        <View style={styles.middleDetailVw}>\n          <View style={styles.middleTwoSectsVw}>\n            <Text\n              style={[\n                styles.middleLeftSectsTxt,\n                { color: theme.colors.strong },\n              ]}\n              numberOfLines={1}\n              ellipsizeMode={'clip'}\n            >\n              {leftItem}\n            </Text>\n\n            <Text\n              style={[\n                styles.middleRightSectsTxt,\n                { color: theme.colors.strong },\n              ]}\n              ellipsizeMode={'clip'}\n              numberOfLines={1}\n            >\n              {rowData?.item.req_rea_name}\n            </Text>\n          </View>\n        </View>\n      );\n    };\n\n    const renderLowerDetailDateRange = rowData => {\n      let dateFrom = rowData?.item[`req_${rowData?.item.req_type}_from`],\n        dateTo = rowData?.item[`req_${rowData?.item.req_type}_to`],\n        dateFullfilled = rowData?.item.req_fullfilled;\n\n      dateFrom = CustomCode.Date2String(\n        CustomCode.IsoDateStringToUTCDate(dateFrom),\n        'DD/MM'\n      );\n      dateTo = CustomCode.Date2String(\n        CustomCode.IsoDateStringToUTCDate(dateTo),\n        'DD/MM'\n      );\n\n      return (\n        <View style={styles.lowerDetailVw}>\n          <View style={styles.lowerDateRange}>\n            <Text\n              style={[styles.lowerDateRangeTxt, { color: theme.colors.strong }]}\n            >\n              {`${dateFrom} - ${dateTo}`}\n            </Text>\n          </View>\n\n          <Text\n            style={[styles.lowerDateFulfilled, { color: theme.colors.strong }]}\n          >\n            {dateFullfilled\n              ? CustomCode.Date2String(\n                  CustomCode.IsoDateStringToDate(dateFullfilled),\n                  'DD/MM HH:mm'\n                )\n              : ''}\n          </Text>\n        </View>\n      );\n    };\n\n    const renderDetail = rowData => {\n      let dateFrom,\n        dateTo,\n        dateFullfilled = rowData?.item.req_fullfilled;\n\n      switch (rowData?.item.req_type) {\n        case 'vac':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              <View style={styles.middleDetailVw}>\n                <View style={{ minHeight: 12 }} />\n              </View>\n\n              {renderLowerDetailDateRange(rowData)}\n            </View>\n          );\n\n        case 'ctu':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              {renderMiddleDetailTwoSects(rowData)}\n\n              {renderLowerDetailDateRange(rowData)}\n            </View>\n          );\n\n        case 'pya':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              {renderMiddleDetailTwoSects(rowData)}\n\n              {renderLowerDetailDateRange(rowData)}\n            </View>\n          );\n\n        case 'epp':\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              <View style={styles.middleDetailVw}>\n                <View>\n                  <Text\n                    style={[\n                      styles.middleEppQuantTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {rowData?.item.req_epp_quantity}\n                  </Text>\n                </View>\n\n                <View style={styles.middleEppNameVw}>\n                  <Text\n                    style={[\n                      styles.middleEppNameTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                    ellipsizeMode={'clip'}\n                  >\n                    {rowData?.item.req_epp_art_name}\n                  </Text>\n                </View>\n\n                <View>\n                  <Text\n                    style={[\n                      styles.middleEppSizeTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {rowData?.item.req_epp_size}\n                  </Text>\n                </View>\n              </View>\n\n              <View style={styles.lowerDetailVw}>\n                <View style={styles.lowerEppColorObsVw}>\n                  <Text\n                    style={[\n                      styles.lowerEppColorTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                  >\n                    {rowData?.item.req_epp_color}\n                  </Text>\n\n                  <Text\n                    style={[\n                      styles.lowerEppObsTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                    ellipsizeMode={'clip'}\n                    numberOfLines={1}\n                  >\n                    {rowData?.item.req_epp_observ}\n                  </Text>\n                </View>\n\n                <Text\n                  style={[\n                    styles.lowerEppDateFullfilledTxt,\n                    { color: theme.colors.strong },\n                  ]}\n                  numberOfLines={1}\n                  ellipsizeMode={'clip'}\n                >\n                  {dateFullfilled\n                    ? CustomCode.Date2String(\n                        CustomCode.IsoDateStringToDate(dateFullfilled),\n                        'DD/MM HH:mm'\n                      )\n                    : ''}\n                </Text>\n              </View>\n            </View>\n          );\n\n        case 'rys':\n          (dateFrom = rowData?.item[`req_${rowData?.item.req_type}_from`]),\n            (dateTo = rowData?.item[`req_${rowData?.item.req_type}_to`]);\n\n          dateFrom = CustomCode.Date2String(\n            CustomCode.IsoDateStringToDate(dateFrom),\n            'DD/MM HH:mm'\n          );\n          dateTo = CustomCode.Date2String(\n            CustomCode.IsoDateStringToDate(dateTo),\n            'DD/MM HH:mm'\n          );\n\n          return (\n            <View style={styles.detailVw}>\n              {renderUpperDetail(rowData)}\n\n              {renderMiddleDetailTwoSects(rowData)}\n\n              <View style={styles.lowerDetailVw}>\n                <View style={styles.lowerDatetimeRangeVw}>\n                  <Text\n                    style={[\n                      styles.lowerDatetimeRangeTxt,\n                      { color: theme.colors.strong },\n                    ]}\n                  >\n                    {`${dateFrom} - ${dateTo}`}\n                  </Text>\n                </View>\n\n                <Text\n                  style={[\n                    styles.lowerDatetimeRangeFullfilledTxt,\n                    { color: theme.colors.strong },\n                  ]}\n                >\n                  {dateFullfilled\n                    ? CustomCode.Date2String(\n                        CustomCode.IsoDateStringToDate(dateFullfilled),\n                        'DD/MM HH:mm'\n                      )\n                    : ''}\n                </Text>\n              </View>\n            </View>\n          );\n      }\n    };\n\n    // { borderRadius: 8, backgroundColor: theme.colors.light },\n    return (\n      <CustomCode.Surface\n        style={[\n          styles.Surfaceuw,\n          {\n            borderRadius: 8,\n            backgroundColor: statusIcons[rowData?.item.req_status].back,\n          },\n        ]}\n        elevation={3}\n      >\n        {renderType(rowData)}\n\n        {renderDetail(rowData)}\n\n        {renderStatus(rowData)}\n      </CustomCode.Surface>\n    );\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  const animationIsRunning = CustomCode.useRef(false);\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (ConsultaSolicitudesScreen) */}\n      <DcSSApi.FetchConceptsByEmpGET emp_id={Constants['my_emp_id']}>\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenConsultaSolicitudesScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* DatePickerHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Pendientes', 'Aprobadas', 'Denegadas', 'Todas']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n              {/* NonScrollingView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  { borderRadius: 5, flex: 1 },\n                  dimensions.width\n                )}\n              >\n                <DcSSApi.FetchRequestsGET\n                  emp_id={Constants['my_emp_id']}\n                  status={requestsType}\n                >\n                  {({ loading, error, data, refetchRequests }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <>\n                        {/* SolicitudesSectionView */}\n                        <View\n                          style={StyleSheet.applyWidth(\n                            { flex: 1, marginLeft: '3%', marginRight: '3%' },\n                            dimensions.width\n                          )}\n                        >\n                          <Utils.CustomCodeErrorBoundary>\n                            <CustomCode.SwipeListView\n                              data={fetchData}\n                              keyExtractor={item => item?.req_id}\n                              renderItem={renderRequestItem}\n                              disableRightSwipe={true}\n                              disableLeftSwipe={true}\n                            />\n                          </Utils.CustomCodeErrorBoundary>\n                        </View>\n                      </>\n                    );\n                  }}\n                </DcSSApi.FetchRequestsGET>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultaSolicitudesScreenOLDScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Icon,\n  IconButton,\n  ScreenContainer,\n  Surface,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport {\n  Image,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\n\nconst ConsultasScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [screenName, setScreenName] = React.useState('Consultas');\n  const renderMenuItems = items => {\n    const styles = StyleSheet.create({\n      OutterView: {\n        marginTop: 5,\n        marginBottom: 5,\n      },\n      SurfaceVw: {\n        minHeight: 120,\n      },\n      OutterItemVw: {\n        justifyContent: 'space-evenly',\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        marginTop: 5,\n        marginBottom: 5,\n      },\n      Image: {\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        opacity: 0.2,\n      },\n      InnerIconVw: {\n        marginLeft: 15,\n      },\n      InnerText: {\n        fontFamily: 'System',\n        fontWeight: '600',\n        fontSize: 32,\n      },\n      InnerTextVw: {\n        alignItems: 'flex-end',\n        marginRight: 15,\n      },\n    });\n\n    const renderItem = item => {\n      console.log(`renderItem(${item.name}, [${item.icon}])`);\n\n      try {\n        return (\n          <View style={styles.OutterView}>\n            <Surface\n              style={[\n                styles.SurfaceVw,\n                { backgroundColor: theme.colors.medium, borderRadius: 8 },\n              ]}\n            >\n              <Image\n                style={styles.Image}\n                source={item.background}\n                resizeMode={'cover'}\n              />\n              <View style={styles.OutterItemVw}>\n                <View style={styles.InnerIconVw}>\n                  <Icon\n                    name={item.icon}\n                    size={48}\n                    color={\n                      item.enabled\n                        ? theme.colors.background\n                        : theme.colors.mediumInverse\n                    }\n                  />\n                </View>\n\n                <View style={styles.InnerTextVw}>\n                  <Text\n                    style={[\n                      styles.InnerText,\n                      {\n                        color: item.enabled\n                          ? theme.colors.background\n                          : theme.colors.mediumInverse,\n                      },\n                    ]}\n                  >\n                    {item.name}\n                  </Text>\n                </View>\n              </View>\n            </Surface>\n          </View>\n        );\n      } catch (e) {\n        console.log(`error: ${e} `);\n      }\n    };\n\n    const renderTouchableItem = item => {\n      try {\n        return (\n          <Touchable\n            onPress={() => {\n              try {\n                navigation.navigate(item.target);\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n          >\n            {renderItem(item)}\n          </Touchable>\n        );\n      } catch (e) {\n        console.log(`renderTouchableItem error: ${e} `);\n      }\n    };\n\n    return items\n      ?.filter(i => i.visible)\n      .map(i => (i.enabled ? renderTouchableItem(i) : renderItem(i)));\n  };\n\n  const menuItems = () => {\n    return [\n      {\n        name: 'Fichadas',\n        icon: 'MaterialCommunityIcons/calendar-blank-multiple',\n        background: Images.UndrawRequest,\n        target: 'ConsultaFichadasScreen',\n        visible: true,\n        enabled: true,\n        permission: 'Consultas:Fichadas',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Horas Extras',\n        icon: 'MaterialCommunityIcons/briefcase-clock-outline',\n        background: Images.UndrawWorking,\n        target: 'ConsultaHorasExtrasScreen',\n        visible: true,\n        enabled: true,\n        permission: 'Consultas:HorasExtras',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Solicitudes',\n        icon: 'FontAwesome/pencil-square-o',\n        background: Images.UndrawRequest01,\n        target: 'ConsultaSolicitudesScreen',\n        visible: true,\n        enabled: true,\n        permission: 'Consultas:Solicitudes',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Comedor',\n        icon: 'Feather/coffee',\n        background: Images.UndrawLunch,\n        target: 'ConsultaComedorScreen',\n        visible: true,\n        enabled: true,\n        permission: 'Consultas:Comedor',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Documentos',\n        icon: 'FontAwesome/envelope-o',\n        background: Images.UndrawOpenedReI38e,\n        target: 'ConsultaDocumentosScreen',\n        visible: true,\n        enabled: true,\n        permission: 'Consultas:Documentos',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      // {\n      //     name:   \"Presentismo\",\n      //     icon:   \"SimpleLineIcons/trophy\",\n      //     background: Images.UndrawWinnersAo2o,\n      //     target: 'ConsultaPresentismoScreen',\n      //     visible: false,\n      //     enabled: true,\n      //     permission: 'Consultas:Presentismo'\n      // }\n    ];\n  };\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      hasTopSafeArea={true}\n      scrollable={false}\n    >\n      <CustomCode.DigicardScreenHeader\n        {...props}\n        right={{\n          icon: 'Ionicons/home-outline',\n          nav: 'Main',\n          screen: 'InicioScreen',\n        }}\n        title={screenName}\n      />\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            flex: 1,\n            marginBottom: 10,\n            marginLeft: 12,\n            marginRight: 12,\n            marginTop: 15,\n            paddingBottom: 25,\n          },\n          dimensions.width\n        )}\n      >\n        <Utils.CustomCodeErrorBoundary>\n          {CustomCode.renderMenuItems(\n            menuItems(),\n            Constants['AppPermissions'],\n            props\n          )}\n        </Utils.CustomCodeErrorBoundary>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ConsultasScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst DetalleDocumentoScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateFromError, setDateFromError] = React.useState('');\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [dateToError, setDateToError] = React.useState('');\n  const [ioAction, setIoAction] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [screenName, setScreenName] = React.useState('Documento');\n  const date2HHMM = aDate => {\n    return CustomCode.FormatIsoString(aDate, 'DD/MM HH:mm');\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setScreenName(props.route?.params?.docType ?? 'Recibo');\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ flex: 1 }, dimensions.width)}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={ioAction}\n      />\n\n      <View\n        style={StyleSheet.applyWidth(\n          { flex: 1, marginLeft: '3%', marginRight: '3%' },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.verylight,\n              borderRadius: 8,\n              height: '12%',\n              justifyContent: 'space-evenly',\n              marginBottom: 5,\n              marginTop: 5,\n              paddingBottom: 5,\n              paddingLeft: 10,\n              paddingRight: 10,\n              paddingTop: 5,\n            },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', justifyContent: 'space-between' },\n              dimensions.width\n            )}\n          >\n            {/* txtNombre */}\n            <>\n              {!(props.route?.params?.docName ?? 'Recibo de Sueldo') ? null : (\n                <Text\n                  style={StyleSheet.applyWidth(\n                    {\n                      color: theme.colors.strong,\n                      fontFamily: 'System',\n                      fontWeight: '600',\n                    },\n                    dimensions.width\n                  )}\n                >\n                  {props.route?.params?.docName ?? 'Recibo de Sueldo'}\n                </Text>\n              )}\n            </>\n            {/* txtFecha */}\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontWeight: '600',\n                },\n                dimensions.width\n              )}\n            >\n              {date2HHMM(\n                props.route?.params?.docDate ?? '2022-03-11T00:00:00.000Z'\n              )}\n            </Text>\n          </View>\n\n          <View>\n            {/* txtDescripcion */}\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong },\n                dimensions.width\n              )}\n            >\n              {props.route?.params?.docDesc ??\n                'Recibo de sueldo de Abril de 2022'}\n            </Text>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              borderBottomWidth: 1,\n              borderColor: theme.colors.medium,\n              borderLeftWidth: 1,\n              borderRadius: 5,\n              borderRightWidth: 1,\n              borderTopWidth: 1,\n              height: '80%',\n              width: '100%',\n            },\n            dimensions.width\n          )}\n        >\n          <Image\n            resizeMode={'contain'}\n            source={{\n              uri: `${\n                props.route?.params?.docUrl ??\n                'https://cdn.eldoce.tv/sites/default/files/styles/site_nota_slider_preview/public/certificado-diego-maradona-agustina-cosachov.jpg'\n              }`,\n            }}\n            style={StyleSheet.applyWidth({ height: '100%' }, dimensions.width)}\n          />\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(DetalleDocumentoScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  ScreenContainer,\n  Switch,\n  TextInput,\n  withTheme,\n} from '@draftbit/ui';\nimport {\n  Image,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\n\nconst DevScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const [datePickerValue, setDatePickerValue] = React.useState(new Date());\n  const [switchValue, setSwitchValue] = React.useState(false);\n  const [textAreaValue, setTextAreaValue] = React.useState('');\n  const Stringify = json => {\n    return JSON.stringify(json);\n  };\n\n  const getVersion = () => {\n    var app;\n\n    try {\n      app = require('../app.json');\n    } catch {\n      app = undefined;\n    }\n\n    if (app) return app.expo.version;\n    else return CustomCode.ExpoConstants.nativeAppVersion;\n  };\n\n  const getAPI = () => {\n    return 'https://dcss-api.herokuapp.com';\n  };\n\n  const getBuild = () => {\n    var app, expo;\n\n    try {\n      app = require('../app.json');\n    } catch {\n      app = undefined;\n    }\n\n    if (app) expo = app.expo;\n    else expo = CustomCode.ExpoConstants.platform;\n\n    switch (CustomCode.Platform.OS) {\n      case 'ios':\n        return expo.ios.buildNumber;\n\n      case 'android':\n        return expo.android.versionCode;\n\n      default:\n        return 'Web';\n    }\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        { backgroundColor: theme.colors.background, height: '100%' },\n        dimensions.width\n      )}\n    >\n      <CustomCode.DigicardScreenHeader {...props} title={'Menu Desarrollo'} />\n      <View\n        style={StyleSheet.applyWidth(\n          { alignSelf: 'stretch', flex: 1, justifyContent: 'space-between' },\n          dimensions.width\n        )}\n      >\n        <ScrollView\n          bounces={true}\n          contentContainerStyle={StyleSheet.applyWidth(\n            { marginLeft: 5, marginRight: 5, marginTop: 15 },\n            dimensions.width\n          )}\n          showsVerticalScrollIndicator={true}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Version'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {getVersion()}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Build'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {getBuild()}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'API'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {getAPI()}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Datos demo'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <Switch\n                defaultValue={Constants['demoMode']}\n                onValueChange={newSwitchValue => {\n                  try {\n                    setGlobalVariableValue({\n                      key: 'demoMode',\n                      value: newSwitchValue,\n                    });\n                    setGlobalVariableValue({\n                      key: 'demoDataDate',\n                      value: \"'2022-03-15T12:00:00'\",\n                    });\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n              />\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Fecha datos'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  { color: theme.colors.strong, fontSize: 12 },\n                  dimensions.width\n                )}\n              >\n                {Constants['demoDataDate']}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Notif Token'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <TextInput\n                defaultValue={Stringify(Constants['ExpoNotifToken'])}\n                disabled={true}\n                multiline={true}\n                numberOfLines={2}\n                placeholder={\n                  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\"\n                }\n                style={StyleSheet.applyWidth(\n                  {\n                    borderBottomWidth: 1,\n                    borderColor: theme.colors.divider,\n                    borderLeftWidth: 1,\n                    borderRadius: 8,\n                    borderRightWidth: 1,\n                    borderTopWidth: 1,\n                    fontSize: 10,\n                    paddingLeft: 1,\n                    paddingRight: 1,\n                  },\n                  dimensions.width\n                )}\n              />\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Auth Token'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <TextInput\n                defaultValue={Constants['AUTH_HEADER']}\n                disabled={true}\n                multiline={true}\n                numberOfLines={4}\n                placeholder={\n                  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\"\n                }\n                style={StyleSheet.applyWidth(\n                  {\n                    borderBottomWidth: 1,\n                    borderColor: theme.colors.divider,\n                    borderLeftWidth: 1,\n                    borderRadius: 8,\n                    borderRightWidth: 1,\n                    borderTopWidth: 1,\n                    fontSize: 10,\n                    paddingLeft: 1,\n                    paddingRight: 1,\n                  },\n                  dimensions.width\n                )}\n              />\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { flexDirection: 'row', marginRight: 10 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { alignItems: 'flex-end', marginRight: 5, width: '30%' },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    typography: theme.typography.subtitle2,\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Refresh Token'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                { marginLeft: 5, width: '70%' },\n                dimensions.width\n              )}\n            >\n              <TextInput\n                defaultValue={Constants['REFRESH_TOKEN']}\n                disabled={true}\n                multiline={true}\n                numberOfLines={4}\n                placeholder={\n                  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\"\n                }\n                style={StyleSheet.applyWidth(\n                  {\n                    borderBottomWidth: 1,\n                    borderColor: theme.colors.divider,\n                    borderLeftWidth: 1,\n                    borderRadius: 8,\n                    borderRightWidth: 1,\n                    borderTopWidth: 1,\n                    fontSize: 10,\n                    paddingLeft: 1,\n                    paddingRight: 1,\n                  },\n                  dimensions.width\n                )}\n              />\n            </View>\n          </View>\n        </ScrollView>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              marginBottom: '2%',\n              marginTop: '2%',\n              paddingLeft: '6%',\n              paddingRight: '6%',\n            },\n            dimensions.width\n          )}\n        >\n          {/* Button Solid */}\n          <Button\n            disabled={false}\n            loading={false}\n            onPress={() => {\n              try {\n                navigation.navigate('Main', { screen: 'InicioScreen' });\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 10,\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontWeight: '700',\n                marginBottom: '2%',\n                marginLeft: '6%',\n                marginRight: '6%',\n                marginTop: '2%',\n                minHeight: 48,\n                textAlign: 'center',\n                width: '100%',\n              },\n              dimensions.width\n            )}\n            title={'Cerrar'}\n          />\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(DevScreen);\n","import React from 'react';\n\nconst passEncrypt = pass => {\n  const dkey = '$D1g1c@rd#Cl0ud#Sys7em#Encr1p7#P@ssw0rd$';\n\n  // const JsCrypto = require(\"jscrypto\");\n  const DES3 = require('nodejs3des');\n\n  function decrypt(msg) {\n    // dMsg = JsCrypto.DES3.decrypt(msg, dkey).toString(JsCrypto.Utf8)\n    const dMsg = DES3.decrypt(dkey, msg);\n    // console.log('decripted (' + msg + '):' + dMsg)\n    return dMsg;\n  }\n\n  function encrypt(msg) {\n    // eMsg = JsCrypto.DES3.encrypt(msg, dkey).toString(JsCrypto.Utf8)\n    // eMsg = JsCrypto.DES3.encrypt(msg, dkey).toString()\n    const eMsg = DES3.encrypt(dkey, msg);\n    // console.log('encripted (' + msg + '):' + eMsg)\n    return eMsg;\n  }\n\n  let passEncrypted = encrypt(pass);\n\n  // console.log('pass: ' + pass)\n  // console.log('passEncrypted: ' + passEncrypted)\n  // // console.log('passDecrypted: ' + decrypt(passEncrypted))\n\n  // console.log('admlocal@email.com: ' + decrypt('0VB6iBoHtoY='))\n  // console.log('usvis@email.com: ' + decrypt('BHmkzcNXYe0='))\n  // console.log('20283309178@email.com: ' + decrypt('4sav0GonhZg='))\n\n  return passEncrypted;\n\n  // export default passEncrypt;\n};\n\nexport default passEncrypt;\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport passEncrypt from '../global-functions/passEncrypt';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  Container,\n  ScreenContainer,\n  TextField,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { Image, Platform, Text, View, useWindowDimensions } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst IniciarSesionScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [whoami, setWhoami] = React.useState({});\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const validate = (value, regex, target_var) => {\n    const invalid = !regex.test(value);\n    console.log(`Value: ${value} Valid: ${!invalid}`);\n\n    setVariable({ key: target_var, value: invalid });\n\n    return invalid;\n  };\n\n  const resetStackNav = () => {\n    if (props.navigation.getState) {\n      const navState = props.navigation.getState();\n\n      if (navState.routes.length > 1)\n        props.navigation.reset({\n          index: 0,\n          routes: [{ name: 'Auth' }],\n        });\n    }\n  };\n\n  const hideSplash = () => {\n    CustomCode.hideSplash();\n  };\n\n  // Extract right error message from payload\n  const extractError = body => {\n    if (body.error) {\n      if (body.error.details && body.error.details.length) {\n        return `${body.error.details[0].path.substring(1)} ${body.error.details[0].message\n          }`;\n      }\n      return body.error.message;\n    }\n    return '';\n  };\n\n  const emailCheck = email => {\n    return validate(\n      email,\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      'SHOW_EMAIL_ERROR'\n    );\n  };\n\n  const passwordCheck = password => {\n    return false; // En Login no doy pistas del formato de la password\n\n    // De 8 a 100 cars, debe contener  1 mayúscula, 1 minúscula y 2 dígitos\n    return validate(\n      password,\n      /^(?=.*[a-z])(?=.*[A-Z])(?=(.*\\d){2,})[A-Za-z\\d@$!%*?&]{8,100}$/,\n      'SHOW_PASSWORD_ERROR'\n    );\n  };\n\n  // Checks if logged in\n  const loggedIn = (authToken, refreshToken, whoami) => {\n    return true;\n  };\n\n  const logVar = aVar => {\n    if (variables['logging']) console.log(`log value: ${JSON.stringify(aVar)}`);\n    return aVar;\n  };\n\n  const breakIfEmpty = value => {\n    const empty = isEmpty(value);\n\n    if (empty) setLoading(false);\n\n    console.log(`breakIfEmpty(${value}): ${empty}`);\n\n    return empty;\n  };\n\n  const isEmpty = value => {\n    const empty = !value || value?.length == 0;\n\n    // console.log(`checking emptyness of '${value}': ${empty}`);\n\n    return empty;\n    // return true;\n  };\n\n  const skipIfLogged = (whoami, refreshToken) => {\n    const homeScreen = 'InicioScreen';\n\n    // console.log(`skipIfLogged(whoami: ${JSON.stringify(whoami)}, refreshToken: ${refreshToken})`);\n    console.log(\n      `skipIfLogged(whoami: ${whoami}, refreshToken: ${refreshToken})`\n    );\n    console.log(whoami);\n\n    if (whoami?.error) {\n      if (isEmpty(refreshToken)) {\n        console.log(\n          'whoami error. token expiró y no hay refresh token. Obligando a login'\n        );\n        setLoading(false);\n        return true;\n      } else {\n        console.log(\n          'whoami error. token expiró, las acciones subsiguientes trataran de renovarlo'\n        );\n        return false;\n      }\n    }\n    // if(whoami?.emp_doc_number && refreshToken?.length) {  No tiene sentido preguntar, si no retornó error estoy conectado\n    else console.log('whoami ok. Estoy conectado');\n\n    setLoading(false);\n    console.log(`skipIfLogged: navigating to ${homeScreen}`);\n    props.navigation.navigate('Main', { screen: homeScreen });\n    return true;\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        hideSplash();\n        setLoading(true);\n        if (breakIfEmpty(Constants['AUTH_HEADER'])) {\n          return;\n        }\n        const a_whoami = (\n          await DcSSApi.whoamiGET(Constants, {\n            comid: Constants['my_emp_com_id'],\n          })\n        )?.json;\n        const skip = skipIfLogged(a_whoami, Constants['REFRESH_TOKEN']);\n        if (skip) {\n          return;\n        }\n        const a_refresh = (\n          await DcSSApi.tokenRefreshPOST(Constants, {\n            refreshToken: Constants['REFRESH_TOKEN'],\n          })\n        )?.json;\n        setLoading(false);\n        const a_refresh_error = a_refresh?.error;\n        if (a_refresh_error) {\n          return;\n        }\n        const a_accessToken = a_refresh?.accessToken;\n        const newAUTH_HEADER = setGlobalVariableValue({\n          key: 'AUTH_HEADER',\n          value: 'Bearer ' + a_accessToken,\n        });\n        console.log(newAUTH_HEADER);\n        navigation.navigate('Main', { screen: 'InicioScreen' });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          backgroundColor: theme.colors.background,\n          height: '100%',\n          justifyContent: 'space-between',\n        },\n        dimensions.width\n      )}\n    >\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={'connecting'}\n      />\n\n      <KeyboardAwareScrollView\n        enableAutomaticScroll={true}\n        enableOnAndroid={false}\n        enableResetScrollToCoords={true}\n        extraHeight={200}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              alignSelf: 'center',\n              paddingTop: '5%',\n              width: '90%',\n            },\n            dimensions.width\n          )}\n        >\n          {/* app-logo */}\n          <Image\n            resizeMode={'contain'}\n            source={Images.DigiSSTransp}\n            style={StyleSheet.applyWidth(\n              { height: 100, marginTop: 20, overflow: 'hidden', width: 300 },\n              dimensions.width\n            )}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { alignContent: 'center', alignItems: 'center', marginTop: 20 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontSize: 28,\n                  fontWeight: '700',\n                  marginBottom: 15,\n                  opacity: 0.8,\n                  textAlign: 'center',\n                  textDecorationColor: theme.colors.primary,\n                  textTransform: 'none',\n                },\n                dimensions.width\n              )}\n            >\n              {'Bienvenido !'}\n            </Text>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            { justifyContent: 'center', minHeight: 50 },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              { alignContent: 'center', alignItems: 'center' },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  typography: theme.typography.subtitle2,\n                },\n                dimensions.width\n              )}\n            >\n              {'Ingresá tu mail y contraseña'}\n            </Text>\n          </View>\n        </View>\n\n        <View>\n          <Container\n            backgroundImageResizeMode={'cover'}\n            style={StyleSheet.applyWidth(\n              { alignSelf: 'flex-start' },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignContent: 'center',\n                  justifyContent: 'flex-end',\n                  paddingLeft: '8%',\n                  paddingRight: '8%',\n                },\n                dimensions.width\n              )}\n            >\n              {/* Email */}\n              <TextField\n                autoCapitalize={'none'}\n                keyboardType={'email-address'}\n                label={'Email'}\n                onChangeText={newEmailValue => {\n                  const email = newEmailValue;\n                  try {\n                    setEmail(email);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                returnKeyType={'done'}\n                type={'solid'}\n                value={email}\n              />\n              <>\n                {!Constants['SHOW_EMAIL_ERROR'] ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'Debe ser una dirección de email válida'}\n                  </Text>\n                )}\n              </>\n              {/* Password */}\n              <TextField\n                label={'Contraseña'}\n                onChangeText={newPasswordValue => {\n                  const password = newPasswordValue;\n                  try {\n                    setPassword(password);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                placeholder={''}\n                returnKeyType={'done'}\n                secureTextEntry={true}\n                style={StyleSheet.applyWidth(\n                  { marginTop: '5%' },\n                  dimensions.width\n                )}\n                type={'solid'}\n                value={password}\n              />\n              <>\n                {!Constants['SHOW_PASSWORD_ERROR'] ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'De 8 a 100 cars,  1 mayúscula, 1 minúscula, 2 dígitos'}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  marginBottom: '2%',\n                  marginLeft: '8%',\n                  marginRight: '8%',\n                  marginTop: '5%',\n                  paddingBottom: 4,\n                  paddingTop: 4,\n                },\n                dimensions.width\n              )}\n            >\n              <>\n                {isEmpty(errorMessage) ? null : (\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 12,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {errorMessage}\n                  </Text>\n                )}\n              </>\n            </View>\n          </Container>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              marginBottom: '2%',\n              marginTop: '2%',\n              paddingLeft: '6%',\n              paddingRight: '6%',\n            },\n            dimensions.width\n          )}\n        >\n          <Touchable\n            onPress={() => {\n              try {\n                navigation.navigate('Auth', { screen: 'NuevoUsuarioScreen' });\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.secondary,\n                  marginBottom: '3%',\n                  marginTop: '2%',\n                  textDecorationLine: 'underline',\n                },\n                dimensions.width\n              )}\n            >\n              {'No tenés cuenta ?  Creá una !'}\n            </Text>\n          </Touchable>\n          {/* Button Solid */}\n          <Button\n            disabled={false}\n            loading={false}\n            onPress={() => {\n              const handler = async () => {\n                try {\n                  loggedIn(undefined, undefined, undefined);\n                  undefined;\n                  if (emailCheck(email)) {\n                    return;\n                  }\n                  if (passwordCheck(password)) {\n                    return;\n                  }\n                  const loginResponse = (\n                    await DcSSApi.loginPOST(Constants, {\n                      email: email?.toLowerCase(),\n                      password: passEncrypt(password),\n                    })\n                  )?.json;\n                  console.log(loginResponse);\n                  const errorMessage = extractError(loginResponse);\n                  setErrorMessage(errorMessage);\n                  if (errorMessage?.length) {\n                    return;\n                  }\n                  const authToken = loginResponse?.accessToken;\n                  const AUTH_HEADER = setGlobalVariableValue({\n                    key: 'AUTH_HEADER',\n                    value: 'Bearer ' + authToken,\n                  });\n                  console.log(AUTH_HEADER);\n                  if (!authToken) {\n                    return;\n                  }\n                  const a_emp_id = loginResponse?.emp_id;\n                  const a_emp_com_id = loginResponse?.emp_com_id;\n                  setGlobalVariableValue({\n                    key: 'my_emp_id',\n                    value: parseInt(a_emp_id, 10),\n                  });\n                  setGlobalVariableValue({\n                    key: 'my_emp_com_id',\n                    value: a_emp_com_id,\n                  });\n                  const refreshToken = loginResponse?.refreshToken;\n                  const REFRESH_TOKEN = setGlobalVariableValue({\n                    key: 'REFRESH_TOKEN',\n                    value: refreshToken,\n                  });\n                  console.log(REFRESH_TOKEN);\n                  navigation.navigate('Permissions', {\n                    screen: 'BienvenidoScreen',\n                  });\n                } catch (err) {\n                  console.error(err);\n                }\n              };\n              handler();\n            }}\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 10,\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontWeight: '700',\n                marginLeft: '6%',\n                marginRight: '6%',\n                marginTop: '2%',\n                minHeight: 48,\n                textAlign: 'center',\n                width: '100%',\n              },\n              dimensions.width\n            )}\n            title={'Iniciar sesión'}\n          />\n        </View>\n        <>\n          {!(Platform.OS === 'web') ? null : (\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'space-around',\n                  marginTop: '2%',\n                  paddingLeft: '6%',\n                  paddingRight: '6%',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center' },\n                  dimensions.width\n                )}\n              >\n                <Touchable\n                  onPress={() => {\n                    const handler = async () => {\n                      try {\n                        await WebBrowser.openBrowserAsync(\n                          'https://play.google.com/store/apps/details?id=com.digicard.dss'\n                        );\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    };\n                    handler();\n                  }}\n                >\n                  {/* imgGoogle */}\n                  <Image\n                    resizeMode={'contain'}\n                    source={Images.DisponibleEnGooglePlay}\n                    style={StyleSheet.applyWidth(\n                      { height: 40, width: 120 },\n                      dimensions.width\n                    )}\n                  />\n                </Touchable>\n                {/* qrGoogle */}\n                <Image\n                  resizeMode={'cover'}\n                  source={Images.QrGoogle}\n                  style={StyleSheet.applyWidth(\n                    { height: 90, marginTop: 5, width: 90 },\n                    dimensions.width\n                  )}\n                />\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center' },\n                  dimensions.width\n                )}\n              >\n                <Touchable\n                  onPress={() => {\n                    const handler = async () => {\n                      try {\n                        await WebBrowser.openBrowserAsync(\n                          'https://apps.apple.com/us/app/digicard-self-service/id1621603154'\n                        );\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    };\n                    handler();\n                  }}\n                >\n                  {/* imgApple */}\n                  <Image\n                    resizeMode={'contain'}\n                    source={Images.DisponibleEnApple}\n                    style={StyleSheet.applyWidth(\n                      { height: 40, width: 120 },\n                      dimensions.width\n                    )}\n                  />\n                </Touchable>\n                {/* qrApple */}\n                <Image\n                  resizeMode={'cover'}\n                  source={Images.QrApple}\n                  style={StyleSheet.applyWidth(\n                    { height: 90, marginTop: 5, width: 90 },\n                    dimensions.width\n                  )}\n                />\n              </View>\n            </View>\n          )}\n        </>\n      </KeyboardAwareScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(IniciarSesionScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  CircleImage,\n  Container,\n  Divider,\n  Icon,\n  ScreenContainer,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  Image,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst InicioScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const [modalLeftPadding, setModalLeftPadding] = React.useState(22);\n  const [modalTopPadding, setModalTopPadding] = React.useState(6);\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [showMenu, setShowMenu] = React.useState(false);\n  const resetStackNav = () => {\n    if (props.navigation.getState) {\n      const navState = props.navigation.getState();\n\n      if (navState.routes.length > 1)\n        props.navigation.reset({\n          index: 0,\n          routes: [{ name: 'Main' }],\n        });\n    }\n  };\n\n  const initVars = () => {\n    console.log(`Platform: ${JSON.stringify(CustomCode.Platform)}`);\n    switch (CustomCode.Platform.OS) {\n      case 'web':\n        setModalTopPadding(6);\n        setModalLeftPadding(12);\n        break;\n\n      case 'ios':\n        setModalTopPadding(30);\n        setModalLeftPadding(12);\n        break;\n\n      case 'android':\n        setModalTopPadding(6);\n        setModalLeftPadding(10);\n        break;\n    }\n  };\n\n  // Retorna un empty string\n  const emptyString = any => {\n    return '';\n  };\n\n  const menuItems = () => {\n    return [\n      {\n        name: 'Consultas',\n        icon: 'MaterialCommunityIcons/frequently-asked-questions',\n        background: Images.UndrawSearch01,\n        target: 'ConsultasScreen',\n        enabled: true,\n        visible: true,\n        permission: 'Inicio:Consultas',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Solicitudes',\n        icon: 'FontAwesome/pencil-square-o',\n        background: Images.UndrawRequest01,\n        target: 'SolicitudesScreen',\n        enabled: true,\n        visible: true,\n        permission: 'Inicio:Solicitudes',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Fichada Móvil',\n        icon: 'MaterialCommunityIcons/account-clock',\n        background: Images.UndrawPunch01,\n        target: 'ConsultasScreen',\n        enabled: true,\n        visible: true,\n        permission: 'Inicio:FichadaMovil',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Aprobaciones',\n        icon: 'FontAwesome/check-square-o',\n        background: Images.UndrawChecklist,\n        target: 'AprobacionesScreen',\n        enabled: true,\n        visible: true,\n        permission: 'Inicio:Aprobaciones',\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n    ];\n  };\n\n  const checkPermsError = perms => {\n    // console.log(`checkPermsError: ${JSON.stringify(perms)}`);\n    // console.log(`perms error: ${perms.error}`);\n\n    if (perms.error) return [];\n\n    return perms;\n  };\n  // ==============  INLINE API REST HOOKS ====================\n  //\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  /*\nconst {\nloading: employeeLoading,\ndata: employeeData,\nerror: employeeError,\n} = CustomCode.useEmployeeFilteredGET({ \nemp_id: Constants['my_emp_id'],     \nbody: {\n  \"fields\": {\n    \"emp_id\": true,\n    \"emp_first_name\": true,\n    \"emp_com_id\": true,\n  }\n}\n});\n\nsetVariable('firstName' , employeeData?.emp_first_name + ' (de API)');\nconsole.log(`useEmployeeFilteredGET. data: ${JSON.stringify(employeeData)}`);\n\n//\n// ==============  INLINE API REST HOOKS END ================\n*/\n  const dcSSEmployeeTokenPATCH = DcSSApi.useEmployeeTokenPATCH();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        initVars();\n        resetStackNav();\n        const emp_photo_rslt = (\n          await DcSSApi.employeePhotoGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        const a_emp_photo = emp_photo_rslt?.emp_photo;\n        setGlobalVariableValue({\n          key: 'emp_photo',\n          value: a_emp_photo,\n        });\n        const permissions = (\n          await DcSSApi.permissionsGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setGlobalVariableValue({\n          key: 'AppPermissions',\n          value: checkPermsError(permissions),\n        });\n        console.log(Constants['AppPermissions']);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      hasTopSafeArea={true}\n      scrollable={false}\n    >\n      {/* Fetch Screen (InicioScreen) */}\n      <DcSSApi.FetchEmployeeBasicGET\n        emp_id={Constants['my_emp_id']}\n        handlers={{\n          onData: fetchScreenInicioScreenData => {\n            const handler = async () => {\n              try {\n                const company_rslt = (\n                  await DcSSApi.companyGET(Constants, {\n                    com_id: Constants['my_emp_com_id'],\n                  })\n                )?.json;\n                const a_company_name = company_rslt?.com_description;\n                setGlobalVariableValue({\n                  key: 'company_name',\n                  value: a_company_name,\n                });\n              } catch (err) {\n                console.error(err);\n              }\n            };\n            handler();\n          },\n        }}\n      >\n        {({ loading, error, data, refetchEmployeeBasic }) => {\n          const fetchScreenInicioScreenData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <CustomCode.DigicardScreenHeader\n                {...props}\n                left={{\n                  icon: 'Feather/menu',\n                  onPress: () => setShowDrawer(true),\n                }}\n                right={{\n                  icon: 'Feather/bell',\n                  nav: 'Notifications',\n                  screen: 'NotificacionesScreen',\n                }}\n              />\n              <View\n                style={StyleSheet.applyWidth(\n                  { marginLeft: 12, marginRight: 12, zIndex: -1 },\n                  dimensions.width\n                )}\n              >\n                <View>\n                  <View\n                    style={StyleSheet.applyWidth(\n                      { marginBottom: 10, marginTop: 10 },\n                      dimensions.width\n                    )}\n                  >\n                    <Touchable\n                      onPress={() => {\n                        try {\n                          setShowMenu(!showMenu);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                    >\n                      <Text\n                        style={StyleSheet.applyWidth(\n                          {\n                            color: theme.colors.secondary,\n                            fontFamily: 'Montserrat_600SemiBold',\n                            textAlign: 'right',\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        {Constants['company_name']}\n                      </Text>\n                    </Touchable>\n                  </View>\n\n                  <View\n                    style={StyleSheet.applyWidth(\n                      {\n                        alignContent: 'space-between',\n                        flexDirection: 'row',\n                        justifyContent: 'space-between',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    <View\n                      style={StyleSheet.applyWidth(\n                        { alignItems: 'flex-start', width: '75%' },\n                        dimensions.width\n                      )}\n                    >\n                      <Text\n                        style={StyleSheet.applyWidth(\n                          {\n                            alignSelf: 'flex-start',\n                            color: theme.colors.strong,\n                            fontFamily: 'System',\n                            fontSize: 28,\n                            fontWeight: '600',\n                            textAlign: 'justify',\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        {'Hola '}\n                        {fetchScreenInicioScreenData?.emp_first_name}\n                        {'!'}\n                      </Text>\n\n                      <Text\n                        style={StyleSheet.applyWidth(\n                          {\n                            color: theme.colors.primary,\n                            fontFamily: 'System',\n                            fontSize: 18,\n                            fontWeight: '600',\n                            marginTop: 8,\n                          },\n                          dimensions.width\n                        )}\n                      >\n                        {'Bienvenido/a a Digicard Self Service'}\n                      </Text>\n                    </View>\n                    <CircleImage\n                      size={80}\n                      source={{ uri: `${Constants['emp_photo']}` }}\n                    />\n                  </View>\n                  <View />\n                </View>\n\n                <View\n                  style={StyleSheet.applyWidth(\n                    {\n                      alignItems: 'center',\n                      flexDirection: 'row',\n                      justifyContent: 'center',\n                      marginBottom: 10,\n                      marginTop: 10,\n                    },\n                    dimensions.width\n                  )}\n                >\n                  <Icon\n                    color={theme.colors.optionSelected}\n                    name={'MaterialCommunityIcons/phone-in-talk'}\n                    size={24}\n                    style={StyleSheet.applyWidth(\n                      { marginRight: 6 },\n                      dimensions.width\n                    )}\n                  />\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.optionSelected,\n                        fontFamily: 'System',\n                        fontSize: 16,\n                        fontWeight: '600',\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'Tu linea directa con RRHH'}\n                  </Text>\n                </View>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    flex: 1,\n                    marginBottom: 10,\n                    marginLeft: 12,\n                    marginRight: 12,\n                    paddingBottom: 25,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Utils.CustomCodeErrorBoundary>\n                  {CustomCode.renderMenuItems(\n                    menuItems(),\n                    Constants['AppPermissions'],\n                    props\n                  )}\n                </Utils.CustomCodeErrorBoundary>\n              </View>\n              {/* OptionsModal */}\n              <View removeClippedSubviews={false}>\n                <CustomCode.SafeAreaView>\n                  <CustomCode.rnModal\n                    isVisible={showDrawer}\n                    animationIn={'slideInLeft'}\n                    animationOut={'slideOutLeft'}\n                    backdropColor={'white'}\n                    backdropOpacity={0.1}\n                    onBackdropPress={() => setShowDrawer(false)}\n                    onSwipeComplete={() => setShowDrawer(false)}\n                    swipeDirection={'left'}\n                    swipeThreshold={50}\n                    style={{ margin: 0 }}\n                    hideModalContentWhileAnimating={true}\n                  >\n                    <Container\n                      style={{\n                        flex: 1,\n                        width: '85%',\n                        alignSelf: 'flex-start',\n                        opacity: 0.95,\n                        paddingTop: modalTopPadding,\n                        paddingLeft: modalLeftPadding,\n                        backgroundColor: theme.colors.OptionMenu,\n                        borderRadius: 0,\n                        borderTopRightRadius: 16,\n                        borderBottomRightRadius: 16,\n                      }}\n                      backgroundImageResizeMode={'cover'}\n                    >\n                      <Container\n                        backgroundImageResizeMode={'cover'}\n                        style={StyleSheet.applyWidth(\n                          { borderRadius: 1, height: '100%', width: '70%' },\n                          dimensions.width\n                        )}\n                      >\n                        <View\n                          style={StyleSheet.applyWidth(\n                            { borderRadius: 23 },\n                            dimensions.width\n                          )}\n                        >\n                          <Touchable\n                            onPress={() => {\n                              try {\n                                setShowDrawer(false);\n                              } catch (err) {\n                                console.error(err);\n                              }\n                            }}\n                            style={StyleSheet.applyWidth(\n                              { marginBottom: 5, marginTop: 5 },\n                              dimensions.width\n                            )}\n                          >\n                            <Icon\n                              color={theme.colors.background}\n                              name={'MaterialCommunityIcons/backburger'}\n                              size={32}\n                            />\n                          </Touchable>\n\n                          <Touchable\n                            onPress={() => {\n                              try {\n                                setShowDrawer(false);\n                                navigation.navigate('Main', {\n                                  screen: 'AboutScreen',\n                                });\n                              } catch (err) {\n                                console.error(err);\n                              }\n                            }}\n                            style={StyleSheet.applyWidth(\n                              { marginBottom: 5, marginTop: 25 },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { flexDirection: 'row', paddingBottom: 10 },\n                                dimensions.width\n                              )}\n                            >\n                              <Icon\n                                color={theme.colors.background}\n                                name={'AntDesign/infocirlceo'}\n                                size={24}\n                                style={StyleSheet.applyWidth(\n                                  { marginRight: 10 },\n                                  dimensions.width\n                                )}\n                              />\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.background,\n                                    fontFamily: 'System',\n                                    fontSize: 18,\n                                    fontWeight: '700',\n                                    marginTop: 2,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Acerca de...'}\n                              </Text>\n                            </View>\n                          </Touchable>\n\n                          <Touchable\n                            onPress={() => {\n                              const handler = async () => {\n                                try {\n                                  const tokenRslt = (\n                                    await dcSSEmployeeTokenPATCH.mutateAsync({\n                                      emp_id:\n                                        fetchScreenInicioScreenData?.emp_id,\n                                      emp_token: '',\n                                    })\n                                  )?.json;\n                                  setGlobalVariableValue({\n                                    key: 'AUTH_HEADER',\n                                    value: emptyString(tokenRslt),\n                                  });\n                                  setShowDrawer(false);\n                                  navigation.navigate('Auth', {\n                                    screen: 'IniciarSesionScreen',\n                                  });\n                                } catch (err) {\n                                  console.error(err);\n                                }\n                              };\n                              handler();\n                            }}\n                            style={StyleSheet.applyWidth(\n                              { marginBottom: 5, marginTop: 5 },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { flexDirection: 'row', paddingBottom: 10 },\n                                dimensions.width\n                              )}\n                            >\n                              <Icon\n                                color={theme.colors.background}\n                                name={'SimpleLineIcons/logout'}\n                                size={24}\n                                style={StyleSheet.applyWidth(\n                                  { marginRight: 10 },\n                                  dimensions.width\n                                )}\n                              />\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.background,\n                                    fontFamily: 'System',\n                                    fontSize: 18,\n                                    fontWeight: '700',\n                                    marginTop: 2,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Cerrar sesión'}\n                              </Text>\n                            </View>\n                          </Touchable>\n                        </View>\n                      </Container>\n                    </Container>\n                  </CustomCode.rnModal>\n                </CustomCode.SafeAreaView>\n              </View>\n            </>\n          );\n        }}\n      </DcSSApi.FetchEmployeeBasicGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(InicioScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Icon,\n  ScreenContainer,\n  Surface,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst NotificacionesScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [requestsType, setRequestsType] = React.useState('E');\n  const [screenName, setScreenName] = React.useState('Notificaciones');\n  const [showing, setShowing] = React.useState(0);\n  const IsoString2ShortDate = utcString => {\n    return CustomCode.IsoString2ShortDate(utcString);\n  };\n\n  const reqStatus2String = reqStatus => {\n    const reqStatuses = {\n      E: 'En proceso',\n      A: 'Aprobada',\n      D: 'Denegada',\n      T: 'Todas',\n    };\n\n    return reqStatuses[reqStatus];\n  };\n\n  const log = value => {\n    return CustomCode.log(value);\n  };\n\n  const setShow = what => {\n    setShowing(what);\n\n    calcFilter(what);\n\n    // console.log(`setShow(${what})`);\n    CustomCode.log(`setShow(${what})`);\n  };\n\n  const friendlyDate = aDate => {\n    return CustomCode.Date2String(\n      CustomCode.IsoDateStringToDate(aDate),\n      'DD/MM HH:mm'\n    );\n  };\n\n  const calcFilter = showOption => {\n    // console.log(`calcFilter(${showOption})`);\n    CustomCode.log(`calcFilter(${showOption})`);\n    switch (showOption) {\n      case 0:\n        setRequestsType('N');\n        break;\n\n      case 1:\n        setRequestsType('R');\n        break;\n\n      case 2:\n        setRequestsType('A');\n        break;\n    }\n  };\n\n  const reqTypeToString = reqType => {\n    const reqTypes = {\n      vac: 'Vacaciones',\n      ctu: 'Cambio de turno',\n      pya: 'Permisos y ausencias',\n      rys: 'Retiros y salidas intermedias',\n      epp: 'EPP',\n    };\n\n    return reqTypes[reqType];\n  };\n\n  // Convierte una fecha en formato YYYY-MM-DD a Date\n  const IsoDateStringToUTCDate = sDate => {\n    return CustomCode.IsoDateStringToUTCDate(aDate);\n  };\n\n  const now = () => {\n    return new Date().toISOString();\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const dcSSNotificationPATCH = DcSSApi.useNotificationPATCH();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      {/* DatePickerHeaderView */}\n      <View\n        style={StyleSheet.applyWidth(\n          { marginBottom: 10, marginLeft: 15, marginRight: 15, marginTop: 20 },\n          dimensions.width\n        )}\n      >\n        <CustomCode.rnSegmentedControlTab\n          values={['Nuevas', 'Leidas', 'Todas']}\n          onTabPress={index => setShow(index)}\n          selectedIndex={showing}\n        />\n      </View>\n\n      <ScrollView\n        bounces={true}\n        style={StyleSheet.applyWidth({ height: 100 }, dimensions.width)}\n      >\n        <DcSSApi.FetchNotificationsByEmpGET\n          emp_id={Constants['my_emp_id']}\n          limit={100}\n          status={requestsType}\n        >\n          {({ loading, error, data, refetchNotificationsByEmp }) => {\n            const fetchData = data?.json;\n            if (loading) {\n              return <ActivityIndicator />;\n            }\n\n            if (error || data?.status < 200 || data?.status >= 300) {\n              return <ActivityIndicator />;\n            }\n\n            return (\n              <>\n                {/* NotificacionesSectionView */}\n                <View\n                  style={StyleSheet.applyWidth(\n                    { marginLeft: '3%', marginRight: '3%' },\n                    dimensions.width\n                  )}\n                >\n                  {/* ItemsList */}\n                  <FlatList\n                    data={fetchData}\n                    keyExtractor={itemsListData =>\n                      itemsListData?.id ||\n                      itemsListData?.uuid ||\n                      JSON.stringify(itemsListData)\n                    }\n                    listKey={'1vBv0LIP'}\n                    numColumns={1}\n                    renderItem={({ item }) => {\n                      const itemsListData = item;\n                      return (\n                        <Touchable\n                          onPress={() => {\n                            const handler = async () => {\n                              try {\n                                if (itemsListData?.not_readed) {\n                                  return;\n                                }\n                                console.log('No leida');\n                                (\n                                  await dcSSNotificationPATCH.mutateAsync({\n                                    not_id: itemsListData?.not_id,\n                                    read: true,\n                                    read_date: now(),\n                                  })\n                                )?.json;\n                                await refetchNotificationsByEmp();\n                              } catch (err) {\n                                console.error(err);\n                              }\n                            };\n                            handler();\n                          }}\n                          style={StyleSheet.applyWidth(\n                            { marginBottom: 5, marginTop: 5 },\n                            dimensions.width\n                          )}\n                        >\n                          <Surface\n                            elevation={3}\n                            style={StyleSheet.applyWidth(\n                              {\n                                backgroundColor: theme.colors.verylight,\n                                borderRadius: 8,\n                                marginRight: 3,\n                                minHeight: 40,\n                                paddingBottom: 3,\n                                paddingLeft: 8,\n                                paddingRight: 8,\n                                paddingTop: 3,\n                              },\n                              dimensions.width\n                            )}\n                          >\n                            {/* TopView */}\n                            <View>\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    flexDirection: 'row',\n                                    justifyContent: 'space-between',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {/* txtSubject */}\n                                <Text\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignSelf: 'flex-start',\n                                      color: theme.colors.strong,\n                                      fontFamily: 'System',\n                                      fontWeight: '600',\n                                      marginBottom: 3,\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  {itemsListData?.not_subject}\n                                </Text>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'flex-end',\n                                      alignSelf: 'flex-end',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  {/* icnStatus */}\n                                  <>\n                                    {!itemsListData?.not_read ? null : (\n                                      <Icon\n                                        color={theme.colors.right}\n                                        name={'AntDesign/check'}\n                                        size={18}\n                                        style={StyleSheet.applyWidth(\n                                          { marginRight: 5 },\n                                          dimensions.width\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                </View>\n                              </View>\n\n                              <Text\n                                ellipsizeMode={'clip'}\n                                numberOfLines={1}\n                                style={StyleSheet.applyWidth(\n                                  { color: theme.colors.strong, fontSize: 12 },\n                                  dimensions.width\n                                )}\n                              >\n                                {itemsListData?.not_body}\n                              </Text>\n                            </View>\n                            {/* BottomView */}\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  flexDirection: 'row',\n                                  justifyContent: 'space-between',\n                                  marginTop: 5,\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              {/* txtFrom */}\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    alignSelf: 'flex-start',\n                                    color: theme.colors.strong,\n                                    fontSize: 10,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {itemsListData?.not_from_emp_name}\n                              </Text>\n                              {/* txtDate */}\n                              <>\n                                {!itemsListData?.not_date ? null : (\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'flex-end',\n                                        color: theme.colors.strong,\n                                        fontSize: 10,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {friendlyDate(itemsListData?.not_date)}\n                                  </Text>\n                                )}\n                              </>\n                            </View>\n                          </Surface>\n                        </Touchable>\n                      );\n                    }}\n                  />\n                </View>\n              </>\n            );\n          }}\n        </DcSSApi.FetchNotificationsByEmpGET>\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(NotificacionesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport passEncrypt from '../global-functions/passEncrypt';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  Container,\n  IconButton,\n  ScreenContainer,\n  TextField,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst NuevoUsuarioScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const [SHOW_CUIL_ERROR, setSHOW_CUIL_ERROR] = React.useState(false);\n  const [SHOW_EMAIL_ERROR, setSHOW_EMAIL_ERROR] = React.useState(false);\n  const [SHOW_PASSWORD_ERROR, setSHOW_PASSWORD_ERROR] = React.useState(false);\n  const [SHOW_PASSWORD_MISMATCH_ERROR, setSHOW_PASSWORD_MISMATCH_ERROR] =\n    React.useState(false);\n  const [cuil, setCuil] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [password, setPassword] = React.useState('');\n  const [password_copy, setPassword_copy] = React.useState('');\n  const [showPasswordHint, setShowPasswordHint] = React.useState(false);\n  const cuilCheck = cuil => {\n    const chkCuitChecksum = sCUIT => {\n      var aMult = '5432765432';\n      var aMult = aMult.split('');\n      var rawCUIT = sCUIT.replace(/-/g, '');\n\n      // console.log('CUIT: ', sCUIT);\n      // console.log('CUIT: ', rawCUIT);\n\n      if (rawCUIT && rawCUIT.length == 11) {\n        var aCUIT = rawCUIT.split('');\n        var iResult = 0;\n        for (var i = 0; i <= 9; i++) {\n          iResult += aCUIT[i] * aMult[i];\n        }\n        iResult = iResult % 11;\n        iResult = 11 - iResult;\n\n        if (iResult == 11) iResult = 0;\n        if (iResult == 10) iResult = 9;\n\n        console.log(`vdigit: ${iResult}`);\n\n        if (iResult == aCUIT[10]) return true;\n      }\n      return false;\n    };\n\n    const regex = /^(20|23|24|27|30|33|34)([0-9]{9}|-[0-9]{8}-[0-9]{1})$/;\n    const invalid = !regex.test(cuil) || !chkCuitChecksum(cuil);\n    console.log(`CUIL Value: ${cuil} Valid: ${!invalid}`);\n\n    // setGlobalVariable({ key: 'SHOW_CUIL_ERROR', value: invalid });\n    setSHOW_CUIL_ERROR(invalid);\n\n    return invalid;\n  };\n\n  const extractError = body => {\n    if (body.error) {\n      if (body.error.details && body.error.details.length) {\n        return `${body.error.details[0].path.substring(1)} ${\n          body.error.details[0].message\n        }`;\n      }\n      return body.error.message;\n    }\n    return '';\n  };\n\n  const validate = (value, regex, target_var) => {\n    const invalid = !regex.test(value);\n    console.log(`Value: ${value} Valid: ${!invalid}`);\n\n    // setGlobalVariable({ key: target_var, value: invalid });\n    target_var(invalid);\n\n    return invalid;\n  };\n\n  const emailCheck = email => {\n    return validate(\n      email,\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      setSHOW_EMAIL_ERROR\n    );\n  };\n\n  const passwordCheck = password => {\n    // De 8 a 100 cars, debe contener  1 mayúscula, 1 minúscula y 2 dígitos\n    return validate(\n      password,\n      /^(?=.*[a-z])(?=.*[A-Z])(?=(.*\\d){2,})[A-Za-z\\d@$!%*?&]{8,100}$/,\n      setSHOW_PASSWORD_ERROR\n    );\n  };\n\n  const passwordCopyCheck = (passwordCopy, password) => {\n    const invalid = password !== passwordCopy;\n\n    console.log(\n      `PasswordMismatch: ${invalid}, password: [${password}[], passwordCopy: [${passwordCopy}]`\n    );\n    // setGlobalVariable({ key: 'SHOW_PASSWORD_MISMATCH_ERROR', value: invalid });\n    setSHOW_PASSWORD_MISMATCH_ERROR(invalid);\n\n    return invalid;\n  };\n  // ======================== Inline Code ========================\n  // to use a global variable inside the component logic\n  const globalVariables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setGlobalVariable = CustomCode.useSetValue();\n  // =================== End  Inline Code ========================\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setCuil('');\n      setEmail('');\n      setPassword('');\n      setPassword_copy('');\n      setGlobalVariableValue({\n        key: 'SHOW_CUIL_ERROR',\n        value: '',\n      });\n      setGlobalVariableValue({\n        key: 'SHOW_EMAIL_ERROR',\n        value: '',\n      });\n      setGlobalVariableValue({\n        key: 'SHOW_PASSWORD_ERROR',\n        value: '',\n      });\n      setGlobalVariableValue({\n        key: 'SHOW_PASSWORD_MISMATCH_ERROR',\n        value: '',\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        { backgroundColor: theme.colors.background, height: '100%' },\n        dimensions.width\n      )}\n    >\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={'connecting'}\n      />\n      {/* PasswordHintView */}\n      <>\n        {!showPasswordHint ? null : (\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                backgroundColor: theme.colors.tooltip,\n                height: '18%',\n                justifyContent: 'center',\n                left: '20%',\n                opacity: 1,\n                position: 'absolute',\n                top: '50%',\n                width: '65%',\n                zIndex: 1,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 5,\n                },\n                dimensions.width\n              )}\n            >\n              {\n                'Longitud: 8 a 100 cars\\nAl menos una letra mayúscula\\nAl menos una letra minúscula\\nAl menos 2 dígitos\\nNo debe contener espacios'\n              }\n            </Text>\n          </View>\n        )}\n      </>\n      <KeyboardAwareScrollView\n        enableAutomaticScroll={true}\n        enableOnAndroid={true}\n        enableResetScrollToCoords={true}\n        extraHeight={200}\n        style={StyleSheet.applyWidth({ height: '100%' }, dimensions.width)}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignContent: 'space-around',\n              alignItems: 'center',\n              alignSelf: 'center',\n              justifyContent: 'space-around',\n              paddingTop: '5%',\n              width: '90%',\n            },\n            dimensions.width\n          )}\n        >\n          {/* app-logo */}\n          <Image\n            resizeMode={'contain'}\n            source={Images.DigiSSTransp}\n            style={StyleSheet.applyWidth(\n              { height: 100, marginTop: 40, overflow: 'hidden', width: 300 },\n              dimensions.width\n            )}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignContent: 'center',\n                alignItems: 'center',\n                marginBottom: 20,\n                marginTop: 20,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontSize: 28,\n                  fontWeight: '700',\n                  opacity: 0.8,\n                  textAlign: 'center',\n                  textDecorationColor: theme.colors.primary,\n                  textTransform: 'none',\n                },\n                dimensions.width\n              )}\n            >\n              {'Bienvenido !'}\n            </Text>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            { justifyContent: 'center', minHeight: 30 },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: 30,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  typography: theme.typography.subtitle2,\n                },\n                dimensions.width\n              )}\n            >\n              {'Para crear tu cuenta ingresá estos datos '}\n            </Text>\n          </View>\n        </View>\n\n        <Container\n          backgroundImageResizeMode={'cover'}\n          style={StyleSheet.applyWidth(\n            { alignSelf: 'center', width: '90%' },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              { marginLeft: '2%', marginRight: '2%' },\n              dimensions.width\n            )}\n          >\n            <View>\n              {/* Cuil */}\n              <TextField\n                editable={true}\n                label={'CUIL'}\n                onChangeText={newCuilValue => {\n                  try {\n                    setCuil(newCuilValue);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                style={StyleSheet.applyWidth(\n                  { marginTop: '1%' },\n                  dimensions.width\n                )}\n                type={'solid'}\n                underlineColor={theme.colors.light}\n                value={cuil}\n              />\n              <>\n                {!SHOW_CUIL_ERROR ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'El número de CUIL es incorrecto'}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View>\n              {/* Email */}\n              <TextField\n                editable={true}\n                keyboardType={'email-address'}\n                label={'e-mail'}\n                onChangeText={newEmailValue => {\n                  try {\n                    setEmail(newEmailValue);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                style={StyleSheet.applyWidth(\n                  { marginTop: '1%' },\n                  dimensions.width\n                )}\n                type={'solid'}\n                underlineColor={theme.colors.light}\n                value={email}\n              />\n              <>\n                {!SHOW_EMAIL_ERROR ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'Debe ser una dirección de email válida'}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View>\n              <View>\n                {/* Password */}\n                <TextField\n                  editable={true}\n                  keyboardType={'visible-password'}\n                  label={'Contraseña'}\n                  onChangeText={newPasswordValue => {\n                    try {\n                      setPassword(newPasswordValue);\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    { marginTop: '1%' },\n                    dimensions.width\n                  )}\n                  type={'solid'}\n                  underlineColor={theme.colors.light}\n                  value={password}\n                />\n                <View\n                  style={StyleSheet.applyWidth(\n                    { justifyContent: 'center', width: 0 },\n                    dimensions.width\n                  )}\n                >\n                  <>\n                    {!false ? null : (\n                      <IconButton\n                        icon={'Ionicons/ios-help-circle-outline'}\n                        size={24}\n                      />\n                    )}\n                  </>\n                </View>\n              </View>\n            </View>\n            <>\n              {!SHOW_PASSWORD_ERROR ? null : (\n                <Text\n                  numberOfLines={2}\n                  style={StyleSheet.applyWidth(\n                    {\n                      color: theme.colors.error,\n                      fontSize: 10,\n                      marginBottom: 1,\n                      textAlign: 'center',\n                    },\n                    dimensions.width\n                  )}\n                >\n                  {'De 8 a 100 cars,  1 mayúscula, 1 minúscula, 2 dígitos'}\n                </Text>\n              )}\n            </>\n            <View>\n              {/* PasswordCopy */}\n              <TextField\n                editable={true}\n                keyboardType={'visible-password'}\n                label={'Repetir contraseña'}\n                onChangeText={newPasswordCopyValue => {\n                  try {\n                    setPassword_copy(newPasswordCopyValue);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                style={StyleSheet.applyWidth(\n                  { marginBottom: '1%', marginTop: '1%' },\n                  dimensions.width\n                )}\n                type={'solid'}\n                underlineColor={theme.colors.light}\n                value={password_copy}\n              />\n              <>\n                {!SHOW_PASSWORD_MISMATCH_ERROR ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'Las contraseñas no coinciden'}\n                  </Text>\n                )}\n              </>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth({ marginTop: '4%' }, dimensions.width)}\n          >\n            <>\n              {!errorMessage?.length ? null : (\n                <Text\n                  style={StyleSheet.applyWidth(\n                    {\n                      color: theme.colors.error,\n                      fontSize: 12,\n                      textAlign: 'center',\n                    },\n                    dimensions.width\n                  )}\n                >\n                  {errorMessage}\n                </Text>\n              )}\n            </>\n          </View>\n        </Container>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              marginBottom: '10%',\n              marginTop: '5%',\n              paddingLeft: '6%',\n              paddingRight: '6%',\n            },\n            dimensions.width\n          )}\n        >\n          <Touchable\n            onPress={() => {\n              try {\n                navigation.navigate('Auth', { screen: 'IniciarSesionScreen' });\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.secondary,\n                  paddingBottom: '10%',\n                  textDecorationLine: 'underline',\n                },\n                dimensions.width\n              )}\n            >\n              {'Ya tenés cuenta,? Iniciá sesión!'}\n            </Text>\n          </Touchable>\n          {/* Button Solid */}\n          <Button\n            onPress={() => {\n              const handler = async () => {\n                try {\n                  if (cuilCheck(cuil)) {\n                    return;\n                  }\n                  if (emailCheck(email)) {\n                    return;\n                  }\n                  if (passwordCheck(password)) {\n                    return;\n                  }\n                  const passwordMismatch = passwordCopyCheck(\n                    password_copy,\n                    password\n                  );\n                  if (passwordMismatch) {\n                    return;\n                  }\n                  setLoading(true);\n                  undefined;\n                  const signupResponse = (\n                    await DcSSApi.signupPOST(Constants, {\n                      cuil: cuil,\n                      email: email,\n                      password: passEncrypt(password),\n                    })\n                  )?.json;\n                  setLoading(false);\n                  console.log(signupResponse);\n                  const errorMessage = extractError(signupResponse);\n                  setErrorMessage(errorMessage);\n                  if (errorMessage?.length) {\n                    return;\n                  }\n                  const emailVerified = signupResponse?.emailVerified;\n                  console.log(emailVerified);\n                  if (!emailVerified) {\n                    return;\n                  }\n                  const username = signupResponse?.username;\n                  setLoading(true);\n                  const loginResponse = (\n                    await DcSSApi.loginPOST(Constants, {\n                      email: username?.toLowerCase(),\n                      password: passEncrypt(password),\n                    })\n                  )?.json;\n                  setLoading(false);\n                  const loginError = extractError(loginResponse);\n                  setErrorMessage(loginError);\n                  if (loginError?.length) {\n                    return;\n                  }\n                  const authToken = loginResponse?.accessToken;\n                  const AUTH_HEADER = setGlobalVariableValue({\n                    key: 'AUTH_HEADER',\n                    value: 'Bearer ' + authToken,\n                  });\n                  console.log(AUTH_HEADER);\n                  const refreshToken = loginResponse?.refreshToken;\n                  const REFRESH_TOKEN = setGlobalVariableValue({\n                    key: 'REFRESH_TOKEN',\n                    value: refreshToken,\n                  });\n                  console.log(REFRESH_TOKEN);\n                  const a_emp_id = loginResponse?.emp_id;\n                  setGlobalVariableValue({\n                    key: 'my_emp_id',\n                    value: a_emp_id,\n                  });\n                  const a_emp_com_id = loginResponse?.emp_com_id;\n                  setGlobalVariableValue({\n                    key: 'my_emp_com_id',\n                    value: a_emp_com_id,\n                  });\n                  navigation.navigate('Permissions', {\n                    screen: 'BienvenidoScreen',\n                  });\n                } catch (err) {\n                  console.error(err);\n                }\n              };\n              handler();\n            }}\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 10,\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontWeight: '700',\n                marginLeft: '6%',\n                marginRight: '6%',\n                marginTop: '5%',\n                minHeight: 48,\n                textAlign: 'center',\n                width: '100%',\n              },\n              dimensions.width\n            )}\n            title={'Crear nuevo usuario'}\n          />\n        </View>\n      </KeyboardAwareScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(NuevoUsuarioScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, Touchable, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst PermisoDeCamaraScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const getPermission = async () => {\n    if (CustomCode.Platform.OS === 'web') return true;\n\n    const { status } = await CustomCode.Camera.getCameraPermissionsAsync();\n\n    console.log(`status: ${status}`);\n\n    return status === 'granted';\n  };\n\n  const askPermission = async () => {\n    const { status } = await CustomCode.Camera.requestCameraPermissionsAsync();\n\n    console.log(`status: ${status}`);\n\n    return status === 'granted';\n    // props.navigation.navigate(target);\n  };\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        const hasPermission = await getPermission();\n        if (!hasPermission) {\n          return;\n        }\n        navigation.navigate('Permissions', {\n          screen: 'CompletaInicioSessionScreen',\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          backgroundColor: theme.colors.background,\n          justifyContent: 'space-between',\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} left={{}} />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          source={Images.PermissionsCamera}\n          style={StyleSheet.applyWidth(\n            { height: 150, marginBottom: 16, overflow: 'hidden', width: 150 },\n            dimensions.width\n          )}\n        />\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 28,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {'Permitir Cámara'}\n        </Text>\n\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontSize: 16,\n              lineHeight: 28,\n              marginLeft: '3%',\n              marginRight: '3%',\n              textAlign: 'center',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {\n            'Lo necesitaremos para tomar fotos, acceder al carrete de la cámara o grabar videos.\\n'\n          }\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            marginBottom: '10%',\n            marginLeft: '6%',\n            marginRight: '6%',\n          },\n          dimensions.width\n        )}\n      >\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Permissions', {\n                screen: 'CompletaInicioSessionScreen',\n              });\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            { marginBottom: '8%' },\n            dimensions.width\n          )}\n        >\n          <Text\n            allowFontScaling={true}\n            ellipsizeMode={'tail'}\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.strong,\n                opacity: 0.52,\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                typography: theme.typography.button,\n              },\n              dimensions.width\n            )}\n            textBreakStrategy={'highQuality'}\n          >\n            {'Saltar'}\n          </Text>\n        </Touchable>\n        {/* Button Solid */}\n        <Button\n          onPress={() => {\n            const handler = async () => {\n              try {\n                setGlobalVariableValue({\n                  key: 'perms_got',\n                  value: 1,\n                });\n                const granted = await askPermission();\n                if (!granted) {\n                  return;\n                }\n                navigation.navigate('Permissions', {\n                  screen: 'CompletaInicioSessionScreen',\n                });\n              } catch (err) {\n                console.error(err);\n              }\n            };\n            handler();\n          }}\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              color: theme.colors.background,\n              fontFamily: 'System',\n              fontWeight: '700',\n              marginLeft: '6%',\n              marginRight: '6%',\n              minHeight: 48,\n              textAlign: 'center',\n              width: '100%',\n            },\n            dimensions.width\n          )}\n          title={'Permitir Cámara'}\n        />\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(PermisoDeCamaraScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, Touchable, withTheme } from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst PermisoDeContactosScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        { justifyContent: 'space-between' },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} left={{}} />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          source={Images.PermissionsContacts}\n          style={StyleSheet.applyWidth(\n            { height: 150, marginBottom: 16, overflow: 'hidden', width: 150 },\n            dimensions.width\n          )}\n        />\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 28,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {'Permitir Contactos\\n'}\n        </Text>\n\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontSize: 16,\n              lineHeight: 28,\n              marginLeft: '3%',\n              marginRight: '3%',\n              textAlign: 'center',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {\n            'Conecte su libreta de direcciones para que sea más fácil encontrar a las personas que conoce\\n'\n          }\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            marginBottom: '10%',\n            marginLeft: '6%',\n            marginRight: '6%',\n          },\n          dimensions.width\n        )}\n      >\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Main');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            { marginBottom: '8%' },\n            dimensions.width\n          )}\n        >\n          <Text\n            allowFontScaling={true}\n            ellipsizeMode={'tail'}\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.strong,\n                opacity: 0.51,\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                typography: theme.typography.button,\n              },\n              dimensions.width\n            )}\n            textBreakStrategy={'highQuality'}\n          >\n            {'Saltar'}\n          </Text>\n        </Touchable>\n        {/* Button Solid */}\n        <Button\n          onPress={() => {\n            try {\n              setGlobalVariableValue({\n                key: 'perms_got',\n                value: 1,\n              });\n              navigation.navigate('Main', { screen: 'InicioScreen' });\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              color: theme.colors.background,\n              fontFamily: 'System',\n              fontWeight: '700',\n              marginLeft: '6%',\n              marginRight: '6%',\n              minHeight: 48,\n              textAlign: 'center',\n              width: '100%',\n            },\n            dimensions.width\n          )}\n          title={'Permitir Contactos'}\n        />\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(PermisoDeContactosScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, Touchable, withTheme } from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst PermisoDeMicrofonoScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          backgroundColor: theme.colors.background,\n          justifyContent: 'space-between',\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} left={{}} />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          source={Images.PermissionsMicrophone}\n          style={StyleSheet.applyWidth(\n            { height: 150, marginBottom: 16, overflow: 'hidden', width: 150 },\n            dimensions.width\n          )}\n        />\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 28,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {'Permitir Micrófono\\n'}\n        </Text>\n\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontSize: 16,\n              lineHeight: 28,\n              marginLeft: '3%',\n              marginRight: '3%',\n              textAlign: 'center',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {\n            'Para agregar audio a sus grabaciones, necesitamos acceder a su micrófono\\n'\n          }\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            marginBottom: '10%',\n            marginLeft: '6%',\n            marginRight: '6%',\n          },\n          dimensions.width\n        )}\n      >\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Auth');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            { marginBottom: '8%' },\n            dimensions.width\n          )}\n        >\n          <Text\n            allowFontScaling={true}\n            ellipsizeMode={'tail'}\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.strong,\n                opacity: 0.51,\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                typography: theme.typography.button,\n              },\n              dimensions.width\n            )}\n            textBreakStrategy={'highQuality'}\n          >\n            {'Saltar'}\n          </Text>\n        </Touchable>\n        {/* Button Solid */}\n        <Button\n          onPress={() => {\n            try {\n              setGlobalVariableValue({\n                key: 'perms_got',\n                value: 1,\n              });\n              navigation.navigate('Permissions');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              color: theme.colors.background,\n              fontFamily: 'System',\n              fontWeight: '700',\n              marginLeft: '6%',\n              marginRight: '6%',\n              minHeight: 48,\n              textAlign: 'center',\n              width: '100%',\n            },\n            dimensions.width\n          )}\n          title={'Permitir Micrófono'}\n        />\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(PermisoDeMicrofonoScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, Touchable, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst PermisoDeNotificacionesScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const askPermission = async () => {\n    const { status, ios } =\n      await CustomCode.ExpoNotifications.requestPermissionsAsync({\n        ios: {\n          allowAlert: true,\n          allowBadge: true,\n          allowSound: true,\n          allowAnnouncements: true,\n        },\n      });\n\n    console.log(`status: ${status}, ios: ${ios}`);\n\n    if (CustomCode.Platform === 'ios')\n      return (\n        ios.status ==\n        CustomCode.ExpoNotifications.IosAuthorizationStatus.AUTHORIZED\n      );\n    else return status === 'granted';\n  };\n\n  const showVars = () => {\n    // console.log(`expo manifest.id: ${CustomCode.ExpoConstants}`);\n    // console.log(`ExpoConstants: ${JSON.stringify(CustomCode.ExpoConstants)}`);\n    // console.log(`expo manifest.id: ${JSON.stringify(CustomCode.ExpoConstants.manifest)}`);\n    // console.log(`expo currentFullName: ${CustomCode.ExpoConstants.ExpoClientConfig.currentFullName}`);\n  };\n\n  const getNotificationToken = async () => {\n    const expoPushToken =\n      await CustomCode.ExpoNotifications.getExpoPushTokenAsync({\n        experienceId: '@digicard/dss',\n      });\n\n    console.log(`expoPushToken: $expoPushToken}`);\n\n    return expoPushToken;\n  };\n\n  const getPermission = async () => {\n    const isDevice =\n      CustomCode.Device.isDevice && CustomCode.Platform.OS !== 'web'; // && CustomCode.ExpoConstants;\n\n    if (isDevice) {\n      const settings = await CustomCode.ExpoNotifications.getPermissionsAsync();\n\n      console.log(`status: ${settings.status}, ios: ${settings?.ios}`);\n\n      return (\n        settings.granted ||\n        settings.ios?.status ===\n          CustomCode.ExpoNotifications.IosAuthorizationStatus.AUTHORIZED\n      );\n    } else return true;\n  };\n  const dcSSEmployeeTokenPATCH = DcSSApi.useEmployeeTokenPATCH();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        showVars();\n        const hasPermission = await getPermission();\n        if (!hasPermission) {\n          return;\n        }\n        navigation.navigate('Permissions', { screen: 'PermisoDeCamaraScreen' });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          backgroundColor: theme.colors.background,\n          justifyContent: 'space-between',\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} left={{}} />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          source={Images.PermissionsNotification}\n          style={StyleSheet.applyWidth(\n            { height: 150, marginBottom: 16, overflow: 'hidden', width: 150 },\n            dimensions.width\n          )}\n        />\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 28,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {'Permitir Notificaciones'}\n        </Text>\n\n        <Text\n          allowFontScaling={true}\n          ellipsizeMode={'tail'}\n          style={StyleSheet.applyWidth(\n            {\n              alignSelf: 'center',\n              color: theme.colors.strong,\n              fontSize: 16,\n              lineHeight: 28,\n              marginLeft: '3%',\n              marginRight: '3%',\n              textAlign: 'center',\n            },\n            dimensions.width\n          )}\n          textBreakStrategy={'highQuality'}\n        >\n          {\n            'Manténgase informado de los últimos cambios y novedades en su empresa'\n          }\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            marginBottom: '10%',\n            marginLeft: '6%',\n            marginRight: '6%',\n          },\n          dimensions.width\n        )}\n      >\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Permissions', {\n                screen: 'PermisoDeCamaraScreen',\n              });\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            { marginBottom: '8%' },\n            dimensions.width\n          )}\n        >\n          <Text\n            allowFontScaling={true}\n            ellipsizeMode={'tail'}\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.strong,\n                opacity: 0.51,\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                typography: theme.typography.button,\n              },\n              dimensions.width\n            )}\n            textBreakStrategy={'highQuality'}\n          >\n            {'Saltar'}\n          </Text>\n        </Touchable>\n        {/* Button Solid */}\n        <Button\n          onPress={() => {\n            const handler = async () => {\n              try {\n                setGlobalVariableValue({\n                  key: 'perms_got',\n                  value: 1,\n                });\n                const granted = await askPermission();\n                if (!granted) {\n                  return;\n                }\n                const notificationToken = await getNotificationToken();\n                (\n                  await dcSSEmployeeTokenPATCH.mutateAsync({\n                    emp_id: Constants['my_emp_id'],\n                    emp_token: notificationToken,\n                  })\n                )?.json;\n                navigation.navigate('Permissions', {\n                  screen: 'PermisoDeCamaraScreen',\n                });\n              } catch (err) {\n                console.error(err);\n              }\n            };\n            handler();\n          }}\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              color: theme.colors.background,\n              fontFamily: 'System',\n              fontWeight: '700',\n              marginLeft: '6%',\n              marginRight: '6%',\n              minHeight: 48,\n              textAlign: 'center',\n              width: '100%',\n            },\n            dimensions.width\n          )}\n          title={'Permitir Notificaciones'}\n        />\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(PermisoDeNotificacionesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst PreviewCambioTurnoScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const InitializeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n  const [currentDate, setCurrentDate] = React.useState(\n    InitializeCurrentDate(\"''\")\n  );\n  const [screenName, setScreenName] = React.useState('Cambio de Turno');\n  const [workschedule, setWorkschedule] = React.useState('');\n  const Date2UtcString = aDate => {\n    if (aDate) {\n      if (variables['logging'])\n        console.log(\n          `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n        );\n\n      aDate.setHours(0);\n\n      const UTCString = aDate.toISOString().split('T')[0];\n      if (variables['logging']) console.log(`UTCString: ${UTCString}`);\n      return UTCString;\n    }\n    return '';\n  };\n\n  const log = value => {\n    if (true || variables['logging'])\n      console.log(`log value: ${JSON.stringify(value)}`);\n    return value;\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        const timesheetRslt = (\n          await DcSSApi.timesheetGET(Constants, {\n            date_from: Date2UtcString(currentDate),\n            date_to: Date2UtcString(currentDate),\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        const workschedule =\n          timesheetRslt?.[0].timesheet.tim[0].tim_workschedule;\n        setWorkschedule(workschedule);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          { alignItems: 'center' },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          source={Images.Image20210630121543}\n          style={StyleSheet.applyWidth(\n            { height: 250, opacity: 0.75, width: '100%' },\n            dimensions.width\n          )}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          { alignContent: 'center', height: '20%' },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.secondary,\n              height: 45,\n              justifyContent: 'center',\n              marginBottom: 5,\n              marginTop: 5,\n            },\n            dimensions.width\n          )}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 18,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'Turno Actual'}\n          </Text>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              alignSelf: 'center',\n              backgroundColor: theme.colors.verylight,\n              height: '35%',\n              justifyContent: 'center',\n              marginTop: 10,\n              width: '95%',\n            },\n            dimensions.width\n          )}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.primary,\n                fontFamily: 'System',\n                fontSize: 20,\n                fontWeight: '700',\n                textAlign: 'center',\n              },\n              dimensions.width\n            )}\n          >\n            {workschedule}\n          </Text>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            justifyContent: 'center',\n            marginBottom: 15,\n            marginLeft: '3%',\n            marginRight: '3%',\n            marginTop: 15,\n          },\n          dimensions.width\n        )}\n      >\n        {/* Button Solid */}\n        <>\n          {!!null ? null : (\n            <Button\n              icon={'MaterialIcons/published-with-changes'}\n              onPress={() => {\n                try {\n                  navigation.navigate('SolicitudCambioDeTurnoScreen', {\n                    readOnly: false,\n                  });\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 10,\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontWeight: '700',\n                  marginLeft: '6%',\n                  marginRight: '6%',\n                  minHeight: 48,\n                  textAlign: 'center',\n                },\n                dimensions.width\n              )}\n              title={'Cambiar Turno'}\n            />\n          )}\n        </>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(PreviewCambioTurnoScreen);\n","import React from 'react';\n\nconst Undef = () => {\n  return undefined;\n};\n\nexport default Undef;\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport Undef from '../global-functions/Undef';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  DatePicker,\n  Picker,\n  ScreenContainer,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst SolicitudCambioDeTurnoScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateFromError, setDateFromError] = React.useState('');\n  const [datePickerValue, setDatePickerValue] = React.useState(new Date());\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [dateToError, setDateToError] = React.useState('');\n  const [ioAction, setIoAction] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [reason, setReason] = React.useState(Undef());\n  const [reasonError, setReasonError] = React.useState('');\n  const [reasonsList, setReasonsList] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Cambio de Turno');\n  const [worksch, setWorksch] = React.useState(Undef());\n  const [workschError, setWorkschError] = React.useState('');\n  const [workschedulesList, setWorkschedulesList] = React.useState([]);\n  const initScreenVars = () => {\n    setDateFrom(undefined);\n    setDateTo(undefined);\n    setDateFromError(undefined);\n    setDateToError(undefined);\n    setWorksch(undefined);\n    setReason(undefined);\n  };\n\n  // Convierte un Date a un string YYYY-MM-DD\n  const Date2IsoDateString = aDate => {\n    console.log(`Date2IsoDateString(${aDate})`);\n\n    var offset = new Date().getTimezoneOffset() * 60 * 1000;\n\n    const rslt = new Date(aDate - offset).toISOString().split('T')[0];\n\n    console.log(`Date2IsoDateString(${aDate}): ${rslt}`);\n\n    return rslt;\n  };\n\n  const reasons2PickerOptions = reasons => {\n    return reasons\n      .filter(r => r.rea_type === 'ctu')\n      .map(r => {\n        return { label: r.rea_name, value: r.rea_id };\n      });\n  };\n\n  const workschedulesToPickerOptions = wscheds => {\n    return wscheds.map(w => {\n      return { label: w.wor_name, value: w.wor_id };\n    });\n  };\n\n  // Extrae el Id de un array de picker options\n  const extractId = opt => {\n    console.log(`extractId(${opt})`);\n\n    return opt.value;\n  };\n\n  const logVar = aVar => {\n    // if(variables['logging'])\n    console.log(`log value: ${JSON.stringify(aVar)}`);\n    return aVar;\n  };\n\n  const now = () => {\n    return new Date().toISOString();\n  };\n\n  const Date2UTCString = aDate => {\n    console.log(\n      `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n    );\n\n    aDate.setHours(0);\n\n    const UTCString = aDate.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    console.log(`UTCString: ${UTCString}`);\n    return UTCString;\n  };\n\n  const validate = () => {\n    setDateFromError(undefined);\n    setDateToError(undefined);\n\n    // console.log(`validate: dateFrom: ${dateFrom}, dateTo: ${dateTo}`);\n\n    const minDate = new Date();\n    minDate.setDate(1 + minDate.getDate());\n    minDate.setHours(0, 0, 0, 0);\n\n    if (dateFrom >= minDate)\n      if (dateTo >= dateFrom) return false;\n      else setDateToError(\"'Hasta' debe ser posterior a 'Desde'\");\n    else setDateFromError('No puede comenzar antes de mañana');\n\n    return true;\n  };\n\n  const delayNav = (delay, nav, screen) => {\n    setTimeout(function () {\n      if (nav === 'back') props.navigation.goBack();\n      else props.navigation.navigate(nav, { screen: screen });\n    }, delay);\n  };\n\n  const postResultToast = fetchResult => {\n    return CustomCode.PostResultToast(\n      fetchResult,\n      screenName,\n      'back',\n      '',\n      2000,\n      props\n    );\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const dcSSRequestCtuPOST = DcSSApi.useRequestCtuPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        initScreenVars();\n        const workschedulesResponse = (\n          await DcSSApi.workschedulesByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setWorkschedulesList(\n          workschedulesToPickerOptions(workschedulesResponse)\n        );\n        const reasonsResponse = (\n          await DcSSApi.reasonsByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setReasonsList(reasons2PickerOptions(reasonsResponse));\n        setWorksch(props.route?.params?.workschedule ?? '');\n        setReason(props.route?.params?.reason ?? '');\n        setDateFrom(props.route?.params?.dateFrom ?? false);\n        setDateTo(props.route?.params?.dateTo ?? false);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={ioAction}\n      />\n\n      <KeyboardAwareScrollView\n        style={StyleSheet.applyWidth({ height: 200 }, dimensions.width)}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            { alignItems: 'center' },\n            dimensions.width\n          )}\n        >\n          <Image\n            resizeMode={'contain'}\n            source={Images.Image20210630121543}\n            style={StyleSheet.applyWidth(\n              { height: 220, opacity: 0.75, width: '100%' },\n              dimensions.width\n            )}\n          />\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            { borderRadius: 12, marginLeft: '3%', marginRight: '3%' },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                backgroundColor: theme.colors.secondary,\n                height: 45,\n                justifyContent: 'center',\n                marginBottom: 5,\n                marginTop: 5,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                },\n                dimensions.width\n              )}\n            >\n              {'Turno Solicitado'}\n            </Text>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                marginBottom: 5,\n                marginLeft: '3%',\n                marginRight: '3%',\n                marginTop: 5,\n              },\n              dimensions.width\n            )}\n          >\n            <View>\n              {/* pkrTurno */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <Picker\n                    label={'Turno'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrTurnoValue => {\n                      try {\n                        setWorksch(newPkrTurnoValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={workschedulesList}\n                    placeholder={'Nuevo turno'}\n                    type={'solid'}\n                    value={worksch}\n                  />\n                )}\n              </>\n              {/* pkrTurnoRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <Picker\n                    disabled={true}\n                    label={'Turno'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrTurnoROValue => {\n                      try {\n                        setWorksch(newPkrTurnoROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={workschedulesList}\n                    placeholder={'Nuevo turno'}\n                    type={'solid'}\n                    value={worksch}\n                  />\n                )}\n              </>\n              <>\n                {!workschError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {workschError}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* pkrMotivo */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <Picker\n                    label={'Motivo'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrMotivoValue => {\n                      try {\n                        setReason(newPkrMotivoValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={reasonsList}\n                    placeholder={'Motivo del cambio'}\n                    type={'solid'}\n                    value={reason}\n                  />\n                )}\n              </>\n              {/* pkrMotivoRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <Picker\n                    disabled={true}\n                    label={'Motivo'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrMotivoROValue => {\n                      try {\n                        setReason(newPkrMotivoROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={reasonsList}\n                    placeholder={'Motivo del cambio'}\n                    type={'solid'}\n                    value={reason}\n                  />\n                )}\n              </>\n              <>\n                {!reasonError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {reasonError}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* dpFrom */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <DatePicker\n                    date={dateFrom}\n                    disabled={false}\n                    label={'Desde'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpFromValue => {\n                      try {\n                        setDateFrom(newDpFromValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              {/* dpFromRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <DatePicker\n                    date={dateFrom}\n                    disabled={true}\n                    label={'Desde'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpFromROValue => {\n                      try {\n                        setDateFrom(newDpFromROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              <>\n                {!dateFromError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {dateFromError}\n                  </Text>\n                )}\n              </>\n              <DatePicker\n                date={datePickerValue}\n                label={'Date'}\n                leftIconMode={'inset'}\n                mode={'date'}\n                onDateChange={newDatePickerValue => {\n                  try {\n                    setDatePickerValue(newDatePickerValue);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                type={'solid'}\n              />\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* dpTo */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <DatePicker\n                    label={'Hasta'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpToValue => {\n                      try {\n                        setDateTo(newDpToValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              {/* dpToRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <DatePicker\n                    date={dateTo}\n                    disabled={true}\n                    label={'Hasta'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpToROValue => {\n                      try {\n                        setDateTo(newDpToROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              <>\n                {!dateToError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {dateToError}\n                  </Text>\n                )}\n              </>\n            </View>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              justifyContent: 'center',\n              marginBottom: 15,\n              marginLeft: '3%',\n              marginRight: '3%',\n              marginTop: 15,\n            },\n            dimensions.width\n          )}\n        >\n          {/* Button Solid */}\n          <>\n            {!!(props.route?.params?.readOnly ?? false) ? null : (\n              <Button\n                onPress={() => {\n                  const handler = async () => {\n                    try {\n                      const validateError = validate();\n                      if (validateError) {\n                        return;\n                      }\n                      setIoAction('saving');\n                      setLoading(true);\n                      const fetchResult = (\n                        await dcSSRequestCtuPOST.mutateAsync({\n                          emp_id: Constants['my_emp_id'],\n                          req_ctu_from: Date2IsoDateString(dateFrom),\n                          req_ctu_rea_id: parseInt(reason, 10),\n                          req_ctu_to: Date2IsoDateString(dateTo),\n                          req_ctu_wor_id: parseInt(worksch, 10),\n                          req_datetime: now(),\n                        })\n                      )?.json;\n                      setLoading(false);\n                      const isError = postResultToast(fetchResult);\n                      if (isError) {\n                        return;\n                      }\n                      delayNav(2000, 'back', '');\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  };\n                  handler();\n                }}\n                style={StyleSheet.applyWidth(\n                  {\n                    backgroundColor: theme.colors.primary,\n                    borderRadius: 10,\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontWeight: '700',\n                    marginLeft: '6%',\n                    marginRight: '6%',\n                    minHeight: 48,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n                title={'Solicitar'}\n              />\n            )}\n          </>\n        </View>\n      </KeyboardAwareScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SolicitudCambioDeTurnoScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport Undef from '../global-functions/Undef';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  Icon,\n  Picker,\n  ScreenContainer,\n  TextInput,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst SolicitudEPPScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [article, setArticle] = React.useState(Undef());\n  const [articleDescr, setArticleDescr] = React.useState('');\n  const [color, setColor] = React.useState('');\n  const [elementsList, setElementsList] = React.useState([]);\n  const [ioAction, setIoAction] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [numberInputValue, setNumberInputValue] = React.useState('');\n  const [observ, setObserv] = React.useState('');\n  const [quantity, setQuantity] = React.useState(1);\n  const [screenName, setScreenName] = React.useState(\n    'Elemento Proteccion Personal'\n  );\n  const [size, setSize] = React.useState('');\n  const [textInputValue, setTextInputValue] = React.useState('');\n  const getArticleDesc = art => {\n    // console.log(`art: ${art}, elementsList: ${JSON.stringify(elementsList)}`);\n\n    const aArt = elementsList.find(a => a.value == art);\n    // console.log(`aArt: ${JSON.stringify(aArt)}`);\n\n    return aArt.desc;\n  };\n\n  const fillArticleDescr = (elementsList, art) => {\n    // console.log(`art: ${art}, elementsList: ${JSON.stringify(elementsList)}`);\n\n    const aArt = elementsList.find(a => a.value == art);\n    // console.log(`aArt: ${JSON.stringify(aArt)}`);\n\n    setArticleDescr(aArt ? aArt.desc : '');\n  };\n\n  // Extrae el Id de un array de picker options\n  const extractId = opt => {\n    console.log(`extractId(${opt})`);\n\n    return opt.value;\n  };\n\n  const now = () => {\n    return new Date().toISOString();\n  };\n\n  // Convierte un Date a un string YYYY-MM-DD\n  const Date2IsoDateString = aDate => {\n    console.log(`Date2IsoDateString(${aDate})`);\n\n    var offset = new Date().getTimezoneOffset() * 60 * 1000;\n\n    const rslt = new Date(aDate - offset).toISOString().split('T')[0];\n\n    console.log(`Date2IsoDateString(${aDate}): ${rslt}`);\n\n    return rslt;\n  };\n\n  const reasons2PickerOptions = reasons => {\n    return reasons\n      .filter(r => r.rea_type === 'pya')\n      .map(r => {\n        return { label: r.rea_name, value: r.rea_id };\n      });\n  };\n\n  const logVar = aVar => {\n    // if(variables['logging'])\n    console.log(`log value: ${JSON.stringify(aVar)}`);\n    return aVar;\n  };\n\n  const Date2UTCString = aDate => {\n    console.log(\n      `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n    );\n\n    aDate.setHours(0);\n\n    const UTCString = aDate.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    console.log(`UTCString: ${UTCString}`);\n    return UTCString;\n  };\n\n  const delayNav = (delay, nav, screen) => {\n    setTimeout(function () {\n      if (nav === 'back') props.navigation.goBack();\n      else props.navigation.navigate(nav, { screen: screen });\n    }, delay);\n  };\n\n  const elementsPickerOptions = elements => {\n    // console.log(`concepts: ${JSON.stringify(concepts)}`);\n\n    // const filtered = concepts.filter((c) => c.con_type === 'di');\n    // console.log(`filtered: ${JSON.stringify(filtered)}`);\n\n    // const mapped = filtered.map((c) => { return { label: c.con_name, value: c.con_id }; });\n    // console.log(`mapped: ${JSON.stringify(mapped)}`);\n\n    // return mapped;\n\n    return (\n      elements\n        // .filter((e) => c.con_type === 'di')\n        .map(e => {\n          return {\n            label: e.art_name,\n            value: e.art_id,\n            desc: e.art_description,\n          };\n        })\n    );\n  };\n\n  const postResultToast = fetchResult => {\n    return CustomCode.PostResultToast(\n      fetchResult,\n      screenName,\n      'back',\n      '',\n      2000,\n      props\n    );\n  };\n\n  const validate = () => {\n    // setDateFromError(undefined);\n    // setDateToError(undefined);\n\n    // console.log(`validate: dateFrom: ${dateFrom}, dateTo: ${dateTo}`);\n\n    // const minDate = new Date();\n    // minDate.setDate(1 + minDate.getDate());\n    // minDate.setHours(0,0,0,0);\n\n    // if(dateFrom >= minDate)\n    //     if(dateTo >= dateFrom)\n    //         return false;\n    //     else\n    //         setDateToError(\"'Hasta' debe ser posterior a 'Desde'\");\n    // else\n    //     setDateFromError('No puede comenzar antes de mañana');\n\n    // return true;\n    return false;\n  };\n\n  const initScreenVars = () => {\n    // console.log(`initScreenVars`);\n    // setArticle(undefined);\n    // setQuantity(1);\n    // setSize(undefined);\n    // setColor(undefined);\n    // setObserv(undefined);\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const dcSSRequestEppPOST = DcSSApi.useRequestEppPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        initScreenVars();\n        const elementsResponse = (\n          await DcSSApi.eppArticlesByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n\n        const valueXRCZFfzL = elementsPickerOptions(elementsResponse);\n        setElementsList(valueXRCZFfzL);\n        const a_elementsList = valueXRCZFfzL;\n        setArticle(props.route?.params?.article ?? undefined);\n        setQuantity(props.route?.params?.quantity ?? '');\n        setSize(props.route?.params?.size ?? '');\n        setColor(props.route?.params?.color ?? '');\n        setObserv(props.route?.params?.observ ?? '');\n        fillArticleDescr(a_elementsList, props.route?.params?.article ?? '');\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={ioAction}\n      />\n\n      <KeyboardAwareScrollView\n        style={StyleSheet.applyWidth({ height: 200 }, dimensions.width)}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            { borderRadius: 12, marginLeft: '3%', marginRight: '3%' },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                marginBottom: 5,\n                marginLeft: '3%',\n                marginRight: '3%',\n                marginTop: 40,\n              },\n              dimensions.width\n            )}\n          >\n            <View>\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center', flexDirection: 'row' },\n                  dimensions.width\n                )}\n              >\n                <Icon\n                  color={theme.colors.medium}\n                  name={'Ionicons/color-palette-outline'}\n                  size={32}\n                  style={StyleSheet.applyWidth(\n                    { marginLeft: 5, marginRight: 5 },\n                    dimensions.width\n                  )}\n                />\n                <View\n                  style={StyleSheet.applyWidth(\n                    { alignContent: 'stretch', width: '87%' },\n                    dimensions.width\n                  )}\n                >\n                  {/* pkrElement */}\n                  <>\n                    {props.route?.params?.readOnly ?? false ? null : (\n                      <Picker\n                        label={'Elemento'}\n                        leftIconMode={'inset'}\n                        onValueChange={newPkrElementValue => {\n                          try {\n                            setArticle(newPkrElementValue);\n                            setArticleDescr(getArticleDesc(newPkrElementValue));\n                          } catch (err) {\n                            console.error(err);\n                          }\n                        }}\n                        options={elementsList}\n                        placeholder={'Elemento de Protección Personal '}\n                        style={StyleSheet.applyWidth(\n                          {\n                            borderColor: theme.colors['Divider'],\n                            color: theme.colors['Light'],\n                          },\n                          dimensions.width\n                        )}\n                        type={'solid'}\n                        value={article}\n                      />\n                    )}\n                  </>\n                  {/* pkrElementRO */}\n                  <>\n                    {!(props.route?.params?.readOnly ?? false) ? null : (\n                      <Picker\n                        disabled={true}\n                        label={'Elemento'}\n                        leftIconMode={'inset'}\n                        onValueChange={newPkrElementROValue => {\n                          try {\n                            setArticle(newPkrElementROValue);\n                            setArticleDescr(\n                              getArticleDesc(newPkrElementROValue)\n                            );\n                          } catch (err) {\n                            console.error(err);\n                          }\n                        }}\n                        options={elementsList}\n                        style={StyleSheet.applyWidth(\n                          { color: theme.colors['Light'] },\n                          dimensions.width\n                        )}\n                        type={'solid'}\n                        value={article}\n                      />\n                    )}\n                  </>\n                </View>\n              </View>\n\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.medium,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {articleDescr}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center', flexDirection: 'row' },\n                  dimensions.width\n                )}\n              >\n                <Icon\n                  color={theme.colors.medium}\n                  name={'MaterialCommunityIcons/clipboard-list-outline'}\n                  size={32}\n                  style={StyleSheet.applyWidth(\n                    { marginLeft: 5, marginRight: 5 },\n                    dimensions.width\n                  )}\n                />\n                {/* tiQuantity */}\n                <>\n                  {props.route?.params?.readOnly ?? false ? null : (\n                    <TextInput\n                      onChangeText={newTiQuantityValue => {\n                        try {\n                          setQuantity(newTiQuantityValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Cantidad'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={quantity.toString()}\n                    />\n                  )}\n                </>\n                {/* tiQuantityRO */}\n                <>\n                  {!(props.route?.params?.readOnly ?? false) ? null : (\n                    <TextInput\n                      onChangeText={newTiQuantityROValue => {\n                        try {\n                          setQuantity(newTiQuantityROValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Cantidad'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={quantity.toString()}\n                    />\n                  )}\n                </>\n              </View>\n\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.error,\n                    fontSize: 10,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {null}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center', flexDirection: 'row' },\n                  dimensions.width\n                )}\n              >\n                <Icon\n                  color={theme.colors.medium}\n                  name={'Ionicons/ios-shirt-outline'}\n                  size={32}\n                  style={StyleSheet.applyWidth(\n                    { marginLeft: 5, marginRight: 5 },\n                    dimensions.width\n                  )}\n                />\n                {/* tiSize */}\n                <>\n                  {props.route?.params?.readOnly ?? false ? null : (\n                    <TextInput\n                      onChangeText={newTiSizeValue => {\n                        try {\n                          setSize(newTiSizeValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Talle'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={size}\n                    />\n                  )}\n                </>\n                {/* tiSizeRO */}\n                <>\n                  {!(props.route?.params?.readOnly ?? false) ? null : (\n                    <TextInput\n                      onChangeText={newTiSizeROValue => {\n                        try {\n                          setSize(newTiSizeROValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Color'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={size}\n                    />\n                  )}\n                </>\n              </View>\n\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.error,\n                    fontSize: 10,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {null}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center', flexDirection: 'row' },\n                  dimensions.width\n                )}\n              >\n                <Icon\n                  color={theme.colors.medium}\n                  name={'Ionicons/color-palette-outline'}\n                  size={32}\n                  style={StyleSheet.applyWidth(\n                    { marginLeft: 5, marginRight: 5 },\n                    dimensions.width\n                  )}\n                />\n                {/* tiColor */}\n                <>\n                  {props.route?.params?.readOnly ?? false ? null : (\n                    <TextInput\n                      onChangeText={newTiColorValue => {\n                        try {\n                          setColor(newTiColorValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Color'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={color}\n                    />\n                  )}\n                </>\n                {/* tiColorRO */}\n                <>\n                  {!(props.route?.params?.readOnly ?? false) ? null : (\n                    <TextInput\n                      onChangeText={newTiColorROValue => {\n                        try {\n                          setColor(newTiColorROValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Color'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={color}\n                    />\n                  )}\n                </>\n              </View>\n\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.error,\n                    fontSize: 10,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {null}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  { alignItems: 'center', flexDirection: 'row' },\n                  dimensions.width\n                )}\n              >\n                <Icon\n                  color={theme.colors.medium}\n                  name={'Entypo/text'}\n                  size={32}\n                  style={StyleSheet.applyWidth(\n                    { marginLeft: 5, marginRight: 5 },\n                    dimensions.width\n                  )}\n                />\n                {/* tiObserv */}\n                <>\n                  {props.route?.params?.readOnly ?? false ? null : (\n                    <TextInput\n                      onChangeText={newTiObservValue => {\n                        try {\n                          setObserv(newTiObservValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Observaciones'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={observ}\n                    />\n                  )}\n                </>\n                {/* tiObservRO */}\n                <>\n                  {!(props.route?.params?.readOnly ?? false) ? null : (\n                    <TextInput\n                      onChangeText={newTiObservROValue => {\n                        try {\n                          setObserv(newTiObservROValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={'Color'}\n                      placeholderTextColor={theme.colors.light}\n                      style={StyleSheet.applyWidth(\n                        {\n                          borderBottomWidth: 1,\n                          borderColor: theme.colors.divider,\n                          borderLeftWidth: 1,\n                          borderRadius: 8,\n                          borderRightWidth: 1,\n                          borderTopWidth: 1,\n                          height: 55,\n                          paddingBottom: 8,\n                          paddingLeft: 8,\n                          paddingRight: 8,\n                          paddingTop: 8,\n                          width: '100%',\n                        },\n                        dimensions.width\n                      )}\n                      value={observ}\n                    />\n                  )}\n                </>\n              </View>\n\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.error,\n                    fontSize: 10,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {null}\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              justifyContent: 'center',\n              marginBottom: 15,\n              marginLeft: '3%',\n              marginRight: '3%',\n              marginTop: 15,\n            },\n            dimensions.width\n          )}\n        >\n          {/* Button Solid */}\n          <>\n            {!!(props.route?.params?.readOnly ?? false) ? null : (\n              <Button\n                onPress={() => {\n                  const handler = async () => {\n                    try {\n                      const validateError = validate();\n                      if (validateError) {\n                        return;\n                      }\n                      setIoAction('saving');\n                      setLoading(true);\n                      const fetchResult = (\n                        await dcSSRequestEppPOST.mutateAsync({\n                          emp_id: Constants['my_emp_id'],\n                          req_datetime: now(),\n                          req_epp_art_id: parseInt(article, 10),\n                          req_epp_color: color,\n                          req_epp_observ: observ,\n                          req_epp_quantity: parseInt(quantity, 10),\n                          req_epp_size: size,\n                        })\n                      )?.json;\n                      setLoading(false);\n                      const isError = postResultToast(fetchResult);\n                      if (isError) {\n                        return;\n                      }\n                      delayNav(2000, 'back', '');\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  };\n                  handler();\n                }}\n                style={StyleSheet.applyWidth(\n                  {\n                    backgroundColor: theme.colors.primary,\n                    borderRadius: 10,\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontWeight: '700',\n                    marginLeft: '6%',\n                    marginRight: '6%',\n                    minHeight: 48,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n                title={'Solicitar'}\n              />\n            )}\n          </>\n        </View>\n      </KeyboardAwareScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SolicitudEPPScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport Undef from '../global-functions/Undef';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  DatePicker,\n  Picker,\n  ScreenContainer,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst SolicitudPermisoAusenciaScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [concept, setConcept] = React.useState(Undef());\n  const [conceptsList, setConceptsList] = React.useState([]);\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateFromError, setDateFromError] = React.useState('');\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [dateToError, setDateToError] = React.useState('');\n  const [ioAction, setIoAction] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [reason, setReason] = React.useState(Undef());\n  const [reasonError, setReasonError] = React.useState('');\n  const [reasonsList, setReasonsList] = React.useState([]);\n  const [reqAmount, setReqAmount] = React.useState(-1);\n  const [reqLimit, setReqLimit] = React.useState(-1);\n  const [reqLimitText1, setReqLimitText1] = React.useState('');\n  const [reqLimitText2, setReqLimitText2] = React.useState('');\n  const [reqLimitText3, setReqLimitText3] = React.useState('');\n  const [reqLimitText4, setReqLimitText4] = React.useState('');\n  const [reqPending, setReqPending] = React.useState(-1);\n  const [reqQuotas, setReqQuotas] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Permiso y Ausencia');\n  const now = () => {\n    return new Date().toISOString();\n  };\n\n  // Convierte un Date a un string YYYY-MM-DD\n  const Date2IsoDateString = aDate => {\n    return CustomCode.Date2IsoDateString(aDate);\n  };\n\n  const conceptsToPickerOptions = concepts => {\n    // console.log(`concepts: ${JSON.stringify(concepts)}`);\n\n    // const filtered = concepts.filter((c) => c.con_type === 'di');\n    // console.log(`filtered: ${JSON.stringify(filtered)}`);\n\n    // const mapped = filtered.map((c) => { return { label: c.con_name, value: c.con_id }; });\n    // console.log(`mapped: ${JSON.stringify(mapped)}`);\n\n    // return mapped;\n\n    return concepts\n      .filter(c => c.con_type === 'di')\n      .map(c => {\n        return { label: c.con_name, value: c.con_id };\n      });\n  };\n\n  const reasons2PickerOptions = reasons => {\n    return reasons\n      .filter(r => r.rea_type === 'pya')\n      .map(r => {\n        return { label: r.rea_name, value: r.rea_id };\n      });\n  };\n\n  const validate = () => {\n    setDateFromError(undefined);\n    setDateToError(undefined);\n\n    // console.log(`validate: dateFrom: ${dateFrom}, dateTo: ${dateTo}`);\n\n    const minDate = new Date();\n    minDate.setDate(1 + minDate.getDate());\n    minDate.setHours(0, 0, 0, 0);\n\n    if (dateFrom >= minDate)\n      if (dateTo >= dateFrom) return false;\n      else setDateToError(\"'Hasta' debe ser posterior a 'Desde'\");\n    else setDateFromError('No puede comenzar antes de mañana');\n\n    return true;\n  };\n\n  const initScreenVars = () => {\n    setDateFrom(undefined);\n    setDateTo(undefined);\n    setDateFromError(undefined);\n    setDateToError(undefined);\n    setConcept(undefined);\n    setReason(undefined);\n  };\n\n  const postResultToast = fetchResult => {\n    return CustomCode.PostResultToast(\n      fetchResult,\n      screenName,\n      'back',\n      '',\n      2000,\n      props\n    );\n  };\n\n  const calcReqLimit = conId => {\n    /*\ncon_pending = 0\n\nUd. dispone de 14 días para este concepto\n\n0 < con_pending < con_available:\n\nUd. dispone de 14 días para este concepto de los cuales tiene 7 días pendientes de aprobación, por lo que sólo puede solicitar 7 días adicionales\n\ncon_pending == con_available:\n\nUd. no dispone de saldo para este concepto\n\n\n\n0:{\n\"emp_id\":13\n\"con_id\":37\n\"con_name\":\"Lic Matrimonio\"\n\"con_unit\":\"di\"\n\"con_amount\":7\n\"con_available\":7\n\"con_pending\":0\n}\n*/\n\n    // console.log(`reqQuotas: ${JSON.stringify(reqQuotas, undefined, 2)}`);\n    // conId = 73;\n\n    const vLimit = reqQuotas?.find(r => r.con_id == conId);\n\n    console.log(\n      `calcReqQuota(${conId}) -> ${vLimit}, amount: ${vLimit?.con_amount}, pending: ${vLimit?.con_pending}`\n    );\n\n    if (vLimit == undefined) {\n      setReqLimitText1('');\n      setReqAmount(-1);\n      setReqLimitText2('');\n      setReqPending(-1);\n      setReqLimitText3('');\n      setReqLimit(-1);\n      setReqLimitText4('');\n    }\n\n    if (vLimit.con_pending == 0) {\n      // setReqLimit(vLimit.con_amount);\n      // setReqLimitText(`Ud. dispone de ${vLimit.con_amount} días para este concepto`);\n\n      setReqLimitText1('Ud. dispone de');\n      setReqAmount(-1);\n      setReqLimitText2('');\n      setReqPending(-1);\n      setReqLimitText3('');\n      setReqLimit(vLimit.con_amount);\n      setReqLimitText4('para este concepto');\n    } else if (vLimit.con_pending < vLimit.con_available) {\n      // setReqLimitText(`Ud. dispone de ${vLimit.con_amount} días para este concepto de los cuales ${vLimit.con_pending} están pendientes de aprobación, por lo que sólo puede solicitar ${vLimit.con_amount - vLimit.con_pending} días adicionales`);\n      // setReqLimit(vLimit.con_amount - vLimit.con_pending);\n\n      setReqLimitText1('Ud. dispone de');\n      setReqAmount(vLimit.con_amount);\n      setReqLimitText2('para este concepto, con');\n      setReqPending(vLimit.con_pending);\n      // setReqLimitText3(' están pendientes de aprobación, por lo que sólo puede solicitar ');\n      setReqLimitText3(\n        'pendientes de aprobación, por lo que sólo puede solicitar'\n      );\n      setReqLimit(vLimit.con_amount - vLimit.con_pending);\n      setReqLimitText4('adicionales');\n    } else {\n      // setReqLimit(0);\n      // setReqLimit1Text(`Ud. no dispone de saldo para este concepto`);\n\n      setReqLimitText1(`Ud. no dispone de saldo para este concepto`);\n      setReqAmount(-1);\n      setReqLimitText2('');\n      setReqPending(-1);\n      setReqLimitText3('');\n      setReqLimit(0);\n      setReqLimitText4('');\n    }\n\n    // //                                 1    2    3\n    // setReqLimitText1();             // x    x\n\n    // setReqAmount();                 //      x\n\n    // setReqLimitText2();             //      x\n\n    // setReqPending();                //      x\n\n    // setReqLimitText3();             //      x\n\n    // setReqLimit();                  // x    x\n\n    // setReqLimitText4();             // x    x\n  };\n\n  const exceedsLimit = () => {\n    // console.log(`DateFrom: ${dateFrom}`);\n    // console.log(`DateTo: ${dateTo}`);\n\n    // if(dateFrom !== undefined && dateTo !== undefined) {\n    if (reqLimit < 0) return false;\n\n    const days = 1 + Math.trunc((dateTo - dateFrom) / 86400000);\n    // console.log(`Dias: ${days}`);\n\n    return days > reqLimit;\n    // }\n\n    // return true;\n  };\n\n  const buttonEnabled = () => {\n    // console.log(`concept: ${concept}`);\n\n    return (\n      concept != '' &&\n      reason != '' &&\n      dateFrom !== undefined &&\n      dateTo !== undefined &&\n      !exceedsLimit() &&\n      !props.route?.params?.readOnly\n    );\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const dcSSRequestPyaPOST = DcSSApi.useRequestPyaPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        initScreenVars();\n        const conceptsResponse = (\n          await DcSSApi.conceptsByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setConceptsList(conceptsToPickerOptions(conceptsResponse));\n        const reasonsResponse = (\n          await DcSSApi.reasonsByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setReasonsList(reasons2PickerOptions(reasonsResponse));\n        setDateFrom(props.route?.params?.dateFrom ?? false);\n        setDateTo(props.route?.params?.dateTo ?? false);\n        setConcept(props.route?.params?.concept ?? '');\n        setReason(props.route?.params?.reason ?? '');\n        const aQuota = (\n          await DcSSApi.requestQuotaGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setReqQuotas(aQuota);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={ioAction}\n      />\n\n      <KeyboardAwareScrollView\n        style={StyleSheet.applyWidth({ height: 200 }, dimensions.width)}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            { alignItems: 'center' },\n            dimensions.width\n          )}\n        >\n          <Image\n            resizeMode={'contain'}\n            source={Images.Image20210630121543}\n            style={StyleSheet.applyWidth(\n              { height: 220, opacity: 0.75, width: '100%' },\n              dimensions.width\n            )}\n          />\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            { borderRadius: 12, marginLeft: '3%', marginRight: '3%' },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                backgroundColor: theme.colors.secondary,\n                height: 45,\n                justifyContent: 'center',\n                marginBottom: 5,\n                marginTop: 5,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                },\n                dimensions.width\n              )}\n            >\n              {'Datos de la Solicitud'}\n            </Text>\n          </View>\n          {/* reqLimit */}\n          <>\n            {!(reqLimit >= 0) ? null : (\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    flexDirection: 'row',\n                    flexWrap: 'wrap',\n                    justifyContent: 'center',\n                    marginBottom: 5,\n                    marginLeft: 10,\n                    marginRight: 10,\n                    marginTop: 10,\n                  },\n                  dimensions.width\n                )}\n              >\n                {/* Text 1 */}\n                <>\n                  {!reqLimitText1 ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '400',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {reqLimitText1}\n                    </Text>\n                  )}\n                </>\n                {/* Text Var 1 */}\n                <>\n                  {!(reqAmount > 0) ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '700',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {' '}\n                      {reqAmount}\n                      {' días '}\n                    </Text>\n                  )}\n                </>\n                {/* Text 2 */}\n                <>\n                  {!reqLimitText2 ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '400',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {reqLimitText2}\n                    </Text>\n                  )}\n                </>\n                {/* Text Var 2 */}\n                <>\n                  {!(reqPending > 0) ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '700',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {' '}\n                      {reqPending}\n                      {' días '}\n                    </Text>\n                  )}\n                </>\n                {/* Text 3 */}\n                <>\n                  {!reqLimitText3 ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '400',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {reqLimitText3}\n                    </Text>\n                  )}\n                </>\n                {/* Text Var 3 */}\n                <>\n                  {!(reqLimit > 0) ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '700',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {' '}\n                      {reqLimit}\n                      {' días '}\n                    </Text>\n                  )}\n                </>\n                {/* Text 4 */}\n                <>\n                  {!reqLimitText4 ? null : (\n                    <Text\n                      accessible={true}\n                      allowFontScaling={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['Text'],\n                          {\n                            color: theme.colors['Primary'],\n                            fontFamily: 'System',\n                            fontSize: 12,\n                            fontWeight: '400',\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {reqLimitText4}\n                    </Text>\n                  )}\n                </>\n              </View>\n            )}\n          </>\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                marginBottom: 5,\n                marginLeft: '3%',\n                marginRight: '3%',\n                marginTop: 5,\n              },\n              dimensions.width\n            )}\n          >\n            <View>\n              {/* pkrConcepto */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <Picker\n                    label={'Concepto'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrConceptoValue => {\n                      try {\n                        setConcept(newPkrConceptoValue);\n                        calcReqLimit(newPkrConceptoValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={conceptsList}\n                    placeholder={'Seleccione un concepto'}\n                    placeholderTextColor={theme.colors['Light']}\n                    style={StyleSheet.applyWidth(\n                      {\n                        borderColor: theme.colors['Light'],\n                        color: theme.colors['Light'],\n                        fontSize: 16,\n                      },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                    value={concept}\n                  />\n                )}\n              </>\n              {/* pkrConceptoRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <Picker\n                    disabled={true}\n                    label={'Concepto'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrConceptoROValue => {\n                      try {\n                        setConcept(newPkrConceptoROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={conceptsList}\n                    type={'solid'}\n                    value={concept}\n                  />\n                )}\n              </>\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.error,\n                    fontSize: 10,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {null}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* pkrMotivo */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <Picker\n                    label={'Motivo'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrMotivoValue => {\n                      try {\n                        setReason(newPkrMotivoValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={reasonsList}\n                    placeholder={'Motivo del permiso/ausencia'}\n                    placeholderTextColor={theme.colors['Light']}\n                    style={StyleSheet.applyWidth(\n                      {\n                        borderColor: theme.colors['Light'],\n                        color: theme.colors['Light'],\n                        fontSize: 16,\n                      },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                    value={reason}\n                  />\n                )}\n              </>\n              {/* pkrMotivoRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <Picker\n                    disabled={true}\n                    label={'Motivo'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrMotivoROValue => {\n                      try {\n                        setReason(newPkrMotivoROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={reasonsList}\n                    type={'solid'}\n                    value={reason}\n                  />\n                )}\n              </>\n              <>\n                {!reasonError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {reasonError}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* dpFrom */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <DatePicker\n                    date={dateFrom}\n                    disabled={false}\n                    label={'Desde'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpFromValue => {\n                      try {\n                        setDateFrom(newDpFromValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors['Light'] },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              {/* dpFromRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <DatePicker\n                    date={dateFrom}\n                    disabled={true}\n                    label={'Desde'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpFromROValue => {\n                      try {\n                        setDateFrom(newDpFromROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors['Light'] },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              <>\n                {!dateFromError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {dateFromError}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* dpTo */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <DatePicker\n                    label={'Hasta'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpToValue => {\n                      try {\n                        setDateTo(newDpToValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors['Light'] },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              {/* dpToRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <DatePicker\n                    date={dateTo}\n                    disabled={true}\n                    label={'Hasta'}\n                    leftIconMode={'inset'}\n                    mode={'date'}\n                    onDateChange={newDpToROValue => {\n                      try {\n                        setDateTo(newDpToROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors['Light'] },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              <>\n                {!dateToError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {dateToError}\n                  </Text>\n                )}\n              </>\n            </View>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              justifyContent: 'center',\n              marginBottom: 15,\n              marginLeft: '3%',\n              marginRight: '3%',\n              marginTop: 15,\n            },\n            dimensions.width\n          )}\n        >\n          {/* Button Solid */}\n          <>\n            {!buttonEnabled() ? null : (\n              <Button\n                onPress={() => {\n                  const handler = async () => {\n                    try {\n                      const validateError = validate();\n                      if (validateError) {\n                        return;\n                      }\n                      setIoAction('saving');\n                      setLoading(true);\n                      const fetchResult = (\n                        await dcSSRequestPyaPOST.mutateAsync({\n                          emp_id: Constants['my_emp_id'],\n                          req_datetime: now(),\n                          req_pya_con_id: parseInt(concept, 10),\n                          req_pya_from: Date2IsoDateString(dateFrom),\n                          req_pya_rea_id: parseInt(reason, 10),\n                          req_pya_to: Date2IsoDateString(dateTo),\n                        })\n                      )?.json;\n                      setLoading(false);\n                      const isError = postResultToast(fetchResult);\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  };\n                  handler();\n                }}\n                style={StyleSheet.applyWidth(\n                  {\n                    backgroundColor: theme.colors.primary,\n                    borderRadius: 10,\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontWeight: '700',\n                    marginLeft: '6%',\n                    marginRight: '6%',\n                    minHeight: 48,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n                title={'Solicitar'}\n              />\n            )}\n          </>\n          {/* Button Disabled */}\n          <>\n            {buttonEnabled() ? null : (\n              <Button\n                disabled={true}\n                onPress={() => {\n                  const handler = async () => {\n                    try {\n                      const validateError = validate();\n                      if (validateError) {\n                        return;\n                      }\n                      setIoAction('saving');\n                      setLoading(true);\n                      const fetchResult = (\n                        await dcSSRequestPyaPOST.mutateAsync({\n                          emp_id: Constants['my_emp_id'],\n                          req_datetime: now(),\n                          req_pya_con_id: parseInt(concept, 10),\n                          req_pya_from: Date2IsoDateString(dateFrom),\n                          req_pya_rea_id: parseInt(reason, 10),\n                          req_pya_to: Date2IsoDateString(dateTo),\n                        })\n                      )?.json;\n                      setLoading(false);\n                      const isError = postResultToast(fetchResult);\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  };\n                  handler();\n                }}\n                style={StyleSheet.applyWidth(\n                  {\n                    backgroundColor: theme.colors['Light_Inverse'],\n                    borderRadius: 10,\n                    color: theme.colors['Medium_Inverse'],\n                    fontFamily: 'System',\n                    fontWeight: '700',\n                    marginLeft: '6%',\n                    marginRight: '6%',\n                    minHeight: 48,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n                title={'Solicitar'}\n              />\n            )}\n          </>\n        </View>\n      </KeyboardAwareScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SolicitudPermisoAusenciaScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport Undef from '../global-functions/Undef';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  DatePicker,\n  Picker,\n  ScreenContainer,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst SolicitudRetiroAnticipadoScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [concept, setConcept] = React.useState(Undef());\n  const [conceptsList, setConceptsList] = React.useState([]);\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateFromError, setDateFromError] = React.useState('');\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [dateToError, setDateToError] = React.useState('');\n  const [ioAction, setIoAction] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [pickerValue, setPickerValue] = React.useState('');\n  const [pickerValue2, setPickerValue2] = React.useState('');\n  const [reason, setReason] = React.useState(Undef());\n  const [reasonError, setReasonError] = React.useState('');\n  const [reasonsList, setReasonsList] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Retiro Anticipado');\n  const now = () => {\n    return new Date().toISOString();\n  };\n\n  const reasons2PickerOptions = reasons => {\n    return reasons\n      .filter(r => r.rea_type === 'rys')\n      .map(r => {\n        return { label: r.rea_name, value: r.rea_id };\n      });\n  };\n\n  // Convierte un Date a un string YYYY-MM-DD\n  const Date2IsoDateTimeString = aDate => {\n    return CustomCode.Date2IsoDateTimeString(aDate);\n  };\n\n  const conceptsToPickerOptions = concepts => {\n    // console.log(`concepts: ${JSON.stringify(concepts)}`);\n\n    // const filtered = concepts.filter((c) => c.con_type === 'di');\n    // console.log(`filtered: ${JSON.stringify(filtered)}`);\n\n    // const mapped = filtered.map((c) => { return { label: c.con_name, value: c.con_id }; });\n    // console.log(`mapped: ${JSON.stringify(mapped)}`);\n\n    // return mapped;\n\n    return concepts\n      .filter(c => c.con_type === 'hs')\n      .map(c => {\n        return { label: c.con_name, value: c.con_id };\n      });\n  };\n\n  const validate = () => {\n    setDateFromError(undefined);\n    setDateToError(undefined);\n\n    // console.log(`validate: dateFrom: ${dateFrom}, dateTo: ${dateTo}`);\n\n    const minDate = new Date();\n    // minDate.setDate(1 + minDate.getDate());\n    // minDate.setHours(0,0,0,0);\n\n    if (dateFrom >= minDate)\n      if (dateTo >= dateFrom) return false;\n      else setDateToError(\"'Hasta' debe ser posterior a 'Desde'\");\n    else setDateFromError('No puede comenzar antes de ahora');\n\n    return true;\n  };\n\n  const postResultToast = fetchResult => {\n    return CustomCode.PostResultToast(\n      fetchResult,\n      screenName,\n      'back',\n      '',\n      2000,\n      props\n    );\n  };\n\n  const trimSeconds = aDateTime => {\n    aDateTime.setSeconds(0, 0);\n\n    return aDateTime;\n  };\n\n  const initScreenVars = () => {\n    setDateFrom(undefined);\n    setDateTo(undefined);\n    setDateFromError(undefined);\n    setDateToError(undefined);\n    setConcept(undefined);\n    setReason(undefined);\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const dcSSRequestRysPOST = DcSSApi.useRequestRysPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        initScreenVars();\n        const conceptsResponse = (\n          await DcSSApi.conceptsByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setConceptsList(conceptsToPickerOptions(conceptsResponse));\n        const reasonsResponse = (\n          await DcSSApi.reasonsByEmpGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setReasonsList(reasons2PickerOptions(reasonsResponse));\n        setDateFrom(props.route?.params?.dateFrom ?? false);\n        setDateTo(props.route?.params?.dateTo ?? false);\n        setConcept(props.route?.params?.concept ?? '');\n        setReason(props.route?.params?.reason ?? '');\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={ioAction}\n      />\n\n      <KeyboardAwareScrollView\n        style={StyleSheet.applyWidth({ height: 200 }, dimensions.width)}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            { alignItems: 'center' },\n            dimensions.width\n          )}\n        >\n          <Image\n            resizeMode={'contain'}\n            source={Images.Image20210630121543}\n            style={StyleSheet.applyWidth(\n              { height: 220, opacity: 0.75, width: '100%' },\n              dimensions.width\n            )}\n          />\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            { borderRadius: 12, marginLeft: '3%', marginRight: '3%' },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                backgroundColor: theme.colors.secondary,\n                height: 45,\n                justifyContent: 'center',\n                marginBottom: 5,\n                marginTop: 5,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                },\n                dimensions.width\n              )}\n            >\n              {'Datos de la Solicitud'}\n            </Text>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                marginBottom: 5,\n                marginLeft: '3%',\n                marginRight: '3%',\n                marginTop: 5,\n              },\n              dimensions.width\n            )}\n          >\n            <View>\n              {/* pkrConcepto */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <Picker\n                    disabled={false}\n                    label={'Concepto'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrConceptoValue => {\n                      try {\n                        setConcept(newPkrConceptoValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={conceptsList}\n                    placeholder={'Concepto de liquidación'}\n                    style={StyleSheet.applyWidth(\n                      {\n                        borderColor: theme.colors['Light'],\n                        color: theme.colors['Light'],\n                        fontSize: 16,\n                      },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                    value={concept}\n                  />\n                )}\n              </>\n              {/* pkrConceptoRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <Picker\n                    disabled={true}\n                    label={'Concepto'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrConceptoROValue => {\n                      try {\n                        setConcept(newPkrConceptoROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={conceptsList}\n                    placeholder={'Concepto'}\n                    style={StyleSheet.applyWidth(\n                      { color: theme.colors['Light'], fontSize: 16 },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                    value={concept}\n                  />\n                )}\n              </>\n              <Text\n                numberOfLines={1}\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.error,\n                    fontSize: 10,\n                    marginBottom: 1,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {null}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* pkrMotivo */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <Picker\n                    label={'Motivo'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrMotivoValue => {\n                      try {\n                        setReason(newPkrMotivoValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={reasonsList}\n                    placeholder={'Motivo del retiro/salida'}\n                    style={StyleSheet.applyWidth(\n                      {\n                        borderColor: theme.colors['Light'],\n                        color: theme.colors['Light'],\n                        fontSize: 16,\n                      },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                    value={reason}\n                  />\n                )}\n              </>\n              {/* pkrMotivoRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <Picker\n                    disabled={true}\n                    label={'Motivo'}\n                    leftIconMode={'inset'}\n                    onValueChange={newPkrMotivoROValue => {\n                      try {\n                        setReason(newPkrMotivoROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    options={reasonsList}\n                    placeholder={'Motivo del retiro/salida'}\n                    style={StyleSheet.applyWidth(\n                      { color: theme.colors['Light'], fontSize: 16 },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                    value={reason}\n                  />\n                )}\n              </>\n              <>\n                {!reasonError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {reasonError}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* dpFrom */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <DatePicker\n                    date={dateFrom}\n                    disabled={false}\n                    label={'Desde'}\n                    leftIconMode={'inset'}\n                    minuteInterval={10}\n                    mode={'datetime'}\n                    onDateChange={newDpFromValue => {\n                      try {\n                        setDateFrom(trimSeconds(newDpFromValue));\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors['Light'] },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              {/* dpFromRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <DatePicker\n                    date={dateFrom}\n                    disabled={true}\n                    label={'Desde'}\n                    leftIconMode={'inset'}\n                    mode={'datetime'}\n                    onDateChange={newDpFromROValue => {\n                      try {\n                        setDateFrom(newDpFromROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              <>\n                {!dateFromError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {dateFromError}\n                  </Text>\n                )}\n              </>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth({ marginTop: 5 }, dimensions.width)}\n            >\n              {/* dpTo */}\n              <>\n                {props.route?.params?.readOnly ?? false ? null : (\n                  <DatePicker\n                    label={'Hasta'}\n                    leftIconMode={'inset'}\n                    minuteInterval={10}\n                    mode={'datetime'}\n                    onDateChange={newDpToValue => {\n                      try {\n                        setDateTo(trimSeconds(newDpToValue));\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    style={StyleSheet.applyWidth(\n                      { borderColor: theme.colors['Light'] },\n                      dimensions.width\n                    )}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              {/* dpToRO */}\n              <>\n                {!(props.route?.params?.readOnly ?? false) ? null : (\n                  <DatePicker\n                    date={dateTo}\n                    disabled={true}\n                    label={'Hasta'}\n                    leftIconMode={'inset'}\n                    mode={'datetime'}\n                    onDateChange={newDpToROValue => {\n                      try {\n                        setDateTo(newDpToROValue);\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                    type={'solid'}\n                  />\n                )}\n              </>\n              <>\n                {!dateToError ? null : (\n                  <Text\n                    numberOfLines={1}\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.error,\n                        fontSize: 10,\n                        marginBottom: 1,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {dateToError}\n                  </Text>\n                )}\n              </>\n            </View>\n          </View>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              justifyContent: 'center',\n              marginBottom: 15,\n              marginLeft: '3%',\n              marginRight: '3%',\n              marginTop: 15,\n            },\n            dimensions.width\n          )}\n        >\n          {/* Button Solid */}\n          <>\n            {!!(props.route?.params?.readOnly ?? false) ? null : (\n              <Button\n                onPress={() => {\n                  const handler = async () => {\n                    try {\n                      const validateError = validate();\n                      if (validateError) {\n                        return;\n                      }\n                      setIoAction('saving');\n                      setLoading(true);\n                      const fetchResult = (\n                        await dcSSRequestRysPOST.mutateAsync({\n                          emp_id: Constants['my_emp_id'],\n                          req_datetime: now(),\n                          req_rys_con_id: parseInt(concept, 10),\n                          req_rys_from: Date2IsoDateTimeString(dateFrom),\n                          req_rys_rea_id: parseInt(reason, 10),\n                          req_rys_to: Date2IsoDateTimeString(dateTo),\n                        })\n                      )?.json;\n                      setLoading(false);\n                      const isError = postResultToast(fetchResult);\n                      if (isError) {\n                        return;\n                      }\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  };\n                  handler();\n                }}\n                style={StyleSheet.applyWidth(\n                  {\n                    backgroundColor: theme.colors.primary,\n                    borderRadius: 10,\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontWeight: '700',\n                    marginLeft: '6%',\n                    marginRight: '6%',\n                    minHeight: 48,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n                title={'Solicitar'}\n              />\n            )}\n          </>\n        </View>\n      </KeyboardAwareScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SolicitudRetiroAnticipadoScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, DatePicker, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst SolicitudVacacionesScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateFromError, setDateFromError] = React.useState('');\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [dateToError, setDateToError] = React.useState('');\n  const [ioAction, setIoAction] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [reqQuotas, setReqQuotas] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Vacaciones');\n  const [vacLimit, setVacLimit] = React.useState(-1);\n  const now = () => {\n    return new Date().toISOString();\n  };\n\n  const postResultToast = fetchResult => {\n    return CustomCode.PostResultToast(\n      fetchResult,\n      screenName,\n      'back',\n      '',\n      2000,\n      props\n    );\n  };\n\n  const validate = () => {\n    setDateFromError(undefined);\n    setDateToError(undefined);\n\n    // console.log(`validate: dateFrom: ${dateFrom}, dateTo: ${dateTo}`);\n\n    const minDate = new Date();\n    minDate.setDate(1 + minDate.getDate());\n    minDate.setHours(0, 0, 0, 0);\n\n    if (dateFrom >= minDate)\n      if (dateTo >= dateFrom) return false;\n      else setDateToError(\"'Hasta' debe ser posterior a 'Desde'\");\n    else setDateFromError('No puede comenzar antes de mañana');\n\n    return true;\n  };\n\n  // Convierte un Date a un string YYYY-MM-DD\n  const Date2IsoDateString = aDate => {\n    return CustomCode.Date2IsoDateString(aDate);\n  };\n\n  const calcReqQuota = reqQuotas => {\n    const VACACIONES_CONCEPT_ID = 70;\n\n    const vLimit = reqQuotas.find(r => r.con_id == VACACIONES_CONCEPT_ID);\n\n    console.log(\n      `calcReqQuota(${VACACIONES_CONCEPT_ID}) -> ${vLimit}, amount: ${vLimit?.con_amount}`\n    );\n\n    if (vLimit?.con_amount > 0) setVacLimit(vLimit.con_amount);\n    else setVacLimit(-1);\n  };\n\n  const initScreenVars = () => {\n    // console.log(\"initScreenVars init\");\n    setDateFrom(undefined);\n    setDateTo(undefined);\n    setDateFromError(undefined);\n    setDateToError(undefined);\n    // setConcept(undefined);\n    // setReason(undefined);\n    // console.log(\"initScreenVars end\");\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n\n  // setVariable({ key: 'loading', value: true });\n  const dcSSRequestVacPOST = DcSSApi.useRequestVacPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      try {\n        if (!isFocused) {\n          return;\n        }\n        initScreenVars();\n        setDateFrom(props.route?.params?.dateFrom ?? false);\n        setDateTo(props.route?.params?.dateTo ?? false);\n        const aQuotas = (\n          await DcSSApi.requestQuotaGET(Constants, {\n            emp_id: Constants['my_emp_id'],\n          })\n        )?.json;\n        setReqQuotas(aQuotas);\n        calcReqQuota(aQuotas);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <CustomCode.LoadingOverlay\n        {...props}\n        visible={loading}\n        action={ioAction}\n      />\n\n      <View\n        style={StyleSheet.applyWidth(\n          { alignItems: 'center' },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'contain'}\n          source={Images.UndrawAircraftFbvl}\n          style={StyleSheet.applyWidth(\n            { height: 250, opacity: 0.75, width: '100%' },\n            dimensions.width\n          )}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          { borderRadius: 12, marginLeft: '3%', marginRight: '3%' },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.secondary,\n              height: 45,\n              justifyContent: 'center',\n              marginBottom: 5,\n              marginTop: 5,\n            },\n            dimensions.width\n          )}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 18,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'Período Solicitado'}\n          </Text>\n        </View>\n        {/* vacLimitVw */}\n        <>\n          {!(vacLimit >= 0) ? null : (\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                  marginBottom: 5,\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                accessible={true}\n                allowFontScaling={true}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(GlobalStyles.TextStyles(theme)['Text'], {\n                    color: theme.colors['Primary'],\n                    fontFamily: 'System',\n                    fontWeight: '400',\n                  }),\n                  dimensions.width\n                )}\n              >\n                {'Ud. dispone de'}\n              </Text>\n              {/* Text 2 */}\n              <Text\n                accessible={true}\n                allowFontScaling={true}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(GlobalStyles.TextStyles(theme)['Text'], {\n                    color: theme.colors['Secondary'],\n                    fontFamily: 'System',\n                    fontWeight: '700',\n                  }),\n                  dimensions.width\n                )}\n              >\n                {' '}\n                {vacLimit}\n                {' días '}\n              </Text>\n              {/* Text 3 */}\n              <Text\n                accessible={true}\n                allowFontScaling={true}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(GlobalStyles.TextStyles(theme)['Text'], {\n                    color: theme.colors['Primary'],\n                    fontFamily: 'System',\n                    fontWeight: '400',\n                  }),\n                  dimensions.width\n                )}\n              >\n                {'de vacaciones'}\n              </Text>\n            </View>\n          )}\n        </>\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              marginBottom: 5,\n              marginLeft: '3%',\n              marginRight: '3%',\n              marginTop: 5,\n            },\n            dimensions.width\n          )}\n        >\n          <View>\n            {/* dpFrom */}\n            <>\n              {!!(props.route?.params?.readOnly ?? false) ? null : (\n                <DatePicker\n                  date={dateFrom}\n                  disabled={false}\n                  label={'Desde'}\n                  leftIconMode={'inset'}\n                  mode={'date'}\n                  onDateChange={newDpFromValue => {\n                    try {\n                      setDateFrom(newDpFromValue);\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    { marginTop: 5 },\n                    dimensions.width\n                  )}\n                  type={'solid'}\n                />\n              )}\n            </>\n            {/* dpFromRO */}\n            <>\n              {!(props.route?.params?.readOnly ?? false) ? null : (\n                <DatePicker\n                  date={dateFrom}\n                  disabled={true}\n                  label={'Desde'}\n                  leftIconMode={'inset'}\n                  mode={'date'}\n                  style={StyleSheet.applyWidth(\n                    { marginTop: 5 },\n                    dimensions.width\n                  )}\n                  type={'solid'}\n                />\n              )}\n            </>\n            <>\n              {!dateFromError ? null : (\n                <Text\n                  numberOfLines={1}\n                  style={StyleSheet.applyWidth(\n                    {\n                      color: theme.colors.error,\n                      fontSize: 10,\n                      marginBottom: 1,\n                      textAlign: 'center',\n                    },\n                    dimensions.width\n                  )}\n                >\n                  {dateFromError}\n                </Text>\n              )}\n            </>\n          </View>\n\n          <View>\n            {/* dpTo */}\n            <>\n              {!!(props.route?.params?.readOnly ?? false) ? null : (\n                <DatePicker\n                  label={'Hasta'}\n                  leftIconMode={'inset'}\n                  mode={'date'}\n                  onDateChange={newDpToValue => {\n                    try {\n                      setDateTo(newDpToValue);\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    { marginTop: 5 },\n                    dimensions.width\n                  )}\n                  type={'solid'}\n                />\n              )}\n            </>\n            {/* dpToRO */}\n            <>\n              {!(props.route?.params?.readOnly ?? false) ? null : (\n                <DatePicker\n                  date={dateTo}\n                  disabled={true}\n                  label={'Hasta'}\n                  leftIconMode={'inset'}\n                  mode={'date'}\n                  style={StyleSheet.applyWidth(\n                    { marginTop: 5 },\n                    dimensions.width\n                  )}\n                  type={'solid'}\n                />\n              )}\n            </>\n            <>\n              {!dateToError ? null : (\n                <Text\n                  numberOfLines={1}\n                  style={StyleSheet.applyWidth(\n                    {\n                      color: theme.colors.error,\n                      fontSize: 10,\n                      marginBottom: 1,\n                      textAlign: 'center',\n                    },\n                    dimensions.width\n                  )}\n                >\n                  {dateToError}\n                </Text>\n              )}\n            </>\n          </View>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            justifyContent: 'center',\n            marginLeft: '3%',\n            marginRight: '3%',\n            marginTop: 25,\n          },\n          dimensions.width\n        )}\n      >\n        {/* Button Solid */}\n        <>\n          {!!(props.route?.params?.readOnly ?? false) ? null : (\n            <Button\n              onPress={() => {\n                const handler = async () => {\n                  try {\n                    const validateError = validate();\n                    if (validateError) {\n                      return;\n                    }\n                    setIoAction('saving');\n                    setLoading(true);\n                    const fetchResult = (\n                      await dcSSRequestVacPOST.mutateAsync({\n                        emp_id: Constants['my_emp_id'],\n                        req_datetime: now(),\n                        req_vac_from: Date2IsoDateString(dateFrom),\n                        req_vac_to: Date2IsoDateString(dateTo),\n                      })\n                    )?.json;\n                    setLoading(false);\n                    const isError = postResultToast(fetchResult);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                };\n                handler();\n              }}\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 10,\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontWeight: '700',\n                  marginLeft: '6%',\n                  marginRight: '6%',\n                  minHeight: 48,\n                  textAlign: 'center',\n                },\n                dimensions.width\n              )}\n              title={'Solicitar'}\n            />\n          )}\n        </>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SolicitudVacacionesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Button, Divider, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { Image, ScrollView, View, useWindowDimensions } from 'react-native';\n\nconst SolicitudesScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [screenName, setScreenName] = React.useState('Solicitudes');\n  const menuItems = () => {\n    return [\n      {\n        name: 'Actualización de Datos',\n        icon: 'MaterialIcons/library-books',\n        background: Images.UndrawPersonData,\n        target: 'ActualizacionDeDatosScreen',\n        permission: 'Solicitudes:Datos',\n        enabled: true,\n        visible: true,\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Retiro',\n        icon: 'MaterialCommunityIcons/exit-run',\n        background: Images.UndrawOut01,\n        target: 'SolicitudRetiroAnticipadoScreen',\n        permission: 'Solicitudes:Retiro',\n        enabled: true,\n        visible: true,\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Permisos y Ausencias',\n        icon: 'Ionicons/md-home',\n        background: Images.UndrawDoctor,\n        target: 'SolicitudPermisoAusenciaScreen',\n        permission: 'Solicitudes:PermisoAusencia',\n        enabled: true,\n        visible: true,\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      {\n        name: 'Cambio de Turno',\n        icon: 'MaterialIcons/published-with-changes',\n        background: Images.Image20210630121543,\n        target: 'PreviewCambioTurnoScreen',\n        permission: 'Solicitudes:CambioTurno',\n        enabled: true,\n        visible: true,\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n      // {\n      //     name:   \"Vacaciones\",\n      //     icon:   \"Ionicons/airplane\",\n      //     background: Images.UndrawAircraftFbvl,\n      //     target: 'SolicitudVacacionesScreen',\n      //     permission: 'Solicitudes:Vacaciones',\n      //     enabled: true,\n      //     visible: true\n      // },\n      {\n        name: 'Solicitud de EPP',\n        icon: 'Ionicons/shirt',\n        background: Images.UndrawClothes02,\n        target: 'SolicitudEPPScreen',\n        permission: 'Solicitudes:EPP',\n        enabled: true,\n        visible: true,\n        ifNoPerm: {\n          enabled: false,\n          visible: false,\n        },\n      },\n    ];\n  };\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      hasTopSafeArea={true}\n      scrollable={false}\n    >\n      <CustomCode.DigicardScreenHeader\n        {...props}\n        right={{\n          icon: 'Ionicons/home-outline',\n          nav: 'Main',\n          screen: 'InicioScreen',\n        }}\n        title={screenName}\n      />\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            borderRadius: 4,\n            flex: 1,\n            marginBottom: 10,\n            marginLeft: 12,\n            marginRight: 12,\n            marginTop: 15,\n            paddingBottom: 25,\n          },\n          dimensions.width\n        )}\n      >\n        <Utils.CustomCodeErrorBoundary>\n          {CustomCode.renderMenuItems(\n            menuItems(),\n            Constants['AppPermissions'],\n            props\n          )}\n        </Utils.CustomCodeErrorBoundary>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SolicitudesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Button,\n  Container,\n  Divider,\n  Row,\n  ScreenContainer,\n  Stack,\n  withTheme,\n} from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYConsultaPresentismoScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Presentismo');\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <Container\n        backgroundImageResizeMode={'cover'}\n        style={StyleSheet.applyWidth({ height: '45%' }, dimensions.width)}\n      >\n        <Stack alignItems={'center'} justifyContent={'flex-start'}>\n          <Image\n            resizeMode={'cover'}\n            source={Images.Image20210723111613}\n            style={StyleSheet.applyWidth(\n              {\n                height: 240,\n                marginBottom: 10,\n                marginTop: 10,\n                opacity: 0.75,\n                overflow: 'hidden',\n                width: 300,\n              },\n              dimensions.width\n            )}\n          />\n          <View>\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontSize: 22,\n                  fontWeight: '700',\n                  textAlign: 'center',\n                },\n                dimensions.width\n              )}\n            >\n              {'Horas trabajadas: 508'}\n            </Text>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 20 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.strong,\n                  fontFamily: 'System',\n                  fontSize: 22,\n                  fontWeight: '700',\n                  textAlign: 'center',\n                },\n                dimensions.width\n              )}\n            >\n              {'Llegadas tarde: 0'}\n            </Text>\n          </View>\n          <Divider\n            color={theme.colors.secondary}\n            height={10}\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, marginTop: 10 },\n              dimensions.width\n            )}\n          />\n        </Stack>\n      </Container>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            height: '20%',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <Divider\n          height={1}\n          style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n        />\n        <Row alignItems={'flex-start'} justifyContent={'space-between'}>\n          <Container\n            backgroundImageResizeMode={'cover'}\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                height: 130,\n                justifyContent: 'space-around',\n                marginRight: 20,\n                width: 150,\n              },\n              dimensions.width\n            )}\n          >\n            {/* Button Solid */}\n            <Button\n              icon={'Entypo/medal'}\n              onPress={() => {\n                try {\n                  navigation.navigate('Main');\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 8,\n                  fontFamily: 'System',\n                  fontWeight: '700',\n                  height: 125,\n                  textAlign: 'center',\n                  width: 150,\n                },\n                dimensions.width\n              )}\n              title={'EXCELENCIA'}\n            >\n              {'Sign Up'}\n            </Button>\n          </Container>\n\n          <Container\n            backgroundImageResizeMode={'cover'}\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                height: 130,\n                justifyContent: 'space-around',\n                width: 150,\n              },\n              dimensions.width\n            )}\n          >\n            {/* Button Solid */}\n            <Button\n              icon={'Entypo/medal'}\n              onPress={() => {\n                try {\n                  navigation.navigate('Main');\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 8,\n                  fontFamily: 'System',\n                  fontWeight: '700',\n                  height: 125,\n                  textAlign: 'center',\n                  width: 150,\n                },\n                dimensions.width\n              )}\n              title={'MERITO'}\n            >\n              {'Sign Up'}\n            </Button>\n          </Container>\n        </Row>\n      </View>\n\n      <Container\n        backgroundImageResizeMode={'cover'}\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '15%',\n            justifyContent: 'space-around',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        {/* Button Solid */}\n        <Button\n          icon={'MaterialIcons/rule'}\n          onPress={() => {\n            try {\n              navigation.navigate('Main');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.primary,\n              borderRadius: 8,\n              fontFamily: 'System',\n              fontWeight: '700',\n              height: 60,\n              textAlign: 'center',\n              width: 305,\n            },\n            dimensions.width\n          )}\n          title={'REQUERIMIENTOS'}\n        >\n          {'Sign Up'}\n        </Button>\n      </Container>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYConsultaPresentismoScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Divider,\n  IconButton,\n  ScreenContainer,\n  Stack,\n  withTheme,\n} from '@draftbit/ui';\nimport { ScrollView, Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYExcelenciaScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState(\n    'Excelencia a la Asistencia Perfecta'\n  );\n\n  return (\n    <ScreenContainer hasSafeArea={true}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'flex-start',\n            alignSelf: 'center',\n            backgroundColor: theme.colors.secondary,\n            borderRadius: 12,\n            height: 200,\n            paddingBottom: 16,\n            paddingLeft: 16,\n            paddingRight: 16,\n            paddingTop: 16,\n            width: 310,\n          },\n          dimensions.width\n        )}\n      >\n        <View>\n          <IconButton\n            icon={'AntDesign/leftcircle'}\n            onPress={() => {\n              try {\n                navigation.navigate('Main');\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n            size={30}\n          />\n        </View>\n\n        <Stack alignItems={'center'} justifyContent={'flex-start'}>\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignContent: 'center',\n                justifyContent: 'center',\n                minHeight: 50,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  alignSelf: 'center',\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 22,\n                  fontWeight: '500',\n                  opacity: 1,\n                  textAlign: 'center',\n                },\n                dimensions.width\n              )}\n            >\n              {'Excelencia a la Asistencia Perfecta'}\n            </Text>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n                marginTop: 18,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.background, fontSize: 20 },\n                dimensions.width\n              )}\n            >\n              {'Estado: participando'}\n            </Text>\n          </View>\n        </Stack>\n      </View>\n\n      <ScrollView\n        bounces={true}\n        showsVerticalScrollIndicator={true}\n        style={StyleSheet.applyWidth(\n          { height: '90%', width: '100%' },\n          dimensions.width\n        )}\n        contentContainerStyle={StyleSheet.applyWidth(\n          { alignItems: 'center' },\n          dimensions.width\n        )}\n      >\n        <Divider\n          color={theme.colors.divider}\n          height={30}\n          style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n        />\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignContent: 'stretch',\n              alignItems: 'center',\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              marginBottom: 30,\n              paddingBottom: 18,\n              paddingLeft: 18,\n              paddingRight: 18,\n              paddingTop: 18,\n              width: 310,\n            },\n            dimensions.width\n          )}\n        >\n          <Stack alignItems={'flex-start'} justifyContent={'flex-start'}>\n            <View\n              style={StyleSheet.applyWidth(\n                { alignContent: 'stretch', minHeight: 30 },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  { color: theme.colors.background, fontSize: 22 },\n                  dimensions.width\n                )}\n              >\n                {'Requerimientos:'}\n              </Text>\n            </View>\n            <Divider\n              color={theme.colors.divider}\n              height={20}\n              style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n            />\n            <View\n              style={StyleSheet.applyWidth(\n                { alignSelf: 'center', minHeight: 50 },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontSize: 22,\n                    textAlign: 'justify',\n                  },\n                  dimensions.width\n                )}\n              >\n                {\n                  'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin rhoncus nec magna in tincidunt. Sed ut tempor nisl. Etiam sit amet ligula semper, vulputate nisl vel, faucibus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce fringilla.'\n                }\n              </Text>\n            </View>\n          </Stack>\n        </View>\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYExcelenciaScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Divider, ScreenContainer, Stack, withTheme } from '@draftbit/ui';\nimport { ScrollView, Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYMeritoScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Merito');\n\n  return (\n    <ScreenContainer hasSafeArea={true}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'flex-start',\n            alignSelf: 'center',\n            backgroundColor: theme.colors.secondary,\n            borderRadius: 12,\n            height: 200,\n            paddingBottom: 16,\n            paddingLeft: 16,\n            paddingRight: 16,\n            paddingTop: 16,\n            width: 310,\n          },\n          dimensions.width\n        )}\n      >\n        <View />\n        <Stack alignItems={'center'} justifyContent={'flex-start'}>\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignContent: 'center',\n                justifyContent: 'center',\n                minHeight: 50,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  alignSelf: 'center',\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 22,\n                  fontWeight: '500',\n                  opacity: 1,\n                  textAlign: 'center',\n                },\n                dimensions.width\n              )}\n            >\n              {'Merito a la Asistencia Perfecta'}\n            </Text>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              { alignItems: 'center', justifyContent: 'flex-end' },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.background, fontSize: 20, marginTop: 18 },\n                dimensions.width\n              )}\n            >\n              {'Estado: participando'}\n            </Text>\n          </View>\n        </Stack>\n      </View>\n\n      <ScrollView\n        bounces={true}\n        showsVerticalScrollIndicator={true}\n        style={StyleSheet.applyWidth(\n          { height: '90%', width: '100%' },\n          dimensions.width\n        )}\n        contentContainerStyle={StyleSheet.applyWidth(\n          { alignItems: 'center' },\n          dimensions.width\n        )}\n      >\n        <Divider\n          color={theme.colors.divider}\n          height={30}\n          style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n        />\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignContent: 'stretch',\n              alignItems: 'center',\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              marginBottom: 30,\n              paddingBottom: 18,\n              paddingLeft: 18,\n              paddingRight: 18,\n              paddingTop: 18,\n              width: 310,\n            },\n            dimensions.width\n          )}\n        >\n          <Stack alignItems={'flex-start'} justifyContent={'flex-start'}>\n            <View\n              style={StyleSheet.applyWidth(\n                { alignContent: 'stretch', minHeight: 30 },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  { color: theme.colors.background, fontSize: 22 },\n                  dimensions.width\n                )}\n              >\n                {'Requerimientos:'}\n              </Text>\n            </View>\n            <Divider\n              color={theme.colors.divider}\n              height={20}\n              style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n            />\n            <View\n              style={StyleSheet.applyWidth(\n                { alignSelf: 'center', minHeight: 50 },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontSize: 22,\n                    textAlign: 'justify',\n                  },\n                  dimensions.width\n                )}\n              >\n                {\n                  'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin rhoncus nec magna in tincidunt. Sed ut tempor nisl. Etiam sit amet ligula semper, vulputate nisl vel, faucibus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce fringilla.'\n                }\n              </Text>\n            </View>\n          </Stack>\n        </View>\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYMeritoScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  DatePicker,\n  Row,\n  ScreenContainer,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYNoMeAdhieroScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('No me adhiero');\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          borderBottomWidth: 0,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderTopWidth: 0,\n          height: '55%',\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            backgroundColor: theme.colors.primary,\n            borderRadius: 9,\n            height: '12%',\n            justifyContent: 'center',\n            marginBottom: 5,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 20,\n            minHeight: 50,\n            overflow: 'hidden',\n          },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.primary,\n              borderColor: theme.colors.primary,\n              justifyContent: 'center',\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 18,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'FECHA ESTIMADA'}\n          </Text>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.secondary,\n              borderColor: theme.colors.primary,\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'Inicio: 23/06/2021'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'Fin: 30/06/2021'}\n            </Text>\n          </Row>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'flex-start',\n            justifyContent: 'flex-end',\n            marginBottom: 15,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 25,\n            minHeight: 20,\n          },\n          dimensions.width\n        )}\n      >\n        <Text\n          style={StyleSheet.applyWidth(\n            {\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 16,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n        >\n          {'Seleccione la fecha de cambio'}\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            backgroundColor: theme.colors.primary,\n            height: '8%',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <View>\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 22,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'Mie, Jun 23'}\n          </Text>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '40%',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'cover'}\n          source={Images.Screenshot28}\n          style={StyleSheet.applyWidth(\n            { height: 320, marginTop: 5, width: '100%' },\n            dimensions.width\n          )}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '14%',\n            justifyContent: 'center',\n            marginTop: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <DatePicker\n          date={date}\n          label={'Date'}\n          leftIconMode={'inset'}\n          mode={'date'}\n          onDateChange={newDatePickerSolidValue => {\n            const date = newDatePickerSolidValue;\n            try {\n              setDate(date);\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          type={'solid'}\n        />\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Main');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth({ marginTop: 8 }, dimensions.width)}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              { color: theme.colors.secondary, fontSize: 16 },\n              dimensions.width\n            )}\n          >\n            {'Aceptar'}\n          </Text>\n        </Touchable>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYNoMeAdhieroScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Divider, Row, ScreenContainer, Stack, withTheme } from '@draftbit/ui';\nimport { ScrollView, Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYNotificacionesRespuestasScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Notificacion de Asunto');\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          borderBottomWidth: 0,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderTopWidth: 0,\n          height: '55%',\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View style={StyleSheet.applyWidth({ minHeight: 50 }, dimensions.width)}>\n        <View>\n          <Divider\n            color={theme.colors.background}\n            height={20}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          {/* View grande */}\n          <View\n            style={StyleSheet.applyWidth(\n              { alignItems: 'center', height: 550 },\n              dimensions.width\n            )}\n          >\n            <ScrollView bounces={true} showsVerticalScrollIndicator={true}>\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    backgroundColor: theme.colors.primary,\n                    borderRadius: 9,\n                    height: 100,\n                    justifyContent: 'center',\n                    marginBottom: 20,\n                    marginLeft: 10,\n                    marginRight: 10,\n                    marginTop: 20,\n                    overflow: 'hidden',\n                  },\n                  dimensions.width\n                )}\n              >\n                <View\n                  style={StyleSheet.applyWidth(\n                    {\n                      alignItems: 'center',\n                      backgroundColor: theme.colors.light,\n                      borderColor: theme.colors.primary,\n                      justifyContent: 'center',\n                      minHeight: 50,\n                      width: 355,\n                    },\n                    dimensions.width\n                  )}\n                >\n                  <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                    <Text\n                      style={StyleSheet.applyWidth(\n                        {\n                          alignSelf: 'center',\n                          color: theme.colors.background,\n                          fontFamily: 'System',\n                          fontSize: 18,\n                          fontWeight: '500',\n                        },\n                        dimensions.width\n                      )}\n                    >\n                      {'FECHA'}\n                    </Text>\n                  </Row>\n                </View>\n\n                <View\n                  style={StyleSheet.applyWidth(\n                    {\n                      alignItems: 'center',\n                      backgroundColor: theme.colors.secondary,\n                      borderColor: theme.colors.primary,\n                      minHeight: 50,\n                      width: 355,\n                    },\n                    dimensions.width\n                  )}\n                >\n                  <Row\n                    alignItems={'flex-start'}\n                    justifyContent={'space-around'}\n                  >\n                    <Text\n                      style={StyleSheet.applyWidth(\n                        {\n                          color: theme.colors.background,\n                          fontFamily: 'System',\n                          fontSize: 18,\n                          fontWeight: '500',\n                          marginTop: 10,\n                        },\n                        dimensions.width\n                      )}\n                    >\n                      {'23/06/2021'}\n                    </Text>\n                  </Row>\n                </View>\n              </View>\n            </ScrollView>\n            <Stack alignItems={'flex-start'} justifyContent={'flex-start'} />\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'EMISOR'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        marginTop: 10,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'RRHH'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'MENSAJE'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    alignSelf: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'SU SOLICITUD DE CAMBIO DE \\nTURNO FUE DENEGADA'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'MOTIVO'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'TURNO NO DISPONIBLE\\nPOR EL MOMENTO'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n          </View>\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYNotificacionesRespuestasScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  CircleImage,\n  Container,\n  Icon,\n  ScreenContainer,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYOpcionesScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [showDrawer, setShowDrawer] = React.useState(false);\n\n  return (\n    <ScreenContainer hasSafeArea={true} hasTopSafeArea={true}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          left={{\n            icon: 'MaterialCommunityIcons/backburger',\n            onPress: () => setShowDrawer(true),\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      {/* OptionsModal */}\n      <View>\n        <CustomCode.rnModal\n          isVisible={showDrawer}\n          animationIn={'slideInLeft'}\n          animationOut={'slideOutLeft'}\n          backdropColor={'white'}\n          backdropOpacity={0.1}\n          onBackdropPress={() => setShowDrawer(false)}\n          onSwipeComplete={() => setShowDrawer(false)}\n          swipeDirection={'left'}\n          swipeThreshold={50}\n          style={{ margin: 0 }}\n          hideModalContentWhileAnimating={true}\n        >\n          <Container\n            backgroundImageResizeMode={'cover'}\n            style={StyleSheet.applyWidth(\n              {\n                alignSelf: 'flex-start',\n                backgroundColor: theme.colors.light,\n                borderBottomRightRadius: 16,\n                borderRadius: 0,\n                borderTopRightRadius: 16,\n                flex: 1,\n                opacity: 0.85,\n                paddingLeft: 29,\n                paddingTop: 8,\n                width: '85%',\n              },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                { position: 'absolute', right: 5, top: 5, zIndex: 99 },\n                dimensions.width\n              )}\n            >\n              <CircleImage\n                size={80}\n                source={{ uri: `${Constants['emp_photo']}` }}\n              />\n            </View>\n\n            <Container\n              backgroundImageResizeMode={'cover'}\n              style={StyleSheet.applyWidth(\n                { borderRadius: 1, height: '100%', width: '70%' },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  { borderRadius: 23 },\n                  dimensions.width\n                )}\n              >\n                <Touchable\n                  onPress={() => {\n                    try {\n                      setShowDrawer(false);\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    { marginBottom: 5, marginTop: 5 },\n                    dimensions.width\n                  )}\n                >\n                  <Icon\n                    color={theme.colors.background}\n                    name={'MaterialCommunityIcons/backburger'}\n                    size={24}\n                  />\n                </Touchable>\n\n                <Touchable\n                  onPress={() => {\n                    try {\n                      navigation.navigate('Main', { screen: 'AboutScreen' });\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    { marginBottom: 5, marginTop: 25 },\n                    dimensions.width\n                  )}\n                >\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'Acerca de'}\n                  </Text>\n                </Touchable>\n\n                <Touchable\n                  onPress={() => {\n                    try {\n                      navigation.navigate('Main');\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    { marginBottom: 5, marginTop: 5 },\n                    dimensions.width\n                  )}\n                >\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        marginBottom: 10,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'Cerrar sesión'}\n                  </Text>\n                </Touchable>\n              </View>\n            </Container>\n          </Container>\n        </CustomCode.rnModal>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYOpcionesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  DatePicker,\n  Row,\n  ScreenContainer,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst YYYSiMeAdhieroScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Si me adhiero');\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          height: '55%',\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            backgroundColor: theme.colors.primary,\n            borderRadius: 9,\n            height: '12%',\n            justifyContent: 'center',\n            marginBottom: 5,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 20,\n            minHeight: 50,\n            overflow: 'hidden',\n          },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.primary,\n              borderColor: theme.colors.primary,\n              justifyContent: 'center',\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 18,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'FECHA ESTIMADA'}\n          </Text>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.secondary,\n              borderColor: theme.colors.primary,\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'Inicio: 23/06/2021'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'Fin: 30/06/2021'}\n            </Text>\n          </Row>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'flex-start',\n            height: 0,\n            justifyContent: 'flex-end',\n            marginBottom: 15,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 25,\n            minHeight: 20,\n          },\n          dimensions.width\n        )}\n      >\n        <Text\n          style={StyleSheet.applyWidth(\n            {\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 16,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n        >\n          {'Seleccione la fecha de cambio'}\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            backgroundColor: theme.colors.primary,\n            height: '8%',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <View>\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 22,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'Mie, Jun 23'}\n          </Text>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '40%',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'cover'}\n          source={Images.Screenshot28}\n          style={StyleSheet.applyWidth(\n            { height: 320, marginTop: 5, width: '100%' },\n            dimensions.width\n          )}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '14%',\n            justifyContent: 'center',\n            marginTop: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <DatePicker\n          date={date}\n          label={'Date'}\n          leftIconMode={'inset'}\n          mode={'date'}\n          onDateChange={newDatePickerSolidValue => {\n            const date = newDatePickerSolidValue;\n            try {\n              setDate(date);\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          type={'solid'}\n        />\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Main');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth({ marginTop: 8 }, dimensions.width)}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              { color: theme.colors.secondary, fontSize: 16 },\n              dimensions.width\n            )}\n          >\n            {'Aceptar'}\n          </Text>\n        </Touchable>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(YYYSiMeAdhieroScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  IconButton,\n  Row,\n  ScreenContainer,\n  Stack,\n  withTheme,\n} from '@draftbit/ui';\nimport { Text, View, useWindowDimensions } from 'react-native';\n\nconst ZZZAprobacionRespuestaScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Aprobación');\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          borderBottomWidth: 0,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderTopWidth: 0,\n          height: '55%',\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} title={screenName} />\n      </Utils.CustomCodeErrorBoundary>\n      <View style={StyleSheet.applyWidth({ minHeight: 50 }, dimensions.width)}>\n        <View\n          style={StyleSheet.applyWidth(\n            { height: '10%', minHeight: 50 },\n            dimensions.width\n          )}\n        >\n          {/* View grande */}\n          <View\n            style={StyleSheet.applyWidth(\n              { alignItems: 'center', height: 550 },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        alignSelf: 'center',\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'COLABORADOR'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        marginTop: 10,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'DANIEL MACCHIAVELLO'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n            <Stack alignItems={'flex-start'} justifyContent={'flex-start'} />\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'SOLICITUD'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        marginTop: 10,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'AUMENTO DE SUELDO'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'HORARIO'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        marginTop: 10,\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'DIURNO'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  backgroundColor: theme.colors.primary,\n                  borderRadius: 9,\n                  height: 100,\n                  justifyContent: 'center',\n                  marginBottom: 20,\n                  marginLeft: 10,\n                  marginRight: 10,\n                  marginTop: 20,\n                  overflow: 'hidden',\n                },\n                dimensions.width\n              )}\n            >\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.light,\n                    borderColor: theme.colors.primary,\n                    justifyContent: 'center',\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'MOTIVO'}\n                  </Text>\n                </Row>\n              </View>\n\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    alignItems: 'center',\n                    backgroundColor: theme.colors.secondary,\n                    borderColor: theme.colors.primary,\n                    minHeight: 50,\n                    width: 355,\n                  },\n                  dimensions.width\n                )}\n              >\n                <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      {\n                        color: theme.colors.background,\n                        fontFamily: 'System',\n                        fontSize: 18,\n                        fontWeight: '500',\n                        marginBottom: 12,\n                        marginTop: 8,\n                        textAlign: 'center',\n                      },\n                      dimensions.width\n                    )}\n                  >\n                    {'EXCELENTE RENDIMIENTO \\nY DESEMPEÑO'}\n                  </Text>\n                </Row>\n              </View>\n            </View>\n          </View>\n\n          <Row alignItems={'center'} justifyContent={'center'}>\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.medium,\n                  borderRadius: 9,\n                  height: 40,\n                  justifyContent: 'center',\n                  marginBottom: 10,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 25,\n                  width: 100,\n                },\n                dimensions.width\n              )}\n            >\n              <IconButton\n                icon={'Ionicons/checkbox-outline'}\n                onPress={() => {\n                  try {\n                    navigation.navigate('Main');\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                size={32}\n                style={StyleSheet.applyWidth(\n                  { opacity: 0.87 },\n                  dimensions.width\n                )}\n              />\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.medium,\n                  borderRadius: 9,\n                  height: 40,\n                  justifyContent: 'center',\n                  marginBottom: 10,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 25,\n                  width: 100,\n                },\n                dimensions.width\n              )}\n            >\n              <IconButton\n                icon={'AntDesign/closesquareo'}\n                onPress={() => {\n                  try {\n                    navigation.navigate('Main');\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                size={32}\n              />\n            </View>\n          </Row>\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZAprobacionRespuestaScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, Stack, withTheme } from '@draftbit/ui';\nimport { Text, View, useWindowDimensions } from 'react-native';\n\nconst ZZZAsuntoScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Asunto');\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      style={StyleSheet.applyWidth({ minHeight: 50 }, dimensions.width)}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader {...props} title={screenName} />\n      </Utils.CustomCodeErrorBoundary>\n      {/* View grande */}\n      <View\n        style={StyleSheet.applyWidth(\n          { alignItems: 'center', height: 550 },\n          dimensions.width\n        )}\n      >\n        <Stack alignItems={'center'} justifyContent={'flex-start'}>\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 9,\n                height: 100,\n                justifyContent: 'center',\n                marginBottom: 20,\n                marginTop: 20,\n                overflow: 'hidden',\n              },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.light,\n                  borderColor: theme.colors.primary,\n                  height: 50,\n                  justifyContent: 'center',\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    alignSelf: 'center',\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '500',\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'FECHA'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.secondary,\n                  borderColor: theme.colors.primary,\n                  minHeight: 50,\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '500',\n                    marginTop: 10,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'21/06/2021'}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                borderRadius: 9,\n                height: 100,\n                justifyContent: 'center',\n                marginBottom: 20,\n                marginTop: 20,\n                overflow: 'hidden',\n              },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.light,\n                  borderColor: theme.colors.primary,\n                  height: 50,\n                  justifyContent: 'center',\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '500',\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'SOLICITUD'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.secondary,\n                  minHeight: 50,\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '500',\n                    marginTop: 10,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'Vacaciones del 2 de julio al 20 de aqgosto'}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 9,\n                height: 100,\n                justifyContent: 'center',\n                marginBottom: 20,\n                marginTop: 20,\n                overflow: 'hidden',\n              },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.light,\n                  borderColor: theme.colors.primary,\n                  height: 50,\n                  justifyContent: 'center',\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '500',\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'ESTADO'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.secondary,\n                  borderColor: theme.colors.primary,\n                  minHeight: 50,\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 18,\n                    fontWeight: '500',\n                    marginTop: 10,\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'RECHAZADA'}\n              </Text>\n            </View>\n          </View>\n\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                backgroundColor: theme.colors.primary,\n                borderRadius: 9,\n                height: 100,\n                justifyContent: 'center',\n                marginBottom: 20,\n                marginTop: 20,\n                overflow: 'hidden',\n              },\n              dimensions.width\n            )}\n          >\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.light,\n                  borderColor: theme.colors.primary,\n                  height: 50,\n                  justifyContent: 'center',\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 22,\n                    fontWeight: '500',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'MOTIVO'}\n              </Text>\n            </View>\n\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  backgroundColor: theme.colors.secondary,\n                  borderColor: theme.colors.primary,\n                  minHeight: 50,\n                  width: 355,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.background,\n                    fontFamily: 'System',\n                    fontSize: 16,\n                    fontWeight: '500',\n                    textAlign: 'center',\n                  },\n                  dimensions.width\n                )}\n              >\n                {\n                  'Falta coordinar con el Departamento de Recursos Humanos un suplente para el cargo'\n                }\n              </Text>\n            </View>\n          </View>\n        </Stack>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZAsuntoScreen);\n","import React from 'react';\nimport Images from '../config/Images';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport {\n  FlatList,\n  ImageBackground,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ZZZAsuntosScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n\n  return (\n    <ScreenContainer hasSafeArea={true} scrollable={false}>\n      <View\n        style={StyleSheet.applyWidth(\n          { marginBottom: 16, marginLeft: 16, marginRight: 16, marginTop: 32 },\n          dimensions.width\n        )}\n      >\n        <Text\n          style={StyleSheet.applyWidth(\n            {\n              color: theme.colors.strong,\n              textAlign: 'center',\n              typography: theme.typography.headline4,\n            },\n            dimensions.width\n          )}\n        >\n          {'ASUNTOS'}\n        </Text>\n      </View>\n\n      <ScrollView\n        bounces={true}\n        contentContainerStyle={StyleSheet.applyWidth(\n          {\n            backgroundColor: theme.colors.divider,\n            paddingLeft: 16,\n            paddingRight: 16,\n          },\n          dimensions.width\n        )}\n        showsHorizontalScrollIndicator={true}\n        showsVerticalScrollIndicator={true}\n      ></ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZAsuntosScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as DcSSApi from '../apis/DcSSApi.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport {\n  ActivityIndicator,\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ZZZConsultaComedorScreenOLDScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [currentDate, setCurrentDate] = React.useState(\n    InitializeCurrentDate(\"''\")\n  );\n  const [dateFrom, setDateFrom] = React.useState(new Date());\n  const [dateTo, setDateTo] = React.useState(new Date());\n  const [daySheet, setDaySheet] = React.useState([]);\n  const [screenName, setScreenName] = React.useState('Comedor');\n  const [showing, setShowing] = React.useState(0);\n  const log = value => {\n    if (variables['logging'])\n      console.log(`log value: ${JSON.stringify(value)}`);\n    return value;\n  };\n\n  const calcDateFrom = aDateTo => {\n    let rslt = aDateTo;\n\n    if (!rslt) rslt = dateTo;\n\n    console.log(`calcDateFrom(${currentDate}): ${rslt}`);\n    switch (showing) {\n      case 1:\n        break;\n\n      case 2:\n        /// To previous monday\n        let offset = rslt.getDay() - 1;\n        if (offset < 0) offset += 7;\n        rslt = dateAdd(rslt, -offset);\n        break;\n\n      case 3:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 4:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFrom(${currentDate}): ${rslt}`);\n    return rslt;\n  };\n\n  const IsoString2Date = utcString => {\n    console.log(`IsoString2Date(${utcString}`);\n\n    const rslt = ParseDate(utcString);\n\n    console.log(`ParseDate(${utcString}: ${rslt}`);\n\n    return rslt;\n  };\n\n  const UtcDate2ShortTime = utcDateStr => {\n    return utcDateStr?.split('T')[1].substr(0, 5);\n  };\n\n  const DateToUtcString = aDate => {\n    if (aDate) {\n      // if(variables['logging']) console.log(\n      // `Date2UTCString(${aDate}), type: ${typeof aDate}, ISO: ${aDate.toISOString()}, Local: ${aDate.toLocaleDateString()}`\n      // );\n\n      aDate.setHours(0);\n\n      const UTCString = aDate.toISOString().split('T')[0];\n      // if(variables['logging']) console.log(`UTCString: ${UTCString}`);\n      return UTCString;\n    }\n    return '';\n  };\n\n  const shortTime = time => {\n    return time?.substr(3);\n  };\n\n  const FormatIsoString = sDate => {\n    return CustomCode.FormatIsoString(sDate, format);\n  };\n\n  const InitializeCurrentDate = () => {\n    return CustomCode.InitializeCurrentDate(Constants);\n  };\n\n  const extractDate = sDate => {\n    return CustomCode.FormatIsoString(sDate, 'DD/MM');\n  };\n\n  const extractTime = sDate => {\n    return CustomCode.FormatIsoString(sDate, 'HH:mm');\n  };\n\n  const dateDec = date => {\n    // const newDate = new Date(date.getTime() - 1000 * 60 * 60 * 24);\n    // if(variables['logging']) console.log(`dateSub(${date} => ${newDate}`);\n    // return newDate;\n\n    return dateAdd(date, -1);\n  };\n\n  const setShow = what => {\n    setShowing(what);\n\n    calcDateFromByOption(what);\n\n    console.log(`setShow(${what})`);\n  };\n\n  const dateAdd = (aDate, days) => {\n    const newDate = new Date(aDate.getTime() + days * 1000 * 60 * 60 * 24);\n    if (variables['logging'])\n      console.log(`dateSAdd(${aDate}, ${days}) => ${newDate}`);\n    return newDate;\n  };\n\n  const filterDaySheet = response => {\n    let rslt = response[0]?.timesheet.tim || [];\n    // let til = response[0].timesheet.til;\n\n    // til.forEach((e) => {\n    //     const tim = rslt;\n    //     const atim = tim.find((l) => l.til_tim_id == e.tim_id);\n    //     // console.log(`found ${JSON.stringify(atim)}, date:${atim.tim_date}`);\n    //     e[\"tim_date\"] = atim.tim_date;\n    //     // console.log(`patched liq ${JSON.stringify(e)}`);\n    // });\n\n    console.log(`filterDaySheet = ${JSON.stringify(rslt)}`);\n    // console.log(`Liqs = ${JSON.stringify(til)}`);\n\n    return rslt;\n  };\n\n  const extractTimDate = item => {\n    console.log(`extractTimDate(${JSON.stringify(item)})`);\n    return item?.tim_date.substr(5, 2) + '/' + item?.tim_date.substr(8, 2);\n  };\n\n  const tarde2string = id => {\n    return id ? (id == 1 ? 'Tarde' : 'Retiro anticipado') : '';\n  };\n\n  const calcDateFromByOption = showOption => {\n    let rslt = new Date(dateTo);\n\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n    switch (showOption) {\n      case 0:\n        break;\n\n      case 1:\n        /// To previous monday\n        let offset = rslt.getDay() - 1;\n        if (offset < 0) offset += 7;\n        rslt = dateAdd(rslt, -offset);\n        break;\n\n      case 2:\n        /// To start of month\n        rslt.setDate(1);\n        break;\n\n      case 3:\n        /// To start of year\n        rslt.setMonth(0, 1);\n        break;\n    }\n\n    setDateFrom(rslt);\n    console.log(`calcDateFromByOption(${showOption}): ${rslt}`);\n  };\n\n  const dateInc = date => {\n    // const newDate = new Date(date.getTime() + 1000 * 60 * 60 * 24);\n    // if(variables['logging']) console.log(`dateInc(${date} => ${newDate}`);\n    // return newDate;\n\n    return dateAdd(date, 1);\n  };\n\n  const conceptName = con_id => {\n    const found = screenData.find(e => e.con_id == con_id);\n\n    return found?.con_name;\n  };\n\n  const dateFromTimId = tim_id => {\n    const rslt = daySheet?.find(e => e.tim_id == tim_id);\n\n    // console.log(`dateFromTimId(${tim_id}) daySheet: ${JSON.stringify(daySheet)}) found: ${JSON.stringify(rslt)}`);\n\n    if (rslt?.tim_date)\n      return rslt?.tim_date.substr(8, 2) + '/' + rslt?.tim_date.substr(5, 2);\n    else return '';\n  };\n  // to use a global variable\n  const variables = CustomCode.useValues();\n  // to update or modify the value of a global variable\n  const setVariable = CustomCode.useSetValue();\n\n  const DropDownHolder = CustomCode.DropDownHolder;\n\n  // const Nophoto = Images.Nophoto;\n  // [\"Ninguno\",\"Vehiculo\",\"Moto\",\"Bici\",\"Publico\"]\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setDateTo(currentDate);\n      setDateFrom(currentDate);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ marginBottom: 15 }, dimensions.width)}\n    >\n      {/* Fetch Screen (ZZZ_ConsultaComedorScreenOLD) */}\n      <DcSSApi.FetchConceptsByEmpGET emp_id={Constants['my_emp_id']}>\n        {({ loading, error, data, refetchConceptsByEmp }) => {\n          const fetchScreenZZZConsultaComedorScreenOLDData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return (\n            <>\n              <Utils.CustomCodeErrorBoundary>\n                <CustomCode.DigicardScreenHeader\n                  {...props}\n                  right={{\n                    icon: 'Ionicons/home-outline',\n                    nav: 'Main',\n                    screen: 'InicioScreen',\n                  }}\n                  title={screenName}\n                />\n              </Utils.CustomCodeErrorBoundary>\n              {/* DatePickerHeaderView */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    marginBottom: 10,\n                    marginLeft: 15,\n                    marginRight: 15,\n                    marginTop: 20,\n                  },\n                  dimensions.width\n                )}\n              >\n                <CustomCode.rnSegmentedControlTab\n                  values={['Hoy', 'Semana', 'Mes', 'Año']}\n                  onTabPress={index => setShow(index)}\n                  selectedIndex={showing}\n                />\n              </View>\n\n              <ScrollView\n                bounces={true}\n                style={StyleSheet.applyWidth({ height: 10 }, dimensions.width)}\n                contentContainerStyle={StyleSheet.applyWidth(\n                  { marginLeft: '3%', marginRight: '3%' },\n                  dimensions.width\n                )}\n              >\n                <DcSSApi.FetchComedorByEmpGET\n                  date_from={dateFrom}\n                  emp_id={Constants['my_emp_id']}\n                >\n                  {({ loading, error, data, refetchComedorByEmp }) => {\n                    const fetchData = data?.json;\n                    if (loading) {\n                      return <ActivityIndicator />;\n                    }\n\n                    if (error || data?.status < 200 || data?.status >= 300) {\n                      return <ActivityIndicator />;\n                    }\n\n                    return (\n                      <>\n                        {/* SectionHeaderView */}\n                        <View\n                          style={StyleSheet.applyWidth(\n                            { marginTop: '3%' },\n                            dimensions.width\n                          )}\n                        >\n                          {/* TableHeaderView */}\n                          <View\n                            style={StyleSheet.applyWidth(\n                              {\n                                backgroundColor: theme.colors.light,\n                                flexDirection: 'row',\n                              },\n                              dimensions.width\n                            )}\n                          >\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { alignItems: 'center', width: '20%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Fecha'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { alignItems: 'center', width: '17%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Entrada'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                { alignItems: 'center', width: '17%' },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Salida'}\n                              </Text>\n                            </View>\n\n                            <View\n                              style={StyleSheet.applyWidth(\n                                {\n                                  alignItems: 'flex-start',\n                                  marginLeft: 8,\n                                  width: '46%',\n                                },\n                                dimensions.width\n                              )}\n                            >\n                              <Text\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    alignSelf: 'flex-start',\n                                    color: theme.colors.strong,\n                                    fontFamily: 'System',\n                                    fontWeight: '600',\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                {'Concepto'}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        <FlatList\n                          contentContainerStyle={StyleSheet.applyWidth(\n                            { marginBottom: 1 },\n                            dimensions.width\n                          )}\n                          data={fetchData}\n                          keyExtractor={listData =>\n                            listData?.id ||\n                            listData?.uuid ||\n                            JSON.stringify(listData)\n                          }\n                          listKey={'LCQmcM7G'}\n                          renderItem={({ item }) => {\n                            const listData = item;\n                            return (\n                              <View\n                                style={StyleSheet.applyWidth(\n                                  {\n                                    backgroundColor: theme.colors.verylight,\n                                    flexDirection: 'row',\n                                    marginLeft: 0,\n                                    marginRight: 0,\n                                    paddingLeft: 0,\n                                    paddingRight: 0,\n                                  },\n                                  dimensions.width\n                                )}\n                              >\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { alignItems: 'center', width: '20%' },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      { color: theme.colors.strong },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {extractDate(listData?.tiw_in)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { alignItems: 'center', width: '17%' },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'center',\n                                        color: theme.colors.strong,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {extractTime(listData?.tiw_in)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    { alignItems: 'center', width: '17%' },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'center',\n                                        color: theme.colors.strong,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {extractTime(listData?.tiw_out)}\n                                  </Text>\n                                </View>\n\n                                <View\n                                  style={StyleSheet.applyWidth(\n                                    {\n                                      alignItems: 'flex-start',\n                                      marginLeft: 8,\n                                      width: '46%',\n                                    },\n                                    dimensions.width\n                                  )}\n                                >\n                                  <Text\n                                    style={StyleSheet.applyWidth(\n                                      {\n                                        alignSelf: 'flex-start',\n                                        color: theme.colors.strong,\n                                      },\n                                      dimensions.width\n                                    )}\n                                  >\n                                    {conceptName(listData?.tiw_concept_id)}\n                                  </Text>\n                                </View>\n                              </View>\n                            );\n                          }}\n                        />\n                      </>\n                    );\n                  }}\n                </DcSSApi.FetchComedorByEmpGET>\n              </ScrollView>\n            </>\n          );\n        }}\n      </DcSSApi.FetchConceptsByEmpGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZConsultaComedorScreenOLDScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Circle,\n  Icon,\n  Row,\n  ScreenContainer,\n  Stack,\n  withTheme,\n} from '@draftbit/ui';\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ZZZConsultaReciboDeHaberesScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Recibos de Haberes');\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth({ height: '55%' }, dimensions.width)}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            height: 24,\n            justifyContent: 'center',\n            minHeight: 50,\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Icon\n          color={theme.colors.strong}\n          name={'SimpleLineIcons/envelope-open'}\n          size={28}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '10%',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <Text\n          style={StyleSheet.applyWidth(\n            {\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 22,\n              fontWeight: '600',\n            },\n            dimensions.width\n          )}\n        >\n          {'Por Quincena'}\n        </Text>\n      </View>\n\n      <ScrollView\n        bounces={true}\n        showsVerticalScrollIndicator={true}\n        style={StyleSheet.applyWidth(\n          { height: '53%', width: '100%' },\n          dimensions.width\n        )}\n        contentContainerStyle={StyleSheet.applyWidth(\n          { paddingBottom: 25, paddingTop: 10 },\n          dimensions.width\n        )}\n      >\n        <Row alignItems={'center'} justifyContent={'space-around'}>\n          <Stack alignItems={'center'} justifyContent={'flex-start'}>\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  alignSelf: 'stretch',\n                  justifyContent: 'center',\n                  marginLeft: 15,\n                  marginRight: 15,\n                  minHeight: 45,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    fontFamily: 'System',\n                    fontSize: 16,\n                    fontWeight: '700',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'FECHA'}\n              </Text>\n            </View>\n          </Stack>\n\n          <Stack alignItems={'center'} justifyContent={'flex-start'}>\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  alignSelf: 'stretch',\n                  justifyContent: 'center',\n                  marginLeft: 15,\n                  marginRight: 15,\n                  minHeight: 45,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    fontFamily: 'System',\n                    fontSize: 16,\n                    fontWeight: '700',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'PDF'}\n              </Text>\n            </View>\n          </Stack>\n\n          <Stack alignItems={'center'} justifyContent={'flex-start'}>\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  alignSelf: 'stretch',\n                  justifyContent: 'center',\n                  marginLeft: 15,\n                  marginRight: 15,\n                  minHeight: 45,\n                },\n                dimensions.width\n              )}\n            >\n              <Text\n                style={StyleSheet.applyWidth(\n                  {\n                    color: theme.colors.strong,\n                    fontFamily: 'System',\n                    fontSize: 16,\n                    fontWeight: '700',\n                  },\n                  dimensions.width\n                )}\n              >\n                {'ESTADO'}\n              </Text>\n            </View>\n          </Stack>\n        </Row>\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZConsultaReciboDeHaberesScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  Circle,\n  CircleImage,\n  Container,\n  Divider,\n  Icon,\n  ScreenContainer,\n  Stack,\n  withTheme,\n} from '@draftbit/ui';\nimport { ScrollView, TextInput, View, useWindowDimensions } from 'react-native';\n\nconst ZZZEditarPerfilScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const [textInputValue, setTextInputValue] = React.useState('');\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      hasTopSafeArea={true}\n      scrollable={false}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/save-outline',\n            nav: 'Options',\n            screen: 'PerfilScreen',\n          }}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <Container\n        backgroundImageResizeMode={'cover'}\n        style={StyleSheet.applyWidth(\n          {\n            backgroundColor: theme.colors.primary,\n            height: '40%',\n            justifyContent: 'center',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Container\n          backgroundImageResizeMode={'contain'}\n          style={StyleSheet.applyWidth(\n            {\n              alignContent: 'stretch',\n              alignSelf: 'center',\n              height: 300,\n              width: 300,\n            },\n            dimensions.width\n          )}\n        >\n          <Container\n            backgroundImageResizeMode={'cover'}\n            style={StyleSheet.applyWidth(\n              { alignItems: 'center', height: 250, justifyContent: 'center' },\n              dimensions.width\n            )}\n          >\n            <CircleImage\n              size={170}\n              source={Images.Cat}\n              style={StyleSheet.applyWidth(\n                {\n                  marginBottom: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  marginTop: 0,\n                },\n                dimensions.width\n              )}\n            />\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignSelf: 'flex-end',\n                  bottom: 25,\n                  height: 50,\n                  right: 15,\n                  width: 50,\n                },\n                dimensions.width\n              )}\n            >\n              <Circle bgColor={theme.colors.light} size={50}>\n                <Icon\n                  color={theme.colors.strongInverse}\n                  name={'Feather/camera'}\n                  size={24}\n                  style={StyleSheet.applyWidth(\n                    { backgroundColor: theme.colors.light },\n                    dimensions.width\n                  )}\n                />\n              </Circle>\n            </View>\n          </Container>\n        </Container>\n      </Container>\n\n      <ScrollView\n        bounces={true}\n        showsVerticalScrollIndicator={true}\n        style={StyleSheet.applyWidth(\n          { height: '53%', width: '100%' },\n          dimensions.width\n        )}\n        contentContainerStyle={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            paddingBottom: 25,\n            paddingTop: 25,\n          },\n          dimensions.width\n        )}\n      >\n        <Stack alignItems={'flex-start'} justifyContent={'flex-start'}>\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Nombre y Apellido'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  color: theme.colors.strong,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                  width: 300,\n                },\n                dimensions.width\n              )}\n              underlineColorAndroid={theme.colors.null}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Tipo de Documento'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              underlineColorAndroid={theme.colors.null}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Número de Documento'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={20}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Teléfono'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                  width: 300,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Dirección Actual'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Mail Personal'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={10}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Nombre de Contacto'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                  width: 300,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Número de Contacto'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={10}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Número de Obra social o Prepaga'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                  width: 300,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Número de Teléfono'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Número de Carnet'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={10}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth({ minHeight: 50 }, dimensions.width)}\n          >\n            <TextInput\n              onChangeText={newTextInputValue => {\n                const textInputValue = newTextInputValue;\n                try {\n                  setTextInputValue(textInputValue);\n                } catch (err) {\n                  console.error(err);\n                }\n              }}\n              placeholder={'Medio de Transporte'}\n              placeholderTextColor={theme.colors.strong}\n              style={StyleSheet.applyWidth(\n                {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.divider,\n                  borderLeftWidth: 1,\n                  borderRadius: 8,\n                  borderRightWidth: 1,\n                  borderTopWidth: 1,\n                  paddingBottom: 8,\n                  paddingLeft: 8,\n                  paddingRight: 8,\n                  paddingTop: 8,\n                  width: 300,\n                },\n                dimensions.width\n              )}\n              value={textInputValue}\n            />\n          </View>\n        </Stack>\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZEditarPerfilScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  CircleImage,\n  Container,\n  Divider,\n  Row,\n  ScreenContainer,\n  Stack,\n  withTheme,\n} from '@draftbit/ui';\nimport { Text, View, useWindowDimensions } from 'react-native';\n\nconst ZZZPerfilScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n\n  return (\n    <ScreenContainer hasSafeArea={true} hasTopSafeArea={true}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Feather/edit',\n            nav: 'Options',\n            screen: 'EditarPerfilScreen',\n          }}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <Container\n        backgroundImageResizeMode={'cover'}\n        style={StyleSheet.applyWidth(\n          {\n            backgroundColor: theme.colors.primary,\n            height: '30%',\n            justifyContent: 'center',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Container\n          backgroundImageResizeMode={'contain'}\n          style={StyleSheet.applyWidth(\n            {\n              alignContent: 'stretch',\n              alignSelf: 'center',\n              height: 200,\n              width: 345,\n            },\n            dimensions.width\n          )}\n        >\n          <Container\n            backgroundImageResizeMode={'cover'}\n            style={StyleSheet.applyWidth(\n              {\n                alignItems: 'flex-start',\n                height: 150,\n                justifyContent: 'center',\n                paddingLeft: 10,\n                paddingRight: 10,\n              },\n              dimensions.width\n            )}\n          >\n            <Row alignItems={'center'} justifyContent={'center'}>\n              <CircleImage\n                size={150}\n                source={Images.Cat}\n                style={StyleSheet.applyWidth(\n                  { marginRight: 16 },\n                  dimensions.width\n                )}\n              />\n              <View\n                style={StyleSheet.applyWidth(\n                  { minHeight: 50 },\n                  dimensions.width\n                )}\n              >\n                <Text\n                  style={StyleSheet.applyWidth(\n                    { color: theme.colors.background, fontSize: 18 },\n                    dimensions.width\n                  )}\n                >\n                  {'Hola'}\n                </Text>\n\n                <Text\n                  style={StyleSheet.applyWidth(\n                    { color: theme.colors.background, fontSize: 18 },\n                    dimensions.width\n                  )}\n                >\n                  {'Daniel Macchiavello!'}\n                </Text>\n              </View>\n            </Row>\n          </Container>\n        </Container>\n      </Container>\n\n      <Container\n        backgroundImageResizeMode={'cover'}\n        style={StyleSheet.applyWidth(\n          {\n            height: '63%',\n            paddingBottom: 25,\n            paddingLeft: 25,\n            paddingRight: 25,\n            paddingTop: 25,\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Stack alignItems={'flex-start'} justifyContent={'flex-start'}>\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Nombre y Apellido'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Tipo de Documento'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Número de Documento'}\n            </Text>\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={20}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Teléfono'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Dirección Actual'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Mail Personal'}\n            </Text>\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={10}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { alignContent: 'stretch', marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Nombre de Contacto'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Número de Contacto'}\n            </Text>\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={10}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View\n            style={StyleSheet.applyWidth(\n              { marginBottom: 10, minHeight: 50 },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Número de Obra Social o Prepaga'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Número de Teléfono'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20, marginBottom: 2 },\n                dimensions.width\n              )}\n            >\n              {'Número de Carnet'}\n            </Text>\n          </View>\n          <Divider\n            color={theme.colors.divider}\n            height={10}\n            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}\n          />\n          <View>\n            <Text\n              style={StyleSheet.applyWidth(\n                { color: theme.colors.strong, fontSize: 20 },\n                dimensions.width\n              )}\n            >\n              {'Medio de Transporte'}\n            </Text>\n          </View>\n        </Stack>\n      </Container>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZPerfilScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport { Divider, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { ScrollView, Text, View, useWindowDimensions } from 'react-native';\n\nconst ZZZRequerimientosScreen = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const [screenName, setScreenName] = React.useState('Requerimientos');\n  const resetStackNav = stack => {\n    props.navigation.reset({\n      index: 0,\n      routes: [{ name: stack }],\n    });\n  };\n\n  return (\n    <ScreenContainer hasSafeArea={true}>\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <Divider color={theme.colors.background} height={30} />\n      <ScrollView\n        bounces={true}\n        showsVerticalScrollIndicator={true}\n        style={StyleSheet.applyWidth(\n          { height: '70%', width: '100%' },\n          dimensions.width\n        )}\n        contentContainerStyle={StyleSheet.applyWidth(\n          { alignContent: 'center', alignItems: 'center' },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignContent: 'stretch',\n              alignItems: 'center',\n              backgroundColor: theme.colors.primary,\n              borderRadius: 10,\n              justifyContent: 'space-evenly',\n              marginBottom: 30,\n              minHeight: 100,\n              width: 310,\n            },\n            dimensions.width\n          )}\n        >\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                alignSelf: 'center',\n                marginBottom: 18,\n                marginLeft: 18,\n                marginRight: 18,\n                marginTop: 18,\n                minHeight: 50,\n              },\n              dimensions.width\n            )}\n          >\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontSize: 22,\n                  textAlign: 'justify',\n                },\n                dimensions.width\n              )}\n            >\n              {\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin rhoncus nec magna in tincidunt. Sed ut tempor nisl. Etiam sit amet ligula semper, vulputate nisl vel, faucibus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce fringilla. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin rhoncus nec magna in tincidunt. Sed ut tempor nisl. Etiam sit amet ligula semper, vulputate nisl vel, faucibus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce fringilla.\\nVestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce fringilla.'\n              }\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZRequerimientosScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  DatePicker,\n  Row,\n  ScreenContainer,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst ZZZTurnoActualScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Turno Actual');\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          borderBottomWidth: 0,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderTopWidth: 0,\n          height: '55%',\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            backgroundColor: theme.colors.primary,\n            borderRadius: 9,\n            height: '12%',\n            justifyContent: 'center',\n            marginBottom: 5,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 20,\n            minHeight: 50,\n            overflow: 'hidden',\n          },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.primary,\n              borderColor: theme.colors.primary,\n              justifyContent: 'center',\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 18,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'FECHA'}\n          </Text>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              backgroundColor: theme.colors.secondary,\n              borderColor: theme.colors.primary,\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Row alignItems={'flex-start'} justifyContent={'space-around'}>\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'Inicio: 23/06/2021'}\n            </Text>\n\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'Fin: 30/06/2021'}\n            </Text>\n          </Row>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'flex-start',\n            justifyContent: 'flex-end',\n            marginBottom: 15,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 25,\n            minHeight: 20,\n          },\n          dimensions.width\n        )}\n      >\n        <Text\n          style={StyleSheet.applyWidth(\n            {\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 16,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n        >\n          {'Seleccione la fecha de cambio'}\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            backgroundColor: theme.colors.primary,\n            height: '8%',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <View>\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 22,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'Mie, Jun 23'}\n          </Text>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '40%',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'cover'}\n          source={Images.Screenshot28}\n          style={StyleSheet.applyWidth(\n            { height: 320, marginTop: 5, width: '100%' },\n            dimensions.width\n          )}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '14%',\n            justifyContent: 'center',\n            marginTop: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <DatePicker\n          date={date}\n          label={'Date'}\n          leftIconMode={'inset'}\n          mode={'date'}\n          onDateChange={newDatePickerSolidValue => {\n            const date = newDatePickerSolidValue;\n            try {\n              setDate(date);\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          type={'solid'}\n        />\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Main');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth({ marginTop: 8 }, dimensions.width)}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              { color: theme.colors.secondary, fontSize: 16 },\n              dimensions.width\n            )}\n          >\n            {'Aceptar'}\n          </Text>\n        </Touchable>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZTurnoActualScreen);\n","import React from 'react';\nimport * as CustomCode from '../CustomCode';\nimport Images from '../config/Images';\nimport * as Utils from '../utils';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport {\n  DatePicker,\n  Icon,\n  Row,\n  ScreenContainer,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { Image, Text, View, useWindowDimensions } from 'react-native';\n\nconst ZZZTurnoCambiarScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const [screenName, setScreenName] = React.useState('Cambiar turno');\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <ScreenContainer\n      hasSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        {\n          borderBottomWidth: 0,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderTopWidth: 0,\n          height: '55%',\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n        },\n        dimensions.width\n      )}\n    >\n      <Utils.CustomCodeErrorBoundary>\n        <CustomCode.DigicardScreenHeader\n          {...props}\n          right={{\n            icon: 'Ionicons/home-outline',\n            nav: 'Main',\n            screen: 'InicioScreen',\n          }}\n          title={screenName}\n        />\n      </Utils.CustomCodeErrorBoundary>\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignSelf: 'center',\n            backgroundColor: theme.colors.primary,\n            borderRadius: 9,\n            height: '12%',\n            justifyContent: 'center',\n            marginBottom: 5,\n            marginTop: 20,\n            overflow: 'hidden',\n            width: 350,\n          },\n          dimensions.width\n        )}\n      >\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.light,\n              borderColor: theme.colors.primary,\n              justifyContent: 'center',\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Row alignItems={'flex-start'} justifyContent={'flex-start'}>\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                },\n                dimensions.width\n              )}\n            >\n              {'SELECCIONE EL TURNO'}\n            </Text>\n            <Icon\n              color={theme.colors.background}\n              name={'AntDesign/downcircleo'}\n              size={24}\n              style={StyleSheet.applyWidth(\n                { marginLeft: 13 },\n                dimensions.width\n              )}\n            />\n          </Row>\n        </View>\n\n        <View\n          style={StyleSheet.applyWidth(\n            {\n              alignItems: 'center',\n              backgroundColor: theme.colors.secondary,\n              borderColor: theme.colors.primary,\n              minHeight: 50,\n            },\n            dimensions.width\n          )}\n        >\n          <Row alignItems={'flex-end'} justifyContent={'space-around'}>\n            <Text\n              style={StyleSheet.applyWidth(\n                {\n                  color: theme.colors.background,\n                  fontFamily: 'System',\n                  fontSize: 18,\n                  fontWeight: '500',\n                  marginTop: 10,\n                },\n                dimensions.width\n              )}\n            >\n              {'SELECCIONE EL MOTIVO'}\n            </Text>\n            <Icon\n              color={theme.colors.background}\n              name={'AntDesign/downcircleo'}\n              size={24}\n              style={StyleSheet.applyWidth(\n                { marginLeft: 10, marginTop: 10 },\n                dimensions.width\n              )}\n            />\n          </Row>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'flex-start',\n            height: 0,\n            justifyContent: 'flex-end',\n            marginBottom: 15,\n            marginLeft: 15,\n            marginRight: 15,\n            marginTop: 25,\n            minHeight: 20,\n          },\n          dimensions.width\n        )}\n      >\n        <Text\n          style={StyleSheet.applyWidth(\n            {\n              color: theme.colors.strong,\n              fontFamily: 'System',\n              fontSize: 16,\n              fontWeight: '700',\n            },\n            dimensions.width\n          )}\n        >\n          {'Seleccione la fecha de cambio'}\n        </Text>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignItems: 'center',\n            backgroundColor: theme.colors.primary,\n            height: '8%',\n            justifyContent: 'center',\n          },\n          dimensions.width\n        )}\n      >\n        <View>\n          <Text\n            style={StyleSheet.applyWidth(\n              {\n                color: theme.colors.background,\n                fontFamily: 'System',\n                fontSize: 22,\n                fontWeight: '500',\n              },\n              dimensions.width\n            )}\n          >\n            {'Mie, Jun 23'}\n          </Text>\n        </View>\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '40%',\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <Image\n          resizeMode={'cover'}\n          source={Images.Screenshot28}\n          style={StyleSheet.applyWidth(\n            { height: 320, marginTop: 5, width: '100%' },\n            dimensions.width\n          )}\n        />\n      </View>\n\n      <View\n        style={StyleSheet.applyWidth(\n          {\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            height: '14%',\n            justifyContent: 'center',\n            marginTop: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            width: '100%',\n          },\n          dimensions.width\n        )}\n      >\n        <DatePicker\n          date={date}\n          label={'Date'}\n          leftIconMode={'inset'}\n          mode={'date'}\n          onDateChange={newDatePickerSolidValue => {\n            const date = newDatePickerSolidValue;\n            try {\n              setDate(date);\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          type={'solid'}\n        />\n        <Touchable\n          onPress={() => {\n            try {\n              navigation.navigate('Main');\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n          style={StyleSheet.applyWidth({ marginTop: 8 }, dimensions.width)}\n        >\n          <Text\n            style={StyleSheet.applyWidth(\n              { color: theme.colors.secondary, fontSize: 16 },\n              dimensions.width\n            )}\n          >\n            {'Aceptar'}\n          </Text>\n        </Touchable>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ZZZTurnoCambiarScreen);\n","import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport { systemWeights } from 'react-native-typography';\nimport { Icon, Touchable } from '@draftbit/ui';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport theme from './themes/Modern.js';\nimport LinkingConfiguration from './LinkingConfiguration.js';\nimport * as GlobalVariables from './config/GlobalVariableContext';\n\nimport AboutScreen from './screens/AboutScreen';\nimport ActualizacionDeDatosScreen from './screens/ActualizacionDeDatosScreen';\nimport AprobacionesScreen from './screens/AprobacionesScreen';\nimport BienvenidoScreen from './screens/BienvenidoScreen';\nimport BlankScreen from './screens/BlankScreen';\nimport CompletaInicioSessionScreen from './screens/CompletaInicioSessionScreen';\nimport ConsultaComedorScreen from './screens/ConsultaComedorScreen';\nimport ConsultaDocumentosScreen from './screens/ConsultaDocumentosScreen';\nimport ConsultaFichadasScreen from './screens/ConsultaFichadasScreen';\nimport ConsultaHorasExtrasScreen from './screens/ConsultaHorasExtrasScreen';\nimport ConsultaSolicitudesScreen from './screens/ConsultaSolicitudesScreen';\nimport ConsultaSolicitudesScreenOLDScreen from './screens/ConsultaSolicitudesScreenOLDScreen';\nimport ConsultasScreen from './screens/ConsultasScreen';\nimport DetalleDocumentoScreen from './screens/DetalleDocumentoScreen';\nimport DevScreen from './screens/DevScreen';\nimport IniciarSesionScreen from './screens/IniciarSesionScreen';\nimport InicioScreen from './screens/InicioScreen';\nimport NotificacionesScreen from './screens/NotificacionesScreen';\nimport NuevoUsuarioScreen from './screens/NuevoUsuarioScreen';\nimport PermisoDeCamaraScreen from './screens/PermisoDeCamaraScreen';\nimport PermisoDeContactosScreen from './screens/PermisoDeContactosScreen';\nimport PermisoDeMicrofonoScreen from './screens/PermisoDeMicrofonoScreen';\nimport PermisoDeNotificacionesScreen from './screens/PermisoDeNotificacionesScreen';\nimport PreviewCambioTurnoScreen from './screens/PreviewCambioTurnoScreen';\nimport SolicitudCambioDeTurnoScreen from './screens/SolicitudCambioDeTurnoScreen';\nimport SolicitudEPPScreen from './screens/SolicitudEPPScreen';\nimport SolicitudPermisoAusenciaScreen from './screens/SolicitudPermisoAusenciaScreen';\nimport SolicitudRetiroAnticipadoScreen from './screens/SolicitudRetiroAnticipadoScreen';\nimport SolicitudVacacionesScreen from './screens/SolicitudVacacionesScreen';\nimport SolicitudesScreen from './screens/SolicitudesScreen';\nimport YYYConsultaPresentismoScreen from './screens/YYYConsultaPresentismoScreen';\nimport YYYExcelenciaScreen from './screens/YYYExcelenciaScreen';\nimport YYYMeritoScreen from './screens/YYYMeritoScreen';\nimport YYYNoMeAdhieroScreen from './screens/YYYNoMeAdhieroScreen';\nimport YYYNotificacionesRespuestasScreen from './screens/YYYNotificacionesRespuestasScreen';\nimport YYYOpcionesScreen from './screens/YYYOpcionesScreen';\nimport YYYSiMeAdhieroScreen from './screens/YYYSiMeAdhieroScreen';\nimport ZZZAprobacionRespuestaScreen from './screens/ZZZAprobacionRespuestaScreen';\nimport ZZZAsuntoScreen from './screens/ZZZAsuntoScreen';\nimport ZZZAsuntosScreen from './screens/ZZZAsuntosScreen';\nimport ZZZConsultaComedorScreenOLDScreen from './screens/ZZZConsultaComedorScreenOLDScreen';\nimport ZZZConsultaReciboDeHaberesScreen from './screens/ZZZConsultaReciboDeHaberesScreen';\nimport ZZZEditarPerfilScreen from './screens/ZZZEditarPerfilScreen';\nimport ZZZPerfilScreen from './screens/ZZZPerfilScreen';\nimport ZZZRequerimientosScreen from './screens/ZZZRequerimientosScreen';\nimport ZZZTurnoActualScreen from './screens/ZZZTurnoActualScreen';\nimport ZZZTurnoCambiarScreen from './screens/ZZZTurnoCambiarScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction Auth() {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"IniciarSesionScreen\"\n      screenOptions={{ headerMode: 'none' }}\n    >\n      <Stack.Screen\n        name=\"IniciarSesionScreen\"\n        component={IniciarSesionScreen}\n        options={{\n          title: 'IniciarSesionScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"NuevoUsuarioScreen\"\n        component={NuevoUsuarioScreen}\n        options={{\n          title: 'NuevoUsuarioScreen',\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction Main() {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"InicioScreen\"\n      screenOptions={{ headerMode: 'none', headerTitle: ' ' }}\n    >\n      <Stack.Screen\n        name=\"YYYMeritoScreen\"\n        component={YYYMeritoScreen}\n        options={{\n          title: 'YYY_MeritoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"YYYConsultaPresentismoScreen\"\n        component={YYYConsultaPresentismoScreen}\n        options={{\n          title: 'YYY_ConsultaPresentismoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"SolicitudVacacionesScreen\"\n        component={SolicitudVacacionesScreen}\n        options={{\n          title: 'SolicitudVacacionesScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ActualizacionDeDatosScreen\"\n        component={ActualizacionDeDatosScreen}\n        options={{\n          title: 'ActualizacionDeDatosScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZTurnoActualScreen\"\n        component={ZZZTurnoActualScreen}\n        options={{\n          title: 'ZZZ_TurnoActualScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZConsultaReciboDeHaberesScreen\"\n        component={ZZZConsultaReciboDeHaberesScreen}\n        options={{\n          title: 'ZZZ_ConsultaReciboDeHaberesScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZAsuntoScreen\"\n        component={ZZZAsuntoScreen}\n        options={{\n          title: 'ZZZ_AsuntoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZTurnoCambiarScreen\"\n        component={ZZZTurnoCambiarScreen}\n        options={{\n          title: 'ZZZ_TurnoCambiarScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZAprobacionRespuestaScreen\"\n        component={ZZZAprobacionRespuestaScreen}\n        options={{\n          title: 'ZZZ_AprobacionRespuestaScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"YYYExcelenciaScreen\"\n        component={YYYExcelenciaScreen}\n        options={{\n          title: 'YYY_ExcelenciaScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"YYYNoMeAdhieroScreen\"\n        component={YYYNoMeAdhieroScreen}\n        options={{\n          title: 'YYY_NoMeAdhieroScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"YYYSiMeAdhieroScreen\"\n        component={YYYSiMeAdhieroScreen}\n        options={{\n          title: 'YYY_SiMeAdhieroScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"InicioScreen\"\n        component={InicioScreen}\n        options={{\n          title: 'InicioScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultaFichadasScreen\"\n        component={ConsultaFichadasScreen}\n        options={{\n          title: 'ConsultaFichadasScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"SolicitudesScreen\"\n        component={SolicitudesScreen}\n        options={{\n          title: 'SolicitudesScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZRequerimientosScreen\"\n        component={ZZZRequerimientosScreen}\n        options={{\n          title: 'ZZZ_RequerimientosScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"PreviewCambioTurnoScreen\"\n        component={PreviewCambioTurnoScreen}\n        options={{\n          title: 'PreviewCambioTurno',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZAsuntosScreen\"\n        component={ZZZAsuntosScreen}\n        options={{\n          title: 'ZZZ_AsuntosScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultaHorasExtrasScreen\"\n        component={ConsultaHorasExtrasScreen}\n        options={{\n          title: 'ConsultaHorasExtrasScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"SolicitudCambioDeTurnoScreen\"\n        component={SolicitudCambioDeTurnoScreen}\n        options={{\n          title: 'SolicitudCambioDeTurnoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"SolicitudPermisoAusenciaScreen\"\n        component={SolicitudPermisoAusenciaScreen}\n        options={{\n          title: 'SolicitudPermisoAusenciaScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"SolicitudRetiroAnticipadoScreen\"\n        component={SolicitudRetiroAnticipadoScreen}\n        options={{\n          title: 'SolicitudRetiroAnticipadoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"SolicitudEPPScreen\"\n        component={SolicitudEPPScreen}\n        options={{\n          title: 'SolicitudEPPScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"AprobacionesScreen\"\n        component={AprobacionesScreen}\n        options={{\n          title: 'AprobacionesScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultaSolicitudesScreenOLDScreen\"\n        component={ConsultaSolicitudesScreenOLDScreen}\n        options={{\n          title: 'ConsultaSolicitudesScreen_OLD',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultasScreen\"\n        component={ConsultasScreen}\n        options={{\n          title: 'ConsultasScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultaComedorScreen\"\n        component={ConsultaComedorScreen}\n        options={{\n          title: 'ConsultaComedorScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"AboutScreen\"\n        component={AboutScreen}\n        options={{\n          title: 'AboutScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"DevScreen\"\n        component={DevScreen}\n        options={{\n          title: 'DevScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZConsultaComedorScreenOLDScreen\"\n        component={ZZZConsultaComedorScreenOLDScreen}\n        options={{\n          title: 'ZZZ_ConsultaComedorScreenOLD',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultaDocumentosScreen\"\n        component={ConsultaDocumentosScreen}\n        options={{\n          title: 'ConsultaDocumentosScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"DetalleDocumentoScreen\"\n        component={DetalleDocumentoScreen}\n        options={{\n          title: 'DetalleDocumentoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ConsultaSolicitudesScreen\"\n        component={ConsultaSolicitudesScreen}\n        options={{\n          title: 'ConsultaSolicitudesScreen',\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction Notifications() {\n  return (\n    <Stack.Navigator screenOptions={{ headerMode: 'none', headerTitle: ' ' }}>\n      <Stack.Screen\n        name=\"YYYNotificacionesRespuestasScreen\"\n        component={YYYNotificacionesRespuestasScreen}\n        options={{\n          title: 'YYY_NotificacionesRespuestasScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"NotificacionesScreen\"\n        component={NotificacionesScreen}\n        options={{\n          title: 'NotificacionesScreen',\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction Options() {\n  return (\n    <Stack.Navigator screenOptions={{ headerMode: 'none', headerTitle: ' ' }}>\n      <Stack.Screen\n        name=\"ZZZEditarPerfilScreen\"\n        component={ZZZEditarPerfilScreen}\n        options={{\n          title: 'ZZZ_EditarPerfilScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"ZZZPerfilScreen\"\n        component={ZZZPerfilScreen}\n        options={{\n          title: 'ZZZ_PerfilScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"YYYOpcionesScreen\"\n        component={YYYOpcionesScreen}\n        options={{\n          title: 'YYY_OpcionesScreen',\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction Permissions() {\n  return (\n    <Stack.Navigator screenOptions={{ headerMode: 'none' }}>\n      <Stack.Screen\n        name=\"PermisoDeCamaraScreen\"\n        component={PermisoDeCamaraScreen}\n        options={{\n          title: 'PermisoDeCamaraScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"PermisoDeMicrofonoScreen\"\n        component={PermisoDeMicrofonoScreen}\n        options={{\n          title: 'PermisoDeMicrofonoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"BienvenidoScreen\"\n        component={BienvenidoScreen}\n        options={{\n          title: 'BienvenidoScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"PermisoDeContactosScreen\"\n        component={PermisoDeContactosScreen}\n        options={{\n          title: 'PermisoDeContactosScreen',\n        }}\n      />\n      <Stack.Screen\n        name=\"PermisoDeNotificacionesScreen\"\n        component={PermisoDeNotificacionesScreen}\n        options={{\n          title: 'PermisoDeNotificaciones',\n        }}\n      />\n      <Stack.Screen\n        name=\"CompletaInicioSessionScreen\"\n        component={CompletaInicioSessionScreen}\n        options={{\n          title: 'CompletaInicioSessionScreen',\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function RootAppNavigator() {\n  return (\n    <NavigationContainer linking={LinkingConfiguration}>\n      <Stack.Navigator\n        initialRouteName=\"Auth\"\n        screenOptions={{\n          headerMode: 'none',\n          headerTitleStyle: theme.typography.custom26,\n        }}\n      >\n        <Stack.Screen\n          name=\"BlankScreen\"\n          component={BlankScreen}\n          options={{\n            title: 'Blank',\n          }}\n        />\n        <Stack.Screen name=\"Auth\" component={Auth} />\n        <Stack.Screen name=\"Main\" component={Main} />\n        <Stack.Screen name=\"Notifications\" component={Notifications} />\n        <Stack.Screen name=\"Options\" component={Options} />\n        <Stack.Screen name=\"Permissions\" component={Permissions} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","import * as React from 'react';\nimport AppNavigator from './AppNavigator2';\nimport DropdownAlert from 'react-native-dropdownalert';\nimport UserInactivity from 'react-native-user-inactivity';\nimport * as GlobalVariables from './config/GlobalVariableContext';\nimport * as CustomCode from './CustomCode.js';\n\nexport default function RootAppNavigator() {\n  const INACTIVITY_TIMEOUT = 50000;\n  const REACTION_TIMEOUT = 10000;\n  const TESTING = false;\n\n  const [inactivityWarning, setInactivityWarning] = React.useState(false);\n  const [timer, setTimer] = React.useState(INACTIVITY_TIMEOUT);\n  const [timeoutHandle, setTimeoutHandle] = React.useState(null);\n\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const Constants = GlobalVariables.useValues();\n\n  React.useEffect(() => {\n\n    if ((TESTING || CustomCode.Platform.OS === 'web') && Constants['AUTH_HEADER']?.length) {\n      if (inactivityWarning) {\n        CustomCode.DropDownHolder?.getDropDown()?.alertWithType(\n          'warn',\n          '¿ Estás ahi ?',\n          `No detectamos actividad, toca la pantalla en cualquier lado o tu sesión se cerrará en ${REACTION_TIMEOUT / 1000} segundos`,\n          null,\n          REACTION_TIMEOUT\n        );\n\n        console.log('timer started');\n        setTimeoutHandle(setTimeout(() => {\n          setGlobalVariableValue({\n            key: 'AUTH_HEADER',\n            value: '',\n          });\n\n          CustomCode.getNavigator().navigate('Auth', {\n            screen: 'IniciarSesionScreen',\n          });\n        }, REACTION_TIMEOUT));\n      }\n      else {\n        clearTimeout(timeoutHandle);\n        CustomCode.DropDownHolder?.getDropDown()?.close();\n        console.log('timer cleared');\n      }\n    }\n  },\n    [inactivityWarning]);\n\n  return (\n    TESTING || CustomCode.Platform.OS === 'web'\n      ? (\n        <UserInactivity\n          isActive={true}\n          timeForInactivity={timer}\n          onAction={isActive => setInactivityWarning(!isActive)}\n        >\n          <DropdownAlert\n            closeInterval={null}\n            zIndex={10}\n            ref={dropRef => {\n              CustomCode.DropDownHolder.setDropDown(dropRef);\n            }}\n          />\n          <AppNavigator />\n        </UserInactivity>\n      )\n      : (\n        <>\n          <DropdownAlert\n            closeInterval={null}\n            zIndex={10}\n            ref={dropRef => {\n              CustomCode.DropDownHolder.setDropDown(dropRef);\n            }}\n          />\n          <AppNavigator />\n        </>\n      )\n  );\n}\n","import { Image } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  Foundation,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  SimpleLineIcons,\n} from '@expo/vector-icons';\n\nimport IMAGES from './Images.js';\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nfunction cacheFonts(fonts) {\n  return fonts.map(font => Font.loadAsync(font));\n}\n\nexport default function cacheAssetsAsync() {\n  const imageAssets = cacheImages(Object.values(IMAGES));\n  const iconAssets = cacheFonts([\n    AntDesign.font,\n    Entypo.font,\n    Feather.font,\n    FontAwesome.font,\n    Foundation.font,\n    Ionicons.font,\n    MaterialCommunityIcons.font,\n    MaterialIcons.font,\n    SimpleLineIcons.font,\n  ]);\n\n  return Promise.all([...imageAssets, ...iconAssets]);\n}\n","import * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport * as SplashScreen from 'expo-splash-screen';\nimport {\n  SafeAreaProvider,\n  initialWindowMetrics,\n} from 'react-native-safe-area-context';\nimport { View, Text, ActivityIndicator, AppState } from 'react-native';\nimport { Provider as ThemeProvider } from '@draftbit/ui';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport AppNavigator from './AppNavigator';\nimport Modern from './themes/Modern.js';\nimport cacheAssetsAsync from './config/cacheAssetsAsync';\nimport { GlobalVariableProvider } from './config/GlobalVariableContext';\nimport { useFonts } from 'expo-font';\nSplashScreen.preventAutoHideAsync();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const [areAssetsCached, setAreAssetsCached] = React.useState(false);\n\n  const [fontsLoaded] = useFonts({\n    Montserrat_500Medium:\n      'https://fonts.gstatic.com/s/montserrat/v26/JTUHjIg1_i6t8kCHKm4532VJOt5-QNFgpCtZ6Ew-Y3tcoqK5.ttf',\n    Montserrat_600SemiBold:\n      'https://fonts.gstatic.com/s/montserrat/v26/JTUHjIg1_i6t8kCHKm4532VJOt5-QNFgpCu170w-Y3tcoqK5.ttf',\n  });\n  const [fontsTimedOut, setFontsTimedOut] = React.useState(false);\n  const [fontTimer, setFontTimer] = React.useState(null);\n  React.useEffect(() => {\n    if (fontsLoaded && fontTimer) {\n      clearTimeout(fontTimer);\n      setFontsTimedOut(false);\n    }\n    if (!fontsLoaded && !fontTimer) {\n      const timer = setTimeout(() => {\n        console.warn('Timed out waiting for fonts to load');\n        setFontsTimedOut(true);\n      }, 10000);\n      setFontTimer(timer);\n      return () => clearTimeout(timer);\n    }\n  }, [fontsLoaded, fontTimer]);\n\n  React.useEffect(() => {\n    async function prepare() {\n      try {\n        await cacheAssetsAsync();\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setAreAssetsCached(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n  const isReady = areAssetsCached && (fontsLoaded || fontsTimedOut);\n  const onLayoutRootView = React.useCallback(async () => {\n    if (isReady) {\n      await SplashScreen.hideAsync();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <SafeAreaProvider\n      initialMetrics={initialWindowMetrics}\n      onLayout={onLayoutRootView}\n    >\n      <GlobalVariableProvider>\n        <QueryClientProvider client={queryClient}>\n          <ThemeProvider theme={Modern}>\n            <AppNavigator />\n          </ThemeProvider>\n        </QueryClientProvider>\n      </GlobalVariableProvider>\n    </SafeAreaProvider>\n  );\n};\n\nexport default App;\n","//******* FILE IS COPIED FROM ../builder/src/utilities/StyleSheet.js ******\n//************************* DO NOT EDIT BY HAND ************************\nexport const create = styles => styles;\n\n// Like StyleSheet.compose, but concatenates shared keys' values into arrays.\nexport const compose = (style1, style2) => {\n  const res = { ...style1 };\n  if (!style1) {\n    return style2;\n  }\n  if (!style2) {\n    return style1;\n  }\n  for (const [k, v] of Object.entries(style2)) {\n    let resV = res[k];\n    if (resV === undefined) {\n      res[k] = v;\n    } else if (Array.isArray(resV) && Array.isArray(v)) {\n      res[k] = resV.concat(v);\n    } else if (Array.isArray(resV)) {\n      res[k] = resV.concat([v]);\n    } else if (Array.isArray(v)) {\n      res[k] = [resV].concat(v);\n    } else {\n      res[k] = [resV, v];\n    }\n  }\n  return res;\n};\n\nconst isValidStyleValue = value =>\n  value !== \"\" && [\"string\", \"number\"].includes(typeof value);\n\n// Given a window width, convert a the style to a StyleSheet style, using values from\n// the highest and most recent minWidth for each style key, which fits within the minWidth.\n//\n// Also filters to output specific style keys based on the 'styleKeys' argument. Returns all if undefined\nexport const applyWidth = (style, width, styleKeys) => {\n  const res = {};\n  if (!style) {\n    return {};\n  }\n  for (const [k, v] of Object.entries(style)) {\n    if (Array.isArray(styleKeys) && !styleKeys.includes(k)) {\n      continue;\n    }\n\n    let resV;\n    // If there is an array of values, choose the last one with the largest minWidth\n    // which fits in the current screen width\n    if (Array.isArray(v)) {\n      let maxMinWidth = 0;\n      v.filter(innerV => innerV !== undefined && innerV !== null).forEach(\n        innerV => {\n          const minWidth = innerV.minWidth ?? 0;\n          const value = innerV.value ?? innerV;\n          if (\n            isValidStyleValue(value) &&\n            minWidth <= width &&\n            minWidth >= maxMinWidth\n          ) {\n            resV = value;\n            maxMinWidth = minWidth;\n          }\n        }\n      );\n      // Otherwise, check if the value fits in the current screen width\n    } else if (v !== undefined && v !== null) {\n      const minWidth = v.minWidth ?? 0;\n      const value = v.value ?? v;\n      if (isValidStyleValue(value) && minWidth <= width) {\n        resV = value;\n      }\n    }\n    if (resV !== undefined && resV !== null) {\n      res[k] = resV;\n    }\n  }\n  return res;\n};\n","var map = {\n\t\"./af\": 26735,\n\t\"./af.js\": 26735,\n\t\"./ar\": 79343,\n\t\"./ar-dz\": 55300,\n\t\"./ar-dz.js\": 55300,\n\t\"./ar-kw\": 77947,\n\t\"./ar-kw.js\": 77947,\n\t\"./ar-ly\": 92882,\n\t\"./ar-ly.js\": 92882,\n\t\"./ar-ma\": 43030,\n\t\"./ar-ma.js\": 43030,\n\t\"./ar-sa\": 22971,\n\t\"./ar-sa.js\": 22971,\n\t\"./ar-tn\": 78662,\n\t\"./ar-tn.js\": 78662,\n\t\"./ar.js\": 79343,\n\t\"./az\": 81672,\n\t\"./az.js\": 81672,\n\t\"./be\": 39027,\n\t\"./be.js\": 39027,\n\t\"./bg\": 19107,\n\t\"./bg.js\": 19107,\n\t\"./bm\": 38932,\n\t\"./bm.js\": 38932,\n\t\"./bn\": 76218,\n\t\"./bn-bd\": 33617,\n\t\"./bn-bd.js\": 33617,\n\t\"./bn.js\": 76218,\n\t\"./bo\": 94527,\n\t\"./bo.js\": 94527,\n\t\"./br\": 53345,\n\t\"./br.js\": 53345,\n\t\"./bs\": 67930,\n\t\"./bs.js\": 67930,\n\t\"./ca\": 60454,\n\t\"./ca.js\": 60454,\n\t\"./cs\": 60562,\n\t\"./cs.js\": 60562,\n\t\"./cv\": 64646,\n\t\"./cv.js\": 64646,\n\t\"./cy\": 71372,\n\t\"./cy.js\": 71372,\n\t\"./da\": 62978,\n\t\"./da.js\": 62978,\n\t\"./de\": 32193,\n\t\"./de-at\": 56365,\n\t\"./de-at.js\": 56365,\n\t\"./de-ch\": 9741,\n\t\"./de-ch.js\": 9741,\n\t\"./de.js\": 32193,\n\t\"./dv\": 10872,\n\t\"./dv.js\": 10872,\n\t\"./el\": 99534,\n\t\"./el.js\": 99534,\n\t\"./en-au\": 68450,\n\t\"./en-au.js\": 68450,\n\t\"./en-ca\": 56996,\n\t\"./en-ca.js\": 56996,\n\t\"./en-gb\": 3864,\n\t\"./en-gb.js\": 3864,\n\t\"./en-ie\": 39472,\n\t\"./en-ie.js\": 39472,\n\t\"./en-il\": 40300,\n\t\"./en-il.js\": 40300,\n\t\"./en-in\": 67078,\n\t\"./en-in.js\": 67078,\n\t\"./en-nz\": 50472,\n\t\"./en-nz.js\": 50472,\n\t\"./en-sg\": 28696,\n\t\"./en-sg.js\": 28696,\n\t\"./eo\": 33550,\n\t\"./eo.js\": 33550,\n\t\"./es\": 59311,\n\t\"./es-do\": 83080,\n\t\"./es-do.js\": 83080,\n\t\"./es-mx\": 77334,\n\t\"./es-mx.js\": 77334,\n\t\"./es-us\": 64336,\n\t\"./es-us.js\": 64336,\n\t\"./es.js\": 59311,\n\t\"./et\": 28067,\n\t\"./et.js\": 28067,\n\t\"./eu\": 88831,\n\t\"./eu.js\": 88831,\n\t\"./fa\": 67981,\n\t\"./fa.js\": 67981,\n\t\"./fi\": 17479,\n\t\"./fi.js\": 17479,\n\t\"./fil\": 20757,\n\t\"./fil.js\": 20757,\n\t\"./fo\": 9510,\n\t\"./fo.js\": 9510,\n\t\"./fr\": 78573,\n\t\"./fr-ca\": 6805,\n\t\"./fr-ca.js\": 6805,\n\t\"./fr-ch\": 74170,\n\t\"./fr-ch.js\": 74170,\n\t\"./fr.js\": 78573,\n\t\"./fy\": 80926,\n\t\"./fy.js\": 80926,\n\t\"./ga\": 60203,\n\t\"./ga.js\": 60203,\n\t\"./gd\": 92975,\n\t\"./gd.js\": 92975,\n\t\"./gl\": 76890,\n\t\"./gl.js\": 76890,\n\t\"./gom-deva\": 24234,\n\t\"./gom-deva.js\": 24234,\n\t\"./gom-latn\": 97577,\n\t\"./gom-latn.js\": 97577,\n\t\"./gu\": 55804,\n\t\"./gu.js\": 55804,\n\t\"./he\": 5377,\n\t\"./he.js\": 5377,\n\t\"./hi\": 99401,\n\t\"./hi.js\": 99401,\n\t\"./hr\": 12435,\n\t\"./hr.js\": 12435,\n\t\"./hu\": 62728,\n\t\"./hu.js\": 62728,\n\t\"./hy-am\": 88093,\n\t\"./hy-am.js\": 88093,\n\t\"./id\": 3717,\n\t\"./id.js\": 3717,\n\t\"./is\": 35187,\n\t\"./is.js\": 35187,\n\t\"./it\": 62667,\n\t\"./it-ch\": 56334,\n\t\"./it-ch.js\": 56334,\n\t\"./it.js\": 62667,\n\t\"./ja\": 62414,\n\t\"./ja.js\": 62414,\n\t\"./jv\": 29359,\n\t\"./jv.js\": 29359,\n\t\"./ka\": 78740,\n\t\"./ka.js\": 78740,\n\t\"./kk\": 9521,\n\t\"./kk.js\": 9521,\n\t\"./km\": 21679,\n\t\"./km.js\": 21679,\n\t\"./kn\": 58554,\n\t\"./kn.js\": 58554,\n\t\"./ko\": 50686,\n\t\"./ko.js\": 50686,\n\t\"./ku\": 75965,\n\t\"./ku.js\": 75965,\n\t\"./ky\": 24780,\n\t\"./ky.js\": 24780,\n\t\"./lb\": 56950,\n\t\"./lb.js\": 56950,\n\t\"./lo\": 9434,\n\t\"./lo.js\": 9434,\n\t\"./lt\": 43681,\n\t\"./lt.js\": 43681,\n\t\"./lv\": 82552,\n\t\"./lv.js\": 82552,\n\t\"./me\": 18473,\n\t\"./me.js\": 18473,\n\t\"./mi\": 862,\n\t\"./mi.js\": 862,\n\t\"./mk\": 18932,\n\t\"./mk.js\": 18932,\n\t\"./ml\": 63174,\n\t\"./ml.js\": 63174,\n\t\"./mn\": 66863,\n\t\"./mn.js\": 66863,\n\t\"./mr\": 10566,\n\t\"./mr.js\": 10566,\n\t\"./ms\": 42215,\n\t\"./ms-my\": 54959,\n\t\"./ms-my.js\": 54959,\n\t\"./ms.js\": 42215,\n\t\"./mt\": 38830,\n\t\"./mt.js\": 38830,\n\t\"./my\": 19336,\n\t\"./my.js\": 19336,\n\t\"./nb\": 48113,\n\t\"./nb.js\": 48113,\n\t\"./ne\": 94005,\n\t\"./ne.js\": 94005,\n\t\"./nl\": 22699,\n\t\"./nl-be\": 2796,\n\t\"./nl-be.js\": 2796,\n\t\"./nl.js\": 22699,\n\t\"./nn\": 29700,\n\t\"./nn.js\": 29700,\n\t\"./oc-lnc\": 39495,\n\t\"./oc-lnc.js\": 39495,\n\t\"./pa-in\": 11217,\n\t\"./pa-in.js\": 11217,\n\t\"./pl\": 98807,\n\t\"./pl.js\": 98807,\n\t\"./pt\": 19221,\n\t\"./pt-br\": 39895,\n\t\"./pt-br.js\": 39895,\n\t\"./pt.js\": 19221,\n\t\"./ro\": 39162,\n\t\"./ro.js\": 39162,\n\t\"./ru\": 37991,\n\t\"./ru.js\": 37991,\n\t\"./sd\": 64518,\n\t\"./sd.js\": 64518,\n\t\"./se\": 64197,\n\t\"./se.js\": 64197,\n\t\"./si\": 40056,\n\t\"./si.js\": 40056,\n\t\"./sk\": 17025,\n\t\"./sk.js\": 17025,\n\t\"./sl\": 20069,\n\t\"./sl.js\": 20069,\n\t\"./sq\": 1961,\n\t\"./sq.js\": 1961,\n\t\"./sr\": 35820,\n\t\"./sr-cyrl\": 20250,\n\t\"./sr-cyrl.js\": 20250,\n\t\"./sr.js\": 35820,\n\t\"./ss\": 97806,\n\t\"./ss.js\": 97806,\n\t\"./sv\": 2833,\n\t\"./sv.js\": 2833,\n\t\"./sw\": 29018,\n\t\"./sw.js\": 29018,\n\t\"./ta\": 51830,\n\t\"./ta.js\": 51830,\n\t\"./te\": 2102,\n\t\"./te.js\": 2102,\n\t\"./tet\": 58711,\n\t\"./tet.js\": 58711,\n\t\"./tg\": 72615,\n\t\"./tg.js\": 72615,\n\t\"./th\": 38373,\n\t\"./th.js\": 38373,\n\t\"./tk\": 43277,\n\t\"./tk.js\": 43277,\n\t\"./tl-ph\": 76249,\n\t\"./tl-ph.js\": 76249,\n\t\"./tlh\": 87413,\n\t\"./tlh.js\": 87413,\n\t\"./tr\": 26726,\n\t\"./tr.js\": 26726,\n\t\"./tzl\": 29131,\n\t\"./tzl.js\": 29131,\n\t\"./tzm\": 45683,\n\t\"./tzm-latn\": 22174,\n\t\"./tzm-latn.js\": 22174,\n\t\"./tzm.js\": 45683,\n\t\"./ug-cn\": 25104,\n\t\"./ug-cn.js\": 25104,\n\t\"./uk\": 83778,\n\t\"./uk.js\": 83778,\n\t\"./ur\": 22753,\n\t\"./ur.js\": 22753,\n\t\"./uz\": 54345,\n\t\"./uz-latn\": 67383,\n\t\"./uz-latn.js\": 67383,\n\t\"./uz.js\": 54345,\n\t\"./vi\": 8201,\n\t\"./vi.js\": 8201,\n\t\"./x-pseudo\": 57395,\n\t\"./x-pseudo.js\": 57395,\n\t\"./yo\": 99359,\n\t\"./yo.js\": 99359,\n\t\"./zh-cn\": 75680,\n\t\"./zh-cn.js\": 75680,\n\t\"./zh-hk\": 89536,\n\t\"./zh-hk.js\": 89536,\n\t\"./zh-mo\": 35088,\n\t\"./zh-mo.js\": 35088,\n\t\"./zh-tw\": 2867,\n\t\"./zh-tw.js\": 2867\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/webdss/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [387], () => (__webpack_require__(15530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["disabledOpacity","roundness","colors","Background","Divider","Error","Light","Light_Inverse","Medium","Medium_Inverse","OptionMenu","OptionSelected","OptionUnselected","Pastel","Primary","Right","Secondary","Strong","Strong_Green","Strong_Inverse","Surface","Tooltip","VeryLight","background","divider","error","light","lightInverse","medium","mediumInverse","optionMenu","optionSelected","optionUnselected","optionmenu","pastel","primary","right","secondary","strong","strongGreen","strongInverse","surface","tooltip","veryLight","typography","body1","_objectSpread","systemWeights","bold","fontSize","letterSpacing","lineHeight","body2","button","caption","fontFamily","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","prefix","Linking","createURL","e","renderLinkingPrefix","enabled","Platform","OS","prefixes","config","screens","Auth","Main","Notifications","Options","Permissions","DeviceVariables","AUTH_HEADER","AppPermissions","ExpoNotifToken","REFRESH_TOKEN","company_name","demoDataDate","demoMode","emp_photo","my_emp_com_id","my_emp_id","perms_got","__env__","GlobalVariableContext","React","GlobalVariableUpdater","tryParseJson","str","JSON","parse","_unused","GlobalVariable","_classCallCheck","_createClass","key","value","_syncToLocalStorage","_asyncToGenerator","values","update","Object","entries","filter","_ref","_slicedToArray","map","_ref3","_ref4","stringify","length","AsyncStorage","multiSet","_x","apply","arguments","_loadLocalStorage","withDefaults","multiGet","keys","_ref5","_ref6","fromEntries","State","state","_ref7","type","payload","defaultValues","__loaded","_defineProperty","GlobalVariableProvider","_ref8","children","_React$useReducer","reducer","initialState","_React$useReducer2","dispatch","_prepare","SplashScreen","prepare","_initialStorageLoader","loadLocalStorage","console","log","err","initialStorageLoader","_syncToAsyncStorage","syncToLocalStorage","syncToAsyncStorage","onLayoutRootView","_jsx","Provider","onLayout","useSetValue","_ref10","useValues","_class","SHOW_CUIL_ERROR","SHOW_EMAIL_ERROR","SHOW_PASSWORD_ERROR","SHOW_PASSWORD_MISMATCH_ERROR","logging","Image20210723111613","require","BarraAzul","UndrawAircraftFbvl","Cat","Image20210630121543","CaritaFeliz","BarraDeProgreso","Image20210521085823","BookbitGradientWallpaper4","BookbitGradientWallpaper","UndrawWinnersAo2o","UndrawPodcastAudienceRe4i5q","ProfilePicturePlaceholder","AppScreenshotPlaceholder","AppIconPlaceholder","LogoDIGI","Image20210706121113","UndrawOpenedReI38e","Destacadas1170954","DigiSSTransp","Nophoto","FlipFlop","HardDisk2562B92FB","Loader2562B92FB","Upload2562B92FB","Download2562B92FB","Wifi25655A4F5","Destacadas1170958","UndrawMailboxReDvds170965","UndrawMailboxReDvds170966","Screenshot23","Screenshot26","Screenshot28","UndrawChecklist","UndrawOvertime","UndrawRequest01","UndrawRequest","UndrawWorking","UndrawHamburger","UndrawLunch","UndrawSearch01","UndrawSearch02","UndrawSearch03","UndrawDoctor","UndrawClothes02","UndrawPersonData","UndrawOut01","UndrawPunch04","UndrawPunch01","PermissionsNotification","PermissionsCamera","PermissionsContacts","PermissionsCalendar","PermissionsMicrophone","DisponibleEnApple","DisponibleEnGooglePlay","QrGoogle","QrApple","__dropDown","__navigator","rnModal","Modal","rnSegmentedControlTab","SegmentedControlTab","GlobalImages","Images","_Variables","getNavigator","hideSplash","LogBox","ignoreLogs","delayNav","props","delay","nav","screen","setTimeout","navigation","goBack","navigate","PostResultToast","fetchResult","screenName","undefined","timeout","DropDownHolder","getDropDown","alertWithType","milliseconds","start","Date","getTime","i","sleep","Boolean","setDropDown","dropDown","IsoDateStringToDate","sDate","IsoDateStringToUTCDate","offset","getTimezoneOffset","DateToUtcString","aDate","setHours","toISOString","split","Date2IsoDateString","Date2IsoDateTimeString","Date2String","format","moment","FormatIsoString","IsoString2ShortDate","utcString","getDate","getMonth","dateAdd","days","newDate","VariablesContainer","vars","InitializeCurrentDate","consts","cDate","DigicardScreenHeader","theme","left","title","gvars","GlobalVariables","_jsxs","View","style","styles","containerOutterTall","containerOutterShort","backgroundImageResizeMode","DigiHeader","width","marginLeft","onPress","IconButton","icon","size","Image","height","maxHeight","source","resizeMode","marginRight","Text","TextTitle","color","DropdownAlert","closeInterval","zIndex","ref","dropRef","LoadingOverlay","image","message","action","visible","OverlayModal","animationType","transparent","presentationStyle","BlurView","OverlayBlurView","tint","intensity","ImageViewConnecting","ImageViewLoading","backgroundColor","pointerEvents","ImageConnecting","ImageLoading","Touchable","setGlobalVariableValue","OverlayTextConnecting","OverlayTextLoading","Registracion","listData","dataSet","UtcDate2ShortTime","utcDateStr","substr","_Fragment","textAlign","tir_in","tir_out","con_id","found","find","con_name","concept","tir_concept_id","renderMenuItems","items","renderItem","item","OutterView","SurfaceVw","borderRadius","OutterItemVw","InnerIconVw","Icon","name","InnerTextVw","InnerText","mItems","permission","_i$ifNoPerm","rights","p","sec_code_name","per_access","includes","ifNoPerm","FlatList","data","listKey","keyExtractor","index","_ref2","target","renderTouchableItem","MyCustomComponent","StyleSheet","create","emptyView","DssLogo","containerInner","alignContent","alignSelf","paddingTop","flexDirection","justifyContent","alignItems","fontWeight","marginTop","marginBottom","textTransform","opacity","paddingRight","paddingLeft","minHeight","position","flex","margin","flexGrow","flexShrink","flexBasis","Device","ExpoDevice","ExpoConstants","Constants","ExpoNotifications","withTheme","_openCamera","_result$assets","_ref$mediaTypes","mediaTypes","ImagePicker","_ref$allowsEditing","allowsEditing","_ref$cameraType","cameraType","videoMaxDuration","_ref$quality","quality","requestCameraPermissionsAsync","status","alert","result","launchCameraAsync","base64","asset","assets","canceled","uri","mimeType","getMimeTypeFromFilename","FileSystem","readAsStringAsync","encoding","CustomCodeErrorBoundary","_React$Component","_inherits","_super","_createSuper","_this","call","hasError","this","padding","toString","useRef","useEffect","current","dimensions","useWindowDimensions","CustomCode","ScreenContainer","hasSafeArea","scrollable","textDecorationColor","overflow","onLongPress","app","expo","version","nativeAppVersion","getVersion","Button","disabled","loading","handleResponse","res","json","handlers","statusText","text","join","ret","onData","on401","on403","on404","on1xx","isOkStatus","on2xx","on3xx","on4xx","on5xx","useRequestDeleteDELETE","initialArgs","_ref2$handlers","queryClient","useQueryClient","useMutation","args","reqid","fetch","headers","Accept","Authorization","method","then","requestDeleteDELETE","onError","variables","previousValue","setQueryData","onSettled","invalidateQueries","requestQuotaGET","emp_id","useComedor2ByEmpGET","refetchInterval","_ref8$handlers","useQuery","date_from","encodeURIComponent","comedor2ByEmpGET","FetchComedor2ByEmpGET","_ref9","_ref9$onData","_ref9$handlers","isFocused","useIsFocused","prevIsFocused","usePrevious","_useComedor2ByEmpGET","isLoading","refetch","refetchComedor2ByEmp","useComedorByEmpGET","_ref11","_ref11$handlers","comedorByEmpGET","FetchComedorByEmpGET","_ref12","_ref12$onData","_ref12$handlers","_useComedorByEmpGET","refetchComedorByEmp","companyGET","_ref13","com_id","conceptsByEmpGET","_ref16","FetchConceptsByEmpGET","_ref18","_ref18$onData","_ref18$handlers","_useConceptsByEmpGET","_ref17","_ref17$handlers","useConceptsByEmpGET","refetchConceptsByEmp","useDocumentsByEmpGET","_ref26","_ref26$handlers","_ref25","documentsByEmpGET","FetchDocumentsByEmpGET","_ref27","_ref27$onData","_ref27$handlers","_useDocumentsByEmpGET","refetchDocumentsByEmp","useEmployeeGET","_ref29","_ref29$handlers","_ref28","employeeGET","onSuccess","FetchEmployeeGET","_ref30","_ref30$onData","_ref30$handlers","_useEmployeeGET","refetchEmployee","useEmployeePATCH","_ref32$handlers","_ref31","address","birth_date","contact","first_name","health","last_name","mail","phone","transport","body","emp_first_name","emp_last_name","emp_birth_date","emp_mail","emp_phone","emp_address","emp_contact","emp_health","emp_transport","employeePATCH","_ref33","useEmployeeBasicGET","_ref35","_ref35$handlers","_ref34","employeeBasicGET","FetchEmployeeBasicGET","_ref36","_ref36$onData","_ref36$handlers","_useEmployeeBasicGET","refetchEmployeeBasic","employeePhotoGET","_ref37","useEmployeeTokenPATCH","_ref41$handlers","_ref40","emp_token","emp_expo_token","employeeTokenPATCH","_ref42","useEmployeeConfigGET","_ref44","_ref44$handlers","_ref43","employeeConfigGET","FetchEmployeeConfigGET","_ref45","_ref45$onData","_ref45$handlers","_useEmployeeConfigGET","refetchEmployeeConfig","eppArticlesByEmpGET","_ref46","loginPOST","_ref49","email","password","useNotificationPATCH","_ref58$handlers","_ref57","not_id","read","read_date","not_read","not_read_at","notificationPATCH","_ref59","useNotificationsByEmpGET","_ref61","_ref61$handlers","_ref60","limit","notificationsByEmpGET","FetchNotificationsByEmpGET","_ref62","_ref62$onData","_ref62$handlers","_useNotificationsByEm","refetchNotificationsByEmp","permissionsGET","_ref63","reasonsByEmpGET","_ref66","requestFullfillPOST","_ref69","req_fullfill_date","req_id","req_status","req_sup_id","red_req_id","red_emp_id","red_date","red_status","useRequestFullfillPOST","_ref70$handlers","_ref71","useRequestCtuPOST","_ref74$handlers","_ref73","req_ctu_from","req_ctu_rea_id","req_ctu_to","req_ctu_wor_id","req_datetime","req_emp_id","req_date","req_type","requestCtuPOST","_ref75","useRequestEppPOST","_ref78$handlers","_ref77","req_epp_art_id","req_epp_color","req_epp_observ","req_epp_quantity","req_epp_size","requestEppPOST","_ref79","useRequestPyaPOST","_ref82$handlers","_ref81","req_pya_con_id","req_pya_from","req_pya_rea_id","req_pya_to","requestPyaPOST","_ref83","useRequestRysPOST","_ref86$handlers","_ref85","req_rys_con_id","req_rys_from","req_rys_rea_id","req_rys_to","requestRysPOST","_ref87","useRequestVacPOST","_ref90$handlers","_ref89","req_vac_from","req_vac_to","requestVacPOST","_ref91","useRequestsGET","_ref94","_ref94$handlers","_ref93","requestsGET","FetchRequestsGET","_ref95","_ref95$onData","_ref95$handlers","_useRequestsGET","refetchRequests","useRequests2approveGET","_ref97","_ref97$handlers","_ref96","emp_status","num","requests2approveGET","FetchRequests2approveGET","_ref98","_ref98$onData","_ref98$handlers","_useRequests2approveG","refetchRequests2approve","signupPOST","_ref102","cuil","id","timesheetGET","_ref108","date_to","FetchTimesheetGET","_ref110","_ref110$onData","_ref110$handlers","_useTimesheetGET","_ref109","_ref109$handlers","useTimesheetGET","refetchTimesheet","tokenRefreshPOST","_ref111","refreshToken","whoamiGET","_ref116","comid","workschedulesByEmpGET","_ref119","_React$useState","_React$useState2","Transports","_React$useState3","_React$useState4","setIoAction","_React$useState5","_React$useState6","setLoading","_React$useState7","_React$useState8","newAddress","setNewAddress","_React$useState9","_React$useState10","newBirthDate","setNewBirthDate","_React$useState11","_React$useState12","newContact","setNewContact","_React$useState13","_React$useState14","newFirstName","setNewFirstName","_React$useState15","_React$useState16","newHealth","setNewHealth","_React$useState17","_React$useState18","newLastName","setNewLastName","_React$useState19","_React$useState20","newMail","setNewMail","_React$useState21","_React$useState22","newPhone","setNewPhone","_React$useState23","_React$useState24","newPhoto","setNewPhoto","_React$useState25","_React$useState26","newTransport","setNewTransport","_React$useState27","_React$useState28","Date2UTCString","toLocaleDateString","UTCString","dcSSEmployeePATCH","DcSSApi","hasTopSafeArea","fetchScreenActualizacionDeDatosScreenData","aUtcString","tzo","dif","pad","off","Math","floor","abs","newUtcString","UTCString2Date","ActivityIndicator","Utils","KeyboardAwareScrollView","contentContainerStyle","borderBottomWidth","borderColor","borderLeftWidth","borderRightWidth","borderTopWidth","handler","snap","openCameraUtil","TextField","defaultValue","label","leftIconMode","leftIconName","onChangeText","newLastNameValue","underlineColor","newFirstNameValue","newAddressValue","newPhoneNumberValue","newEmailValue","DatePicker","date","locale","mode","onDateChange","newBirthdayValue","newContactValue","newHealthPlanValue","Picker","onValueChange","newTransportValue","options","placeholder","emp_doc_type","emp_doc_number","_yield$dcSSEmployeePA","mutateAsync","postResultToast","itemWidth","setItemWidth","refetchNum","setRefetchNum","requestsType","setRequestsType","showing","setShowing","calcFilter","showOption","renderSwipeableItem","rowData","Surfaceuw","typeVw","statusVw","detailVw","maxWidth","upperDetailVw","empNameVw","upperDetailEmpNameTxt","reqDateTxt","middleDetailVw","middleTwoSectsVw","middleLeftSectsTxt","middleRightSectsTxt","middleEppQuantTxt","middleEppNameVw","middleEppNameTxt","middleEppSizeTxt","lowerDetailVw","lowerDateRange","lowerDateFulfilled","lowerEppColorObsVw","lowerEppColorTxt","lowerEppObsTxt","lowerEppDateFullfilledTxt","lowerDateRangeTxt","lowerDatetimeRangeVw","lowerDatetimeRangeTxt","lowerDatetimeRangeFullfilledTxt","typeIcons","vac","epp","ctu","pya","rys","statusIcons","E","back","A","stronggreen","D","renderUpperDetail","numberOfLines","ellipsizeMode","req_emp_name","renderMiddleDetailTwoSects","leftItem","req_wor_name","req_con_name","req_rea_name","renderLowerDetailDateRange","dateFrom","dateTo","dateFullfilled","req_fullfilled","elevation","borderTopLeftRadius","borderBottomLeftRadius","renderType","req_epp_art_name","renderDetail","borderTopRightRadius","borderBottomRightRadius","renderStatus","fullfillRequest","op","_x2","SwipeableRow","rowRef","openStop","fetchData","itemAnimate","swipeActions","onActionExec","disableLeftSwipe","disableRightSwipe","itemArgs","actions","friction","leftThreshold","rightThreshold","leftStop","rightStop","preview","previewOpenValue","previewOpenDelay","previewDuration","renderLeftActions","progress","dragX","renderActions","side","renderRightActions","onSwipeableOpen","direction","toValue","_actions$","_actions$2","close","onSwipeableClose","getState","rowState","openLeft","openRight","onItemTouch","actionStyles","itemView","backBtn","backLeftBtn","backRightBtn","leftActionVw","rightActionVw","touchActionVw","touchActionCommandVw","punchInOutTopBottomVw","punchInOutTxt","AnimateActionView","inputRange","transform","scale","interpolate","outputRange","extrapolate","SwipeAction","onTabPress","what","selectedIndex","event","nativeEvent","layout","_fetchData$find","f","HasAllPermissions","_settings$ios","getCameraPermissionsAsync","settings","getPermissionsAsync","ios","granted","IosAuthorizationStatus","AUTHORIZED","companyName","Container","useThemeGutterPadding","custom_rgb255_0_0","ScrollView","bounces","showsVerticalScrollIndicator","uuid","numColumns","getNotificationToken","isDevice","expoPushToken","getExpoPushTokenAsync","experienceId","dcSSEmployeeTokenPATCH","_yield$dcSSEmployeeTo","expoToken","tokenData","allowFontScaling","textBreakStrategy","currentDate","setDateFrom","setDateTo","setShow","rslt","getDay","setDate","setMonth","calcDateFromByOption","verylight","tio_date","tio_amount","tio_menu","tio_terminal","date2HHMM","renderIcon","docType","doc_type","docName","doc_name","docDate","doc_date","docDesc","doc_description","docUrl","doc_location","showDocument","setCurrentDate","screenData","setScreenData","shortTime","time","dateToUtcString","conceptName","_yield$DcSSApi$concep","aScreenData","dateSub","newDatePickerValue","dateInc","_listData$timesheet","_listData$timesheet2","_listData$timesheet3","_listData$timesheet4","_listData$timesheet5","_listData$timesheet6","_listData$timesheet7","_listData$timesheet8","timesheet","tim","paddingBottom","tim_horlab_sum","tim_hortrab_sum","tim_workschedule","tim_holiday","tim_st_presen","tim_st_extras","tim_st_caidas","tim_st_incon","tim_st_licdias","tim_st_ausen","tim_st_tarde","tim_st_retant","tim_st_lichoras","tir","itemsListData","tit","tit_cant","tit_tar_ret","til","til_concept_id","til_cant_liq","til_cant_aut","til_cant_noaut","setDaySheet","fetchScreenConsultaHorasExtrasScreenData","_fetchData$","a_timesheet","til_tim_id","TextStyles","reqType","canbedeleted","_yield$dcSSRequestDel","deleteRslt","dcSSRequestDeleteDELETE","renderRequestItem","rowMap","_props$route$params$d2","_props$route2","_props$route2$params","_props$route$params$d3","_props$route3","_props$route3$params","_props$route$params$d4","_props$route4","_props$route4$params","_props$route$params$d5","_props$route5","_props$route5$params","_props$route$params$d6","_props$route6","_props$route6$params","ioAction","setScreenName","_props$route$params$d","_props$route","_props$route$params","route","params","_unused2","platform","buildNumber","android","versionCode","getBuild","Switch","newSwitchValue","TextInput","multiline","pass","msg","dkey","DES3","encrypt","errorMessage","setErrorMessage","setEmail","setPassword","validate","regex","target_var","invalid","test","setVariable","isEmpty","_yield$DcSSApi$whoami","_yield$DcSSApi$tokenR","empty","breakIfEmpty","skip","whoami","homeScreen","skipIfLogged","a_refresh","a_accessToken","accessToken","newAUTH_HEADER","enableAutomaticScroll","enableOnAndroid","enableResetScrollToCoords","extraHeight","autoCapitalize","keyboardType","returnKeyType","newPasswordValue","secureTextEntry","textDecorationLine","_yield$DcSSApi$loginP","emailCheck","loginResponse","toLowerCase","passEncrypt","details","path","substring","authToken","a_emp_id","a_emp_com_id","emp_com_id","parseInt","WebBrowser","openBrowserAsync","modalLeftPadding","setModalLeftPadding","modalTopPadding","setModalTopPadding","showDrawer","setShowDrawer","showMenu","setShowMenu","_yield$DcSSApi$employ","_yield$DcSSApi$permis","initVars","routes","reset","emp_photo_rslt","a_emp_photo","permissions","perms","fetchScreenInicioScreenData","_yield$DcSSApi$compan","company_rslt","a_company_name","com_description","CircleImage","removeClippedSubviews","isVisible","animationIn","animationOut","backdropColor","backdropOpacity","onBackdropPress","onSwipeComplete","swipeDirection","swipeThreshold","hideModalContentWhileAnimating","friendlyDate","dcSSNotificationPATCH","_yield$dcSSNotificati","not_readed","not_subject","not_body","not_from_emp_name","not_date","setSHOW_CUIL_ERROR","setSHOW_EMAIL_ERROR","setSHOW_PASSWORD_ERROR","setSHOW_PASSWORD_MISMATCH_ERROR","setCuil","password_copy","setPassword_copy","showPasswordHint","extractError","top","editable","newCuilValue","newPasswordCopyValue","_yield$DcSSApi$signup","sCUIT","aMult","rawCUIT","replace","aCUIT","iResult","chkCuitChecksum","cuilCheck","passwordCheck","passwordMismatch","passwordCopy","passwordCopyCheck","signupResponse","emailVerified","username","loginError","getPermission","askPermission","_yield$CustomCode$Exp","requestPermissionsAsync","allowAlert","allowBadge","allowSound","allowAnnouncements","notificationToken","workschedule","setWorkschedule","Date2UtcString","_yield$DcSSApi$timesh","timesheetRslt","readOnly","_props$route$params$r2","_props$route$params$r3","_props$route$params$r4","_props$route7","_props$route7$params","_props$route$params$r5","_props$route8","_props$route8$params","_props$route$params$r6","_props$route9","_props$route9$params","_props$route$params$r7","_props$route10","_props$route10$params","_props$route$params$r8","_props$route11","_props$route11$params","_props$route$params$r9","_props$route12","_props$route12$params","_props$route$params$r10","_props$route13","_props$route13$params","dateFromError","setDateFromError","datePickerValue","setDatePickerValue","dateToError","setDateToError","Undef","reason","setReason","reasonError","reasonsList","setReasonsList","worksch","setWorksch","workschError","workschedulesList","setWorkschedulesList","dcSSRequestCtuPOST","_yield$DcSSApi$worksc","_yield$DcSSApi$reason","_props$route$params$w","_props$route$params$r","workschedulesResponse","w","wor_name","wor_id","reasonsResponse","r","rea_type","rea_name","rea_id","newPkrTurnoValue","newPkrTurnoROValue","newPkrMotivoValue","newPkrMotivoROValue","newDpFromValue","newDpFromROValue","newDpToValue","newDpToROValue","_yield$dcSSRequestCtu","minDate","isError","_props$route14","_props$route14$params","_props$route15","_props$route15$params","_props$route16","_props$route16$params","_props$route$params$r11","_props$route17","_props$route17$params","article","setArticle","articleDescr","setArticleDescr","setColor","elementsList","setElementsList","observ","setObserv","quantity","setQuantity","setSize","getArticleDesc","art","a","desc","dcSSRequestEppPOST","_yield$DcSSApi$eppArt","_props$route$params$a","_props$route$params$q","_props$route$params$s","_props$route$params$c","_props$route$params$o","_props$route$params$a2","elementsResponse","valueXRCZFfzL","art_name","art_id","art_description","a_elementsList","aArt","fillArticleDescr","newPkrElementValue","newPkrElementROValue","newTiQuantityValue","placeholderTextColor","newTiQuantityROValue","newTiSizeValue","newTiSizeROValue","newTiColorValue","newTiColorROValue","newTiObservValue","newTiObservROValue","_yield$dcSSRequestEpp","setConcept","conceptsList","setConceptsList","reqAmount","setReqAmount","reqLimit","setReqLimit","reqLimitText1","setReqLimitText1","_React$useState29","_React$useState30","reqLimitText2","setReqLimitText2","_React$useState31","_React$useState32","reqLimitText3","setReqLimitText3","_React$useState33","_React$useState34","reqLimitText4","setReqLimitText4","_React$useState35","_React$useState36","reqPending","setReqPending","_React$useState37","_React$useState38","reqQuotas","setReqQuotas","_React$useState39","_React$useState40","now","buttonEnabled","trunc","dcSSRequestPyaPOST","_yield$DcSSApi$reques","conceptsResponse","c","con_type","aQuota","flexWrap","accessible","GlobalStyles","newPkrConceptoValue","conId","vLimit","con_amount","con_pending","con_available","calcReqLimit","newPkrConceptoROValue","_yield$dcSSRequestPya","_yield$dcSSRequestPya2","trimSeconds","aDateTime","setSeconds","dcSSRequestRysPOST","minuteInterval","_yield$dcSSRequestRys","vacLimit","setVacLimit","dcSSRequestVacPOST","aQuotas","calcReqQuota","_yield$dcSSRequestVac","Stack","Row","newDatePickerSolidValue","showsHorizontalScrollIndicator","extractTime","tiw_in","tiw_out","tiw_concept_id","textInputValue","setTextInputValue","bottom","Circle","bgColor","newTextInputValue","underlineColorAndroid","null","createStackNavigator","createBottomTabNavigator","Navigator","initialRouteName","screenOptions","headerMode","Screen","component","IniciarSesionScreen","NuevoUsuarioScreen","headerTitle","YYYMeritoScreen","YYYConsultaPresentismoScreen","SolicitudVacacionesScreen","ActualizacionDeDatosScreen","ZZZTurnoActualScreen","ZZZConsultaReciboDeHaberesScreen","ZZZAsuntoScreen","ZZZTurnoCambiarScreen","ZZZAprobacionRespuestaScreen","YYYExcelenciaScreen","YYYNoMeAdhieroScreen","YYYSiMeAdhieroScreen","InicioScreen","ConsultaFichadasScreen","SolicitudesScreen","ZZZRequerimientosScreen","PreviewCambioTurnoScreen","ZZZAsuntosScreen","ConsultaHorasExtrasScreen","SolicitudCambioDeTurnoScreen","SolicitudPermisoAusenciaScreen","SolicitudRetiroAnticipadoScreen","SolicitudEPPScreen","AprobacionesScreen","ConsultaSolicitudesScreenOLDScreen","ConsultasScreen","ConsultaComedorScreen","AboutScreen","DevScreen","ZZZConsultaComedorScreenOLDScreen","ConsultaDocumentosScreen","DetalleDocumentoScreen","ConsultaSolicitudesScreen","YYYNotificacionesRespuestasScreen","NotificacionesScreen","ZZZEditarPerfilScreen","ZZZPerfilScreen","YYYOpcionesScreen","PermisoDeCamaraScreen","PermisoDeMicrofonoScreen","BienvenidoScreen","PermisoDeContactosScreen","PermisoDeNotificacionesScreen","CompletaInicioSessionScreen","RootAppNavigator","NavigationContainer","linking","LinkingConfiguration","headerTitleStyle","custom26","BlankScreen","REACTION_TIMEOUT","inactivityWarning","setInactivityWarning","timer","timeoutHandle","setTimeoutHandle","_Constants$AUTH_HEADE","_CustomCode$DropDownH","_CustomCode$DropDownH2","_CustomCode$DropDownH3","_CustomCode$DropDownH4","clearTimeout","UserInactivity","isActive","timeForInactivity","onAction","AppNavigator","cacheAssetsAsync","imageAssets","IMAGES","prefetch","Asset","fromModule","downloadAsync","iconAssets","AntDesign","font","Entypo","Feather","FontAwesome","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","SimpleLineIcons","Font","loadAsync","Promise","all","concat","_toConsumableArray","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","QueryClient","areAssetsCached","setAreAssetsCached","_useFonts","useFonts","Montserrat_500Medium","Montserrat_600SemiBold","fontsLoaded","fontsTimedOut","setFontsTimedOut","fontTimer","setFontTimer","warn","isReady","SafeAreaProvider","initialMetrics","initialWindowMetrics","QueryClientProvider","client","ThemeProvider","Modern","exports","style1","style2","k","v","resV","Array","isArray","_loop","innerV","forEach","_innerV$minWidth","_innerV$value","minWidth","isValidStyleValue","maxMinWidth","_v$minWidth","_v$value","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","ns","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}